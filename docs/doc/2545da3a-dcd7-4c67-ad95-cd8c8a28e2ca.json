{
    "summary": "This code uses a planning method for an AI model with four modes, employing cached data to optimize model selection. It determines the best path by considering score and demand, handling fork scenarios in optimal paths and evaluates subtasks while selecting the optimal path and logging its score.",
    "details": [
        {
            "comment": "The code is implementing a planning method for an AI model. It consists of four modes (R+, R-, P+, and P-) with different decision-making strategies and involves using cached data for model selection and solution based on feasibility. The method is still under development as there are TODOs and some parts are marked as not yet complete or discarded.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCPlan/TCPlan.m\":0-37",
            "content": "//\n//  TCPlan.m\n//  SMG_NothingIsAll\n//\n//  Created by jia on 2021/12/15.\n//  Copyright \u00a9 2021\u5e74 XiaoGang. All rights reserved.\n//\n#import \"TCPlan.h\"\n@implementation TCPlan\n/**\n *  --------------------\u65e7\u6709plan\u65b9\u6cd5--------------------\n *  \u6ce8:assExp\u8054\u60f3\u7ecf\u9a8c(\u997f\u4e86\u627e\u74dc)(\u9012\u5f52)\n *  \u6ce8:loopAssExp\u4e2d\u672c\u8eab\u5df2\u7ecf\u662f\u5185\u5fc3\u6d3b\u52a8\u8054\u60f3\u5230\u7684mv\n *  @desc\n *      1. \u56db\u79cd(2x2)TOP\u6a21\u5f0f (\u4f18\u5148\u53d6\u540c\u533a\u5de5\u4f5c\u6a21\u5f0f,\u4e0d\u884c\u518d\u4ee5\u4e0d\u540c\u533a\u5de5\u4f5c\u6a21\u5f0f);\n *      2. \u8c03\u7528\u8005\u53ea\u7ba1\u8c03\u7528\u89e6\u53d1,\u6a21\u578b\u751f\u6210,\u53c2\u6570\u4fdd\u7559;\n *  @desc P\u51b3\u7b56\u6a21\u5f0f (\u6846\u67b6: index -> mvNode -> foNode -> algNode -> action);\n *      3. \u4e0d\u6307\u5b9amodel (\u4ececmvCache\u53d6) (\u65e7\u6ce8\u91ca)\n *      4. \u6bcf\u4e00\u8f6e\u5faa\u73af\u4e0d\u4ec5\u662f\u60f3\u4e0b\u4e00\u4e2asingleMvPort;\u4e5f\u6709\u53ef\u80fd\u5728\u5f53\u524dport\u4e0a,\u8fdb\u884c\u4e8c\u6b21\u601d\u8003; (\u65e7\u6ce8\u91ca)\n *      5. \u4eceexpCache\u4e0b,\u6839\u636e\u53ef\u884c\u6027,\u9009\u5b9a\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848; (\u65e7\u6ce8\u91ca)\n *      6. \u6709\u9700\u6c42\u65f6,\u627e\u51faoutMvModel,\u5c1d\u8bd5\u51b3\u7b56\u5e76\u89e3\u51b3; (\u65e7\u6ce8\u91ca)\n *  @version\n *      20200430 : v2,\u56db\u79cd\u5de5\u4f5c\u6a21\u5f0f\u7248;\n *      20200824 : \u5c06\u5916\u5faa\u73af\u8f93\u5165\u63a8\u8fdb\u4e2d\u5faa\u73af,\u6539\u5230\u4e0a\u4e00\u6b65aiThinkIn_CommitNoMv2TC()\u4e2d;\n *  @todo\n *      1. \u96c6\u6210\u6d3b\u8dc3\u5ea6\u7684\u5224\u65ad\u548c\u6d88\u8017;\n *      2. \u96c6\u6210outModel;\n *      2021.01.22: \u5bf9ActYes\u6216\u8005OutBack\u7684Demand\u8fdb\u884c\u4e0d\u5e94\u671f\u5904\u7406 (\u672a\u5b8c\u6210);\n *  @status\n *      1. R+\u6a21\u5f0f: \u5e9f\u5f03\u72b6\u6001,\u6b64\u6a21\u5f0f\u6682\u65f6\u7528\u4e0d\u7740;\n *      2. R-\u6a21\u5f0f: \u542f\u7528\u72b6\u6001;\n *      3. P+\u6a21\u5f0f: \u5e9f\u5f03\u72b6\u6001,\u6b64\u6a21\u5f0f\u6682\u65f6\u7528\u4e0d\u7740;\n *      4. P-\u6a21\u5f0f: \u542f\u7528\u72b6\u6001;\n *\n *  MARK:--------------------\u65b0\u87ba\u65cb\u67b6\u6784plan\u5165\u53e3--------------------"
        },
        {
            "comment": "This function plans the execution of a root task by selecting the best path from the root to its subtasks based on scores and then passes the chosen solution to TCSolution for execution. It also handles fork scenarios in the optimal path.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCPlan/TCPlan.m\":38-62",
            "content": " *  @param rootDemand   : \u5f53\u524d\u6267\u884c\u7684\u6839\u4efb\u52a1;\n *  @param rootFo       : \u5f53\u524d\u9009\u5b9a\u7684\u6839\u4efb\u52a1\u4e0b\u7684\u89e3\u51b3\u65b9\u6848;\n *  @version\n *      2022.03.11: \u5c06demand\u7efc\u5408\u8bc4\u5206,\u6539\u4e3ascore4Demand\u65b9\u6cd5 (\u53c2\u800325142-TODO4);\n *  @todo\n *      2021.12.08: \u540e\u7eedsolution\u884c\u4e3a\u5316\u5904\u7406,\u6839\u636e>cutIndex\u7b5b\u9009 (\u53c2\u800324185-\u65b9\u68481-\u4ee3\u7801);\n */\n+(TCResult*) plan:(DemandModel*)rootDemand rootFo:(TOFoModel*)rootFo scoreDic:(NSMutableDictionary*)scoreDic{\n    //1. \u6839\u636e\u5f97\u5206\u5b57\u5178,\u4eceroot\u5411sub,\u53d6\u6700\u4f18\u8def\u5f84 (\u53c2\u800324195-3);\n    [theTC updateOperCount:kFILENAME];\n    Debug();\n    double demandScore = [AIScore score4Demand:rootDemand];\n    TOModelBase *endBranch = [self bestEndBranch4Plan:scoreDic curDemand:rootDemand demandScore:demandScore];\n    //2. \u4ece\u6700\u4f18\u8def\u5f84\u672b\u679d\u7684\u89e3\u51b3\u65b9\u6848,\u8f6c\u7ed9TCSolution\u6267\u884c (\u53c2\u800324195-4);\n    double endBranchScore = [NUMTOOK([scoreDic objectForKey:TOModel2Key(endBranch)]) doubleValue];\n    DebugE();\n    return [TCSolution solution:endBranch endScore:endBranchScore];\n}\n/**\n *  MARK:--------------------\u53d6\u5f53\u524d\u8981\u6267\u884c\u7684\u89e3\u51b3\u65b9\u6848--------------------\n *  @desc \u4ece\u6700\u4f18\u8def\u5f84\u7684\u672b\u5c3e\u53d6 (\u6700\u4f18\u8def\u5f84\u53ef\u80fd\u6709\u5728subRDemands\u5904\u5206\u53c9\u53e3,\u90a3\u4e48\u4f9d\u6b21\u89e3\u51b3\u53c9\u53e3\u4efb\u52a1);\n *  @version\n *      2021.12.28: \u5de5\u4f5c\u8bb0\u5fc6\u6811\u4efb\u52a1\u4e0b_\u9996\u6761S\u7684\u652f\u6301 (\u53c2\u800325042);"
        },
        {
            "comment": "This code finds the best branch for a plan based on a score dictionary and current demand. It checks if the curDemand is empty and returns if it is, filters valid actionFoModels, selects the best fo from them, and continues with the chosen fo to find the optimal solution.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCPlan/TCPlan.m\":63-84",
            "content": " *      2021.12.28: \u91cd\u65b0\u6574\u7406\u6574\u4e2a\u65b9\u6cd5,\u53c2\u8003\u8bc4\u5206\u5b57\u5178\u6570\u636e\u7ed3\u6784\u505a\u6700\u4f18\u8def\u5f84 (\u53c2\u800324196-\u793a\u56fe);\n *      2022.06.02: \u4e2d\u5c42\u4e3aactYes\u65f6,\u4e0d\u5411\u4e0b\u4f20\u67d3,\u7ee7\u7eed\u627e\u8def\u5f84 (\u53c2\u800326185-TODO7);\n *      2022.06.02: BUG_\u8fc7\u6ee4\u6389actNo\u7684\u7ed3\u679c,\u4e0d\u7136\u7ed9solution\u4e00\u4e2aactNo\u7684\u6700\u4f73\u8def\u5f84\u5c34\u5c2c\u4e86;\n *      2023.02.28: R\u5b50\u4efb\u52a1\u4e0d\u6c42\u89e3 (\u53c2\u800328135-2);\n *      2023.07.09: \u6253\u5f00\u5b50\u4efb\u52a1\u5f00\u5173,\u56e0\u4e3a\u660e\u660e\u6709\u5b50\u4efb\u52a1\u5374\u4e0d\u6fc0\u6d3b\u7684\u8bdd,\u6709\u53ef\u80fd\u5b83\u7684\u7236\u4efb\u52a1\u4e0d\u65ad\u53cd\u601d\u51fa\u5b50\u4efb\u52a1\u518d\u56de\u6765\u53c8\u6fc0\u6d3b\u7236\u4efb\u52a1,\u4e0d\u65ad\u751f\u6210\u5b50\u4efb\u52a1,\u5bfc\u81f4\u6b7b\u5faa\u73af (\u53c2\u800330055);\n *      2023.08.21: \u8c03\u6574\u5b50\u4efb\u52a1\u7684\u4f18\u5148\u7ea7: \u53cd\u601d\u901a\u8fc7\u65f6\u5b50H\u4efb\u52a1\u4f18\u5148,\u53cd\u601d\u4e0d\u901a\u8fc7\u65f6\u5b50R\u4efb\u52a1\u4f18\u5148 (\u53c2\u800330114-todo2);\n *  @result\n *      1. \u8fd4\u56de\u7a7aS\u7684Demand\u65f6,\u6267\u884csolution\u627e\u89e3\u51b3\u65b9\u6848;\n *      2. \u8fd4\u56de\u8def\u5f84\u672b\u679dBestFo\u65f6,\u6267\u884caction\u884c\u4e3a\u5316;\n *      3. \u8fd4\u56denil\u65f6,\u4e2d\u6b62\u51b3\u7b56\u7ee7\u7eed\u7b49\u5f85;\n */\n+(TOModelBase*) bestEndBranch4Plan:(NSMutableDictionary*)scoreDic curDemand:(DemandModel*)curDemand demandScore:(double)demandScore{\n    //1. \u5982\u679ccurDemand\u4e3a\u7a7aS,\u5219\u76f4\u63a5\u8fd4\u56de (\u53c2\u800325042-5);\n    NSArray *validActionFos = [SMGUtils filterArr:curDemand.actionFoModels checkValid:^BOOL(TOFoModel *obj) {\n        return obj.status != TOModelStatus_ActNo;\n    }];\n    if (!ARRISOK(validActionFos)) return curDemand;\n    //2. \u4eceactionFoModels\u627e\u51fa\u6700\u597d\u7684\u5206\u652f\u7ee7\u7eed (\u53c2\u800324196-\u793a\u56fe & 25042-6);\n    TOFoModel *bestFo = nil;\n    for (TOFoModel *itemFo in validActionFos) {"
        },
        {
            "comment": "This code checks if a specific item's score is greater than the best score, updates the best score and item accordingly. It then judges whether to continue or end the process based on the best score's relation to the demand score. If the process continues, it gathers subR and subH demands, prioritizing subH if the model passed reflection and subR if it didn't.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCPlan/TCPlan.m\":85-107",
            "content": "        double itemScore = [NUMTOOK([scoreDic objectForKey:TOModel2Key(itemFo)]) doubleValue];\n        double bestScore = [NUMTOOK([scoreDic objectForKey:TOModel2Key(bestFo)]) doubleValue];\n        if (!bestFo || itemScore > bestScore) bestFo = itemFo;\n    }\n    //3. \u611f\u6027\u6dd8\u6c70\u5219\u4e2d\u6b62\u6df1\u5165 (\u5224\u65ad\u6761\u4ef6 = bestFo\u5f97\u5206 < demandScore) (\u53c2\u800325042-7);\n    double bestScore = [NUMTOOK([scoreDic objectForKey:TOModel2Key(bestFo)]) doubleValue];\n    if (bestScore < demandScore) return curDemand;\n    //4. \u611f\u6027\u672a\u6dd8\u6c70\u5219\u7ee7\u7eed\u6df1\u5165\u5206\u652f (\u5224\u65ad\u6761\u4ef6 = bestFo\u5f97\u5206 > demandScore) (\u53c2\u800325042-6);\n    //4. \u672a\u611f\u6027\u6dd8\u6c70,\u90a3\u4e48\u5b83\u7684\u5b50R\u548cH\u4efb\u52a1\u4e2d,\u80af\u5b9a\u6709\u4e00\u4e2a\u662f\u672a\"\u7406\u6027\u6dd8\u6c70\"\u7684: \u6536\u96c6R\u548cH\u4efb\u52a1;\n    NSMutableArray *allSubDemands = [[NSMutableArray alloc] init];\n    //5. \u6570\u636e\u51c6\u5907: \u5b50R\u548c\u5b50H\u4efb\u52a1;\n    NSArray *subRDemands = bestFo.subDemands;\n    NSArray *subHDemands = [SMGUtils convertArr:bestFo.subModels convertBlock:^id(TOAlgModel *item) {\n        HDemandModel *hDemand = ARR_INDEX(item.subDemands, 0);\n        return hDemand;\n    }];\n    //6. \u4f18\u5148\u7ea7: \u53cd\u601d\u901a\u8fc7\u65f6\u5b50H\u4efb\u52a1\u4f18\u5148,\u53cd\u601d\u4e0d\u901a\u8fc7\u65f6\u5b50R\u4efb\u52a1\u4f18\u5148 (\u53c2\u800330114-todo2);\n    if (bestFo.refrectionNo) {\n        [allSubDemands addObjectsFromArray:subRDemands];"
        },
        {
            "comment": "This code is part of a decision-making algorithm that explores different paths and selects the optimal one. It checks the status of each subtask, eliminates those with \"WithOut\" or \"Finish\" status, and continues to explore until it finds the best end branch for the current demand. If no suitable subtasks are found, it returns nil. Finally, it logs a test message with the selected path score.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCPlan/TCPlan.m\":108-131",
            "content": "        [allSubDemands addObjectsFromArray:subHDemands];\n    } else {\n        [allSubDemands addObjectsFromArray:subHDemands];\n        [allSubDemands addObjectsFromArray:subRDemands];\n    }\n    //7. \u5411\u672b\u679d\u8def\u5f84\u63a2\u7d22: \u4eceR\u5230H\u9010\u4e00\u5c1d\u8bd5\u6700\u4f18\u8def\u5f84,\u4ece\u4e2d\u627e\u51fa\u90a3\u4e2a\u672a\"\u7406\u6027\u6dd8\u6c70\"\u7684,\u9012\u5f52\u5224\u65ad;\n    for (DemandModel *subDemand in allSubDemands) {\n        //8. \u5224\u65adsubDemand.status\u662f\u5426\u5df2finish -> \u65e0\u9700\u89e3\u51b3 (\u53c2\u800325042-2);\n        if (subDemand.status == TOModelStatus_Finish) continue;\n        //9. \u5224\u65adsubDemand.status\u662fwithOut\u72b6\u6001 -> \u65e0\u89e3\u8ba4\u547d (\u53c2\u800325042-2);\n        if (subDemand.status == TOModelStatus_WithOut) continue;\n        //10. \u5224\u65adsubDemand.status\u662factYes\u72b6\u6001 -> \u7ee7\u7eed\u7b49\u5f85 (\u53c2\u800325042-3);\n        //if (subDemand.status == TOModelStatus_ActYes) return nil;\n        //11. \u672a\u611f\u6027\u6dd8\u6c70\u7684,\u4e00\u6761\u8def\u8d70\u5230\u9ed1(\u9012\u5f52\u5faa\u73af),\u7136\u540e\u628a\u6700\u540e\u7684\u7ed3\u679creturn\u8fd4\u56de;\n        return [self bestEndBranch4Plan:scoreDic curDemand:subDemand demandScore:demandScore];\n    }\n    //12. bestFo\u6ca1\u6709\u5b50\u4efb\u52a1subDemands\u53ef\u51b3\u7b56\u7684,\u5219\u76f4\u63a5\u6267\u884cbestFo\u4e3a\u672b\u679d (\u53c2\u800325042-8);\n    NSLog(@\"\u53d6\u5206: K:%@ => V:%@\u5206\",TOModel2Key(bestFo),[scoreDic objectForKey:TOModel2Key(bestFo)]);\n    [AITest test10:bestFo];"
        },
        {
            "comment": "The given code segment returns the bestFo value after evaluating it within a class.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCPlan/TCPlan.m\":132-135",
            "content": "    return bestFo;\n}\n@end"
        }
    ]
}