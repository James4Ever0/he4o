{
    "summary": "This code defines methods for retrieving non-directory files and folders in specified paths, as well as filtering file path arrays based on directory types.",
    "details": [
        {
            "comment": "This code defines a category on NSFile, which provides two methods: subFiles and subFiles_AllDeep. The subFiles method returns an array of non-directory files in the specified path, while subFiles_AllDeep recursively collects all non-directory files within directories found at the specified path.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/Demo/Extension/NSFile+Extension.m\":0-34",
            "content": "//\n//  NSFile+Extension.m\n//  SMG_NothingIsAll\n//\n//  Created by jia on 2020/12/9.\n//  Copyright \u00a9 2020\u5e74 XiaoGang. All rights reserved.\n//\n#import \"NSFile+Extension.h\"\n@implementation NSFile_Extension\n+(NSArray*)subFiles:(NSString*)path{\n    //1. \u6570\u636e\u51c6\u5907\n    NSArray *subPaths = [self subPaths:path];\n    //2. \u7b5b\u9009\u6587\u4ef6\u5939\u8fd4\u56de\n    return [SMGUtils filterArr:subPaths checkValid:^BOOL(NSString *subPath) {\n        BOOL isDirectory = YES;\n        return [[NSFileManager defaultManager] fileExistsAtPath:subPath isDirectory:&isDirectory] && !isDirectory;\n    }];\n}\n+ (NSArray*)subFiles_AllDeep:(NSString*)path{\n    //1. \u6570\u636e\u51c6\u5907\n    NSMutableArray *array = [[NSMutableArray alloc] init];\n    NSArray *subPaths = [self subPaths:path];\n    //2. \u5206\u522b\u6536\u96c6\u5b50\u6587\u4ef6;\n    for (NSString *subPath in subPaths) {\n        BOOL isDirectory = YES;\n        if ([[NSFileManager defaultManager] fileExistsAtPath:subPath isDirectory:&isDirectory]) {\n            //3. \u6587\u4ef6\u5939\u65f6\u9012\u5f52\u6536\u96c6;\n            if (isDirectory) {\n                [array addObjectsFromArray:[self subFiles_AllDeep:subPath]];"
        },
        {
            "comment": "This code defines three methods: subPaths, subFolders, and filterArr. The `subPaths` method returns an array of full paths to all files and folders in a specified directory. The `subFolders` method filters the results returned by `subPaths` to only include folders. Lastly, the `filterArr` method filters an array based on a provided validation block. Overall, this code provides functionality for collecting and filtering file paths based on their directory type.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/Demo/Extension/NSFile+Extension.m\":35-69",
            "content": "            }else{\n                //4. \u6587\u4ef6\u65f6,\u76f4\u63a5\u6536\u96c6;\n                [array addObject:subPath];\n            }\n        }\n    }\n    return array;\n}\n+(NSArray*)subFolders:(NSString*)path{\n    //1. \u6570\u636e\u51c6\u5907\n    NSArray *subPaths = [self subPaths:path];\n    //2. \u7b5b\u9009\u6587\u4ef6\u5939\u8fd4\u56de\n    return [SMGUtils filterArr:subPaths checkValid:^BOOL(NSString *subPath) {\n        BOOL isDirectory = YES;\n        return [[NSFileManager defaultManager] fileExistsAtPath:subPath isDirectory:&isDirectory] && isDirectory;\n    }];\n}\n//\u6240\u6709\u5b50\u6587\u4ef6\u4e0e\u6587\u4ef6\u5939\u5168\u6536\u96c6 notnull;\n+(NSArray*)subPaths:(NSString*)path{\n    //1. \u6570\u636e\u51c6\u5907\n    NSMutableArray *array = [[NSMutableArray alloc] init];\n    NSArray *subFileNames = [[NSFileManager defaultManager] contentsOfDirectoryAtPath:path error:nil];\n    //2. \u5206\u522b\u6536\u96c6\u5b50\u6587\u4ef6;\n    for (NSString *fileName in subFileNames) {\n        NSString *fullPath = [path stringByAppendingPathComponent:fileName];\n        [array addObject:fullPath];\n    }\n    return array;\n}\n@end"
        }
    ]
}