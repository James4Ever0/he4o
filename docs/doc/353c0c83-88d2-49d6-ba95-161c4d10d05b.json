{
    "summary": "The AINodeBase.m file contains the implementation of the AINodeBase class, responsible for managing ports and arrays in SMG_NothingIsAll. The class provides functions for connections, count, content_ps, and port initialization using getStrongBlock function. It also includes a pointer comparison method, implements NSCoding protocol, and adds copying of ports to avoid crashes on December 27th update.",
    "details": [
        {
            "comment": "AINodeBase.m file contains implementation of AINodeBase class, which is a part of SMG_NothingIsAll project. The class provides methods for working with ports and port content arrays. Methods include `conPorts`, `absPorts`, and `contentPorts` to manage connections and absolute ports. The class also includes public methods such as `count` and `content_ps`.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AINet/AINode/AINodeBase.m\":0-36",
            "content": "//\n//  AINodeBase.m\n//  SMG_NothingIsAll\n//\n//  Created by jiaxiaogang on 2018/9/26.\n//  Copyright \u00a9 2018\u5e74 XiaoGang. All rights reserved.\n//\n#import \"AINodeBase.h\"\n#import \"AIKVPointer.h\"\n@implementation AINodeBase\n-(NSMutableArray *)conPorts{\n    if (!ISOK(_conPorts, NSMutableArray.class)) _conPorts = [[NSMutableArray alloc] initWithArray:_conPorts];\n    return _conPorts;\n}\n-(NSMutableArray *)absPorts{\n    if (!ISOK(_absPorts, NSMutableArray.class)) _absPorts = [[NSMutableArray alloc] initWithArray:_absPorts];\n    return _absPorts;\n}\n-(NSMutableArray *)contentPorts{\n    if (_contentPorts == nil) _contentPorts = [[NSMutableArray alloc] init];\n    return _contentPorts;\n}\n//MARK:===============================================================\n//MARK:                     < publicMethod >\n//MARK:===============================================================\n-(NSInteger) count{\n    return self.content_ps.count;\n}\n-(NSMutableArray *)content_ps{\n    return [SMGUtils convertArr:self.contentPorts convertBlock:^id(AIPort *obj) {"
        },
        {
            "comment": "This code sets the content_ps of an AIKVPointer object and assigns a getStrongBlock to be called when needed. It ensures that header is correctly calculated from sorted content pointers, and generates ports based on this information.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AINet/AINode/AINodeBase.m\":37-69",
            "content": "        return obj.target_p;\n    }];\n}\n-(void) setContent_ps:(NSArray*)content_ps {\n    [self setContent_ps:content_ps getStrongBlock:^NSInteger(AIKVPointer *item_p) {\n        return 1;\n    }];\n}\n-(AIKVPointer*) p {\n    return self.pointer;\n}\n-(NSInteger) pId {\n    return self.pointer.pointerId;\n}\n/**\n *  MARK:--------------------\u8bbe\u7f6e\u5f15\u7528--------------------\n *  @version\n *      2023.04.15: BUG_\u6b64\u5904header\u5e94\u8be5\u4ee5alg\u5143\u7d20\u4e3a\u51c6;\n *      2023.06.18: \u652f\u6301mvNode\u53d6content_ps\u4e3adelta_p\u548curgent_p,\u907f\u514dnil\u751f\u6210header,\u5bfc\u81f4\u5206\u4e0d\u6e05mv\u548c\u7a7a\u6982\u5ff5 (\u53c2\u800330026-\u4fee\u590d);\n */\n-(void) setContent_ps:(NSArray*)content_ps getStrongBlock:(NSInteger(^)(AIKVPointer *item_p))getStrongBlock{\n    content_ps = ARRTOOK(content_ps);\n    self.contentPorts = [SMGUtils convertArr:content_ps convertBlock:^id(AIKVPointer *obj) {\n        //1. \u6570\u636e\u51c6\u5907: \u6c42\u51faheader\n        AIAlgNodeBase *alg = [SMGUtils searchNode:obj];\n        NSArray *sortValue_ps = ARRTOOK([SMGUtils sortPointers:alg.content_ps]);\n        NSString *header = [NSString md5:[SMGUtils convertPointers2String:sortValue_ps]];\n        //2. \u751f\u6210port"
        },
        {
            "comment": "This code appears to be part of a class implementation for an AI node base. It initializes a port object and assigns target, header, and strong values using getStrongBlock function. The code also includes a private method that compares two AINodeBase objects based on their pointers. Additionally, the code implements NSCoding protocol methods for decoding and encoding instances of this class.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AINet/AINode/AINodeBase.m\":70-103",
            "content": "        AIPort *port = [[AIPort alloc] init];\n        port.target_p = obj;\n        port.header = header;\n        port.strong.value = getStrongBlock(obj);\n        return port;\n    }];\n}\n//MARK:===============================================================\n//MARK:                     < privateMethod >\n//MARK:===============================================================\n-(BOOL)isEqual:(AINodeBase*)object{\n    return [self.pointer isEqual:object.pointer];\n}\n/**\n *  MARK:--------------------NSCoding--------------------\n */\n- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder {\n    self = [super init];\n    if (self) {\n        self.pointer = [aDecoder decodeObjectForKey:@\"pointer\"];\n        self.conPorts = [aDecoder decodeObjectForKey:@\"conPorts\"];\n        self.absPorts = [aDecoder decodeObjectForKey:@\"absPorts\"];\n        self.contentPorts = [aDecoder decodeObjectForKey:@\"contentPorts\"];\n    }\n    return self;\n}\n/**\n *  MARK:--------------------\u5e8f\u5217\u5316--------------------\n *  @bug\n *      2020.07.10: \u6700\u8fd1\u8001\u95ea\u9000,\u524d\u6bb5\u65f6\u95f4XGWedis\u5f02\u6b65\u5b58\u753110s\u6539\u4e3a2s,\u6709UMeng\u770b\u662f\u8fd9\u91cc\u95ea\u7684,\u6253try\u4e5f\u80fd\u6355\u83b7\u8fd9\u91cc\u629b\u4e86\u5f02\u5e38,\u5c06ports\u52a0\u4e86copy\u8bd5\u4e0b,\u5e94\u8be5\u597d\u4e86;"
        },
        {
            "comment": "This method encodes the object's properties using an NSCoder. The changes made on December 27th were to add copying of the ports to prevent crashes. The conPorts, absPorts, and refPorts arrays all have been copied to avoid potential issues.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AINet/AINode/AINodeBase.m\":104-113",
            "content": " *      2020.12.27: \u8001\u95ea\u9000,\u5c06ports\u52a0\u4e86copy\u5e94\u8be5\u5c31\u597d\u4e86 (\u539f\u6765\u5c31\u6709\u8fc7\u7c7b\u4f3c\u95ee\u9898,\u8fd9\u6b21\u5168\u5c40conPorts,absPorts\u548crefPorts\u90fd\u52a0\u4e86copy);\n */\n- (void)encodeWithCoder:(NSCoder *)aCoder {\n    [aCoder encodeObject:self.pointer forKey:@\"pointer\"];\n    [aCoder encodeObject:[self.conPorts copy] forKey:@\"conPorts\"];\n    [aCoder encodeObject:[self.absPorts copy] forKey:@\"absPorts\"];\n    [aCoder encodeObject:[self.contentPorts copy] forKey:@\"contentPorts\"];\n}\n@end"
        }
    ]
}