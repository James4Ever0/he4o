{
    "summary": "The code initializes a FoodView, sets its appearance and default status as border, loads a nib file, adds container view, applies constraints, and defines methods to update display and respond to hits.",
    "details": [
        {
            "comment": "This code is initializing a FoodView, setting its frame, corner radius, and masking to bounds. It also sets the border color and background color to green. Additionally, it loads a nib file named after the class itself, adds the container view as a subview, and applies constraints to center the container view within the FoodView.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/Demo/BirdLivePage/View/FoodView.m\":0-43",
            "content": "//\n//  FoodView.m\n//  SMG_NothingIsAll\n//\n//  Created by jiaxiaogang on 2018/11/9.\n//  Copyright \u00a9 2018\u5e74 XiaoGang. All rights reserved.\n//\n#import \"FoodView.h\"\n#import \"MASConstraint.h\"\n#import \"View+MASAdditions.h\"\n@interface FoodView ()\n@property (strong,nonatomic) IBOutlet UIView *containerView;\n@end\n@implementation FoodView\n-(id) init {\n    self = [super init];\n    if(self != nil){\n        [self initView];\n        [self initData];\n        [self initDisplay];\n    }\n    return self;\n}\n-(void) initView{\n    //self\n    [self setFrame:CGRectMake(0, 50, 5, 5)];\n    [self.layer setCornerRadius:2.5f];\n    [self.layer setMasksToBounds:true];\n    [self.layer setBorderColor:[UIColor grayColor].CGColor];\n    [self setBackgroundColor:[UIColor greenColor]];\n    //containerView\n    [[NSBundle mainBundle] loadNibNamed:NSStringFromClass(self.class) owner:self options:nil];\n    [self addSubview:self.containerView];\n    [self.containerView mas_makeConstraints:^(MASConstraintMaker *make) {\n        make.leading.mas_equalTo(self);\n        make.trailing.mas_equalTo(self);"
        },
        {
            "comment": "This code initializes a food view, sets its default status as border, and defines methods to update its display and respond to hits. The refreshDisplay method adjusts the view's border width based on its current status, and hit updates the status and refreshes the display accordingly. The setStatus method allows setting the status directly and triggers a refresh.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/Demo/BirdLivePage/View/FoodView.m\":44-80",
            "content": "        make.top.mas_equalTo(self);\n        make.bottom.mas_equalTo(self);\n    }];\n}\n-(void) initData{\n    self.status = FoodStatus_Border;\n}\n-(void) initDisplay{\n    [self refreshDisplay];\n}\n//MARK:===============================================================\n//MARK:                     < method >\n//MARK:===============================================================\n-(void) refreshDisplay{\n    if (self.status == FoodStatus_Border) {\n        [self.layer setBorderWidth:1];\n    }else if(self.status == FoodStatus_Eat){\n        [self.layer setBorderWidth:0];\n    }else if(self.status == FoodStatus_Remove){\n        [self removeFromSuperview];\n    }\n}\n-(void) hit{\n    self.status ++;\n    [self refreshDisplay];\n}\n-(void)setStatus:(FoodStatus)status {\n    _status = status;\n    [self refreshDisplay];\n}\n@end"
        }
    ]
}