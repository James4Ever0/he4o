{
    "summary": "The code initializes a TVSettingWindow object with frame, nib file, and constraints, handles open/close, updates button colors with switch settings, defines button click actions for the window, and uses auto layout.",
    "details": [
        {
            "comment": "This code initializes a TVSettingWindow object by setting its frame, loading the nib file, and adding the containerView as a subview with specified constraints. The initData and initDisplay methods are also called to further configure the window.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/ThirdParty/TOMVision2/Panel/TVSettingWindow.m\":0-41",
            "content": "//\n//  TVSettingWindow.m\n//  SMG_NothingIsAll\n//\n//  Created by jia on 2022/10/12.\n//  Copyright \u00a9 2022\u5e74 XiaoGang. All rights reserved.\n//\n#import \"TVSettingWindow.h\"\n#import \"MASConstraint.h\"\n#import \"View+MASAdditions.h\"\n@interface TVSettingWindow ()\n@property (strong, nonatomic) IBOutlet UIView *containerView;\n@property (weak, nonatomic) IBOutlet UIButton *finishBtn;\n@property (weak, nonatomic) IBOutlet UIButton *expiredBtn;\n@property (weak, nonatomic) IBOutlet UIButton *actYesBtn;\n@property (weak, nonatomic) IBOutlet UIButton *withOutBtn;\n@end\n@implementation TVSettingWindow\n-(id) init {\n    self = [super init];\n    if(self != nil){\n        [self initView];\n        [self initData];\n        [self initDisplay];\n    }\n    return self;\n}\n-(void) initView{\n    //self\n    [self setFrame:CGRectMake(ScreenWidth - 100, ScreenHeight - 240, 100, 200)];\n    //containerView\n    [[NSBundle mainBundle] loadNibNamed:NSStringFromClass(self.class) owner:self options:nil];\n    [self addSubview:self.containerView];\n    [self.containerView mas_makeConstraints:^(MASConstraintMaker *make) {"
        },
        {
            "comment": "This code appears to be part of a user interface view controller class. It includes methods for initializing data, display, and handling public method calls like open and close. The refreshDisplay method updates button colors based on switch settings. The view is positioned within its superview using auto layout constraints.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/ThirdParty/TOMVision2/Panel/TVSettingWindow.m\":42-77",
            "content": "        make.leading.mas_equalTo(self);\n        make.trailing.mas_equalTo(self);\n        make.top.mas_equalTo(self);\n        make.bottom.mas_equalTo(self);\n    }];\n}\n-(void) initData{\n}\n-(void) initDisplay{\n    [self refreshDisplay];\n    [self close];\n}\n//MARK:===============================================================\n//MARK:                     < publicMethod >\n//MARK:===============================================================\n-(void) open{\n    [theApp.window addSubview:self];\n}\n-(void) close{\n    [self removeFromSuperview];\n}\n-(void) refreshDisplay{\n    self.finishBtn.backgroundColor = self.finishSwitch ? UIColor.greenColor : UIColor.redColor;\n    self.expiredBtn.backgroundColor = self.expiredSwitch ? UIColor.greenColor : UIColor.redColor;\n    self.withOutBtn.backgroundColor = self.withOutSwitch ? UIColor.greenColor : UIColor.redColor;\n    self.actYesBtn.backgroundColor = self.actYesSwitch ? UIColor.greenColor : UIColor.redColor;\n}\n//MARK:===============================================================\n//MARK:                     < click >"
        },
        {
            "comment": "This code defines various button click actions for a window. The actYesBtnClick, withOutBtnClick, expiredBtnClick, and finishBtnClick methods each toggle a corresponding switch's state and then refresh the display. The closeBtnClick method simply closes the window.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/ThirdParty/TOMVision2/Panel/TVSettingWindow.m\":78-100",
            "content": "//MARK:===============================================================\n- (IBAction)actYesBtnClick:(id)sender {\n    self.actYesSwitch = !self.actYesSwitch;\n    [self refreshDisplay];\n}\n- (IBAction)withOutBtnClick:(id)sender {\n    self.withOutSwitch = !self.withOutSwitch;\n    [self refreshDisplay];\n}\n- (IBAction)expiredBtnClick:(id)sender {\n    self.expiredSwitch = !self.expiredSwitch;\n    [self refreshDisplay];\n}\n- (IBAction)finishBtnClick:(id)sender {\n    self.finishSwitch = !self.finishSwitch;\n    [self refreshDisplay];\n}\n- (IBAction)closeBtnClick:(id)sender {\n    [self close];\n}\n@end"
        }
    ]
}