{
    "summary": "The TCActYes class in Swift programs predicts tor_Forecast, updates demand models, triggers perception rethink, and performs reflective analysis for ActYes situations, while processing TOFoModel data and handling roots as part of feedback processing.",
    "details": [
        {
            "comment": "This code is part of the TCActYes class implementation and defines its functionality. It is responsible for predicting tor_Forecast when ActYes is triggered, calling the AITime trigger if out, and building a biological clock trigger for timeout-based reflection if inputs for rational progress or emotional offsets are not present. The code also includes various notes and todo items related to updates and fixes made over time.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCActYes/TCActYes.m\":0-30",
            "content": "//\n//  TCActYes.m\n//  SMG_NothingIsAll\n//\n//  Created by jia on 2021/12/26.\n//  Copyright \u00a9 2021\u5e74 XiaoGang. All rights reserved.\n//\n#import \"TCActYes.h\"\n@implementation TCActYes\n/**\n *  @desc : \u9884\u6d4btor_Forecast: \u5f53ActYes\u65f6,\u4e00\u822c\u7b49\u5f85\u5916\u5faa\u73af\u53cd\u9988,\u800c\u6b64\u5904\u6784\u5efa\u751f\u7269\u949f\u89e6\u53d1\u5668,\u7528\u4e8e\u8d85\u65f6\u65f6\u89e6\u53d1\u53cd\u7701\u7c7b\u6bd4;\n *      1. \u8c03\u7528AITime\u89e6\u53d1\u5668 (\u4e3a\u4e86Out\u53cd\u7701);\n *      2. \u5f53\u751f\u7269\u949f\u89e6\u53d1\u5668\u89e6\u53d1\u65f6,\u5982\u679c\u672a\u8f93\u5165\u6709\u6548\"\u7406\u6027\u63a8\u8fdb\" \u6216 \"\u611f\u6027\u62b5\u6d88\",\u5219\u5bf9\u8fd9\u4e9b\u671f\u671b\u4e0e\u5b9e\u9645\u7684\u5dee\u8ddd\u8fdb\u884c\u53cd\u7701\u7c7b\u6bd4;\n *  @callers\n *      1. demand.ActYes\u5904\n *      2. \u884c\u4e3a\u5316Hav().HNGL.ActYes\u5904\n *      3. \u884c\u4e3a\u8f93\u51faActYes\u5904\n *  @todo\n *      2020.08.31: \u5bf9isOut\u89e6\u53d1\u7684,\u5148\u4e0d\u505a\u5904\u7406,\u56e0\u4e3a\u4e00\u822c\u90fd\u80fd\u76f4\u63a5\u884c\u4e3a\u8f93\u51fa\u5e76\u5339\u914d\u4e0a,\u6240\u4ee5\u6682\u4e0d\u5904\u7406;\n *  @version\n *      2020.10.17: \u5728\u751f\u7269\u949f\u89e6\u53d1\u5668\u89e6\u53d1\u5668,\u505a\u6709\u6839\u5224\u5b9a,\u4efb\u52a1\u5931\u6548\u65f6,\u4e0d\u8fdb\u884c\u53cd\u7701 (\u53c2\u8003note21-todolist-1);\n *      2020.12.18: HNGL\u5931\u8d25\u65f6\u518d\u8c03\u7528Begin\u4f1a\u6b7b\u5faa\u73af\u7684\u95ee\u9898,\u6539\u4e3aHNGL.ActYes\u5931\u8d25\u65f6,\u5219\u76f4\u63a5\u8c03\u7528FC.Failure(hnglAlg);\n *      2021.01.27: R-\u6a21\u5f0f\u7684ActYes\u4ec5\u8d4b\u503c,\u4e0d\u5728\u6b64\u5904\u505a\u89e6\u53d1\u5668 (\u53c2\u800322081-todo4);\n *      2021.01.28: R-\u6a21\u5f0f\u7684ActYes\u5728\u6b64\u5904\u89e6\u53d1Out\u53cd\u7701,\u4e0e\u6628\u5929\u601d\u8003\u7684In\u53cd\u7701\u89e6\u53d1\u4e0d\u51b2\u7a81 (\u53c2\u800322082);\n *      2021.01.28: ReasonDemand\u89e6\u53d1\u540e,\u65e0\u8bba\u6210\u529f\u5931\u8d25,\u90fd\u79fb\u51fa\u4efb\u52a1\u6c60 (\u53c2\u800322081-todo2&3);\n *      2021.03.11: \u652f\u6301\u7b2c\u56db\u4e2a\u89e6\u53d1\u5668,R-\u6a21\u5f0f\u65f6\u7406\u6027\u5e27\u63a8\u8fdb\u7684\u89e6\u53d1 (\u53c2\u8003n22p15-\u9759\u9ed8\u6210\u529f);\n *      2021.05.09: \u5bf9HNGL\u7684\u89e6\u53d1,\u91c7\u7528AINoRepeatRun\u9632\u91cd\u89e6\u53d1 (\u53c2\u800323071-\u65b9\u68482);\n *      2021.06.09: \u4fee\u590d\u9759\u9ed8\u6210\u529f\u4efb\u52a1\u7684deltaTime\u4e00\u76f4\u4e3a0\u7684BUG (\u53c2\u800323125);"
        },
        {
            "comment": "Code snippet updates the root status to \"ActYes\", finds the demand index, and if not -1, calculates delta time between cutIndex and findIndex from matchFo.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCActYes/TCActYes.m\":31-56",
            "content": " *      2021.06.10: \u5b50\u4efb\u52a1\u5224\u65ad\u4e0d\u4e86havRoot,\u6539\u4e3a\u5224\u65adroot\u662f\u5426\u5df2\u7ecffinish,\u56e0\u4e3a\u5728tor_OPushM\u4e2dfinish\u7684\u4efb\u52a1actYes\u662f\u4e0d\u751f\u6548\u7684;\n *      2021.12.02: \u5c06\u65e7\u67b6\u6784actYes\u7684\u4ee3\u7801\u79fb\u8fc7\u6765 (\u53c2\u800324164);\n *      2021.12.27: arsTime\u89e6\u53d1\u540e\u7684\u53cd\u9988\u5904\u7406 (\u6709\u53cd\u9988\u5219\u7ee7\u7eed\u89e3\u51b3\u65b9\u6848,\u65e0\u53cd\u9988\u5219\u7236\u4efb\u52a1\u81ea\u6108);\n *      2022.05.19: \u5e9f\u5f03 (\u53c2\u800326051);\n */\n//arsTime\u6a21\u5f0f,\u5f53\u8bc4\u4ef7\u9700\u7b49\u5f85\u65f6,actYes;\n//+(void) arsTimeActYes:(TOAlgModel*)algModel{\n//    \n//    //1. R\u6a21\u5f0f\u9759\u9ed8\u6210\u529f\u5904\u7406 (\u7b49\u5f85\u5176\u81ea\u7136\u51fa\u73b0,\u907f\u514d\u5f04\u5de7\u6210\u62d9) (\u53c2\u800322153-A2);\n//    [theTC updateOperCount:kFILENAME];\n//    Debug();\n//    ReasonDemandModel *rDemand = (ReasonDemandModel*)algModel.baseOrGroup.baseOrGroup;\n//    TOFoModel *dsFoModel = (TOFoModel*)algModel.baseOrGroup;\n//    \n//    //2. root\u8bbe\u4e3aactYes\n//    DemandModel *root = [TOUtils getRootDemandModelWithSubOutModel:algModel];\n//    root.status = TOModelStatus_ActYes;\n//    \n//    //4. \u627e\u51fa\u4e0b\u6807;\n//    __block NSInteger demandIndex = -1;\n//    [AIScore score4ARSTime:dsFoModel demand:rDemand finishBlock:^(NSInteger _dsIndex, NSInteger _demandIndex) {\n//        demandIndex = _demandIndex;\n//    }];\n//    \n//    if (demandIndex != -1) {\n//        //5. \u4ecedemand.matchFo\u7684cutIndex\u5230findIndex\u4e4b\u95f4\u53d6deltaTime\u4e4b\u548c;"
        },
        {
            "comment": "This code sets a time trigger, and logs information about the triggered task's model layer and demand layer. If there is no root in the model, it filters and checks valid demands using SMGUtils.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCActYes/TCActYes.m\":57-70",
            "content": "//        AIFoNodeBase *matchFo = [SMGUtils searchNode:rDemand.mModel.matchFo];\n//        double deltaTime = [TOUtils getSumDeltaTime:matchFo startIndex:rDemand.mModel.cutIndex2 endIndex:demandIndex];\n//        \n//        //3. \u89e6\u53d1\u5668;\n//        NSLog(@\"---//\u89e6\u53d1\u5668R-_\u9759\u9ed8\u6210\u529f\u4efb\u52a1Create:%@ \u89e3\u51b3\u65b9\u6848:%@ time:%f\",FoP2FStr(dsFoModel.content_p),Pit2FStr(algModel.content_p),deltaTime);\n//        NSInteger modelLayer = [TOUtils getBaseOutModels_AllDeep:algModel].count;\n//        NSInteger demandLayer = [TOUtils getBaseDemands_AllDeep:algModel].count;\n//        NSLog(@\"FC-ACTYES (\u6240\u5728\u5c42:%ld / \u4efb\u52a1\u5c42:%ld) %@\",modelLayer,demandLayer,Pit2FStr(algModel.content_p));\n//        //NSLog(@\"%@\",TOModel2Root2Str(actYesModel));\n//        [AITime setTimeTrigger:deltaTime trigger:^{\n//            \n//            //3. \u65e0root\u65f6,\u8bf4\u660e\u5df2\u88ab\u522b\u7684R-\u65b0matchFo\u62b5\u6d88\u6389,\u62b5\u6d88\u6389\u540e\u662f\u4e0d\u505a\u53cd\u7701\u7684 (\u53c2\u800322081-todo1);\n//            NSArray *baseDemands = [TOUtils getBaseDemands_AllDeep:algModel];\n//            BOOL finished = ARRISOK([SMGUtils filterArr:baseDemands checkValid:^BOOL(DemandModel *item) {"
        },
        {
            "comment": "This code segment checks if a specific item is finished. If not, it determines the appropriate action based on various conditions, such as whether there's an Outback or feedback, and updates the status accordingly before proceeding with the decision-making process.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCActYes/TCActYes.m\":71-95",
            "content": "//                return item.status == TOModelStatus_Finish;\n//            }]);\n//            if (!finished) {\n//                //3. Outback\u6709\u8fd4\u56de,\u5219R-\u65b9\u6848\u5f53\u524d\u5e27\u963b\u6b62\u5931\u8d25 (\u53c2\u800322153-A21);\n//                AnalogyType type = (algModel.status == TOModelStatus_OuterBack) ? ATSub : ATPlus;\n//                NSLog(@\"---//\u89e6\u53d1\u5668R-_\u7406\u6027alg\u4efb\u52a1Trigger:%@ \u89e3\u51b3\u65b9\u6848:%@ (%@)\",FoP2FStr(dsFoModel.content_p),Pit2FStr(algModel.content_p),ATType2Str(type));\n//                \n//                //5. \u6709\u53cd\u9988\u65f6,algModel\u81ea\u7136\u51fa\u73b0\u6210\u529f,\u5219\u8bbe\u4e3afinish\u5e76\u7ee7\u7eed\u51b3\u7b56;\n//                DebugE();\n//                if (type == ATPlus) {\n//                    algModel.status = TOModelStatus_Finish;\n//                    [TCScore scoreFromIfTCNeed];\n//                }else{\n//                    //6. \u65e0\u53cd\u9988\u65f6,\u5219R\u9884\u6d4b\u7684\u574f\u4e8b\u81ea\u7136\u672a\u53d1\u751f (OutBack\u672a\u8fd4\u56de,\u9759\u9ed8\u6210\u529f) (\u53c2\u800322153-A22);\n//                    rDemand.status = TOModelStatus_Finish;\n//                    [TCScore scoreFromIfTCNeed];//\u5e76\u7ee7\u7eed\u51b3\u7b56;\n//                }\n//            }\n//        }];\n//    }\n//}\n/**\n *  MARK:--------------------rActYes--------------------"
        },
        {
            "comment": "This code snippet is part of a class that handles the R-mode of ActYes in a specific framework. It sets the status of a demand model to \"ActYes\" and updates the trigger time for a specified solution Fo, while logging relevant information about the task and the solution Fo. This version was updated on 2021.12.26 and has been deprecated since 2022.05.28 in favor of frameActYes().",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCActYes/TCActYes.m\":96-120",
            "content": " *  @desc R\u6a21\u5f0f,fo\u6267\u884c\u5b8c\u6210\u65f6,actYes->feedbackTOP->\u8c03\u7528\u611f\u6027ORT\u53cd\u7701;\n *  @version\n *      2021.12.26: \u89e6\u53d1\u5668\u65f6\u95f4\u7531baseDemand\u53d6\u6539\u6210solutionFo\u53d6,\u56e0\u4e3a\u5f53\u524d\u5c31\u662f\u5728\u6267\u884csolutionFo (\u53c2\u800325031-11);\n *                  > \u800cbaseDemand\"\u65f6\u95f4\u4e0d\u6025\"\u81ea\u6709\u5176\u8bc4\u4ef7\u51b3\u5b9a,\u6b64\u5904\u53ea\u7ba1\u89e6\u53d1\u5668\u7684\u76f4\u63a5\u65f6\u95f4;\n *      2021.12.26: \u89e6\u53d1\u5668\u548c\u53cd\u7701\u90fd\u9488\u5bf9solutionFo,\u800c\u4e0d\u662fbaseDemand.matchFo (\u53c2\u800325031-11);\n *      2021.12.26: \u63a5\u5165\u65b0\u7684\u611f\u6027ORT\u53cd\u7701 (\u53c2\u800325032-5);\n *      2022.05.28: \u88abframeActYes()\u66ff\u4ee3 (\u53c2\u800326137-TODO2);\n */\n//+(void) rActYes:(TOFoModel*)foModel{\n//    //1. R-\u6a21\u5f0fActYes\u5904\u7406,\u4ec5\u8d4b\u503c,\u7b49\u5f85R-\u89e6\u53d1\u5668;\n//    [theTC updateOperCount:kFILENAME];\n//    Debug();\n//    ReasonDemandModel *demand = (ReasonDemandModel*)foModel.baseOrGroup;\n//    demand.status = TOModelStatus_ActYes;\n//\n//    //1. root\u8bbe\u4e3aactYes\n//    DemandModel *root = [TOUtils getRootDemandModelWithSubOutModel:foModel];\n//    root.status = TOModelStatus_ActYes;\n//\n//    //2. solutionFo\u5df2\u6267\u884c\u5b8c\u6210,\u76f4\u63a5\u53d6mvDeltaTime\u505a\u89e6\u53d1\u5668\u65f6\u95f4;\n//    AIFoNodeBase *solutionFo = [SMGUtils searchNode:foModel.content_p];\n//    double deltaTime = solutionFo.mvDeltaTime;\n//\n//    //3. \u89e6\u53d1\u5668;\n//    NSLog(@\"---//\u89e6\u53d1\u5668R-_\u611f\u6027mv\u4efb\u52a1:%@ \u89e3\u51b3\u65b9\u6848:%@ time:%f\",demand.algsType,Pit2FStr(foModel.content_p),deltaTime);"
        },
        {
            "comment": "In this code block, we have a function that checks if there is a root object in the outModelManager's list of demands. If a root exists, it further examines whether the status has changed to OuterBack, indicating feedback. Depending on the score and feedback status, the type is determined as ATPlus or ATSub for further analysis. Finally, if the type is not default, it triggers a perception rethink function with the type as the parameter, logging the model and its status.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCActYes/TCActYes.m\":121-142",
            "content": "//    [AITime setTimeTrigger:deltaTime trigger:^{\n//\n//        //3. \u65e0root\u65f6,\u8bf4\u660e\u5df2\u88ab\u522b\u7684R-\u65b0matchFo\u62b5\u6d88\u6389,\u62b5\u6d88\u6389\u540e\u662f\u4e0d\u505a\u53cd\u7701\u7684 (\u53c2\u800322081-todo1);\n//        BOOL havRoot = [theTC.outModelManager.getAllDemand containsObject:root];\n//        if (havRoot) {\n//\n//            //10. \u5982\u679c\u72b6\u6001\u5df2\u6539\u6210OutBack,\u8bf4\u660e\u6709\u53cd\u9988;\n//            AnalogyType type = ATDefault;\n//            CGFloat score = [AIScore score4MV:solutionFo.cmvNode_p ratio:1.0f];\n//            if (score > 0) {\n//                //b. \u5b9emv+\u53cd\u9988\u540c\u5411:P(\u597d),\u672a\u53cd\u9988:S(\u574f);\n//                type = (foModel.status == TOModelStatus_OuterBack) ? ATPlus : ATSub;\n//            }else if(score < 0){\n//                //b. \u5b9emv-\u53cd\u9988\u540c\u5411:S(\u574f),\u672a\u53cd\u9988:P(\u597d);\n//                type = (foModel.status == TOModelStatus_OuterBack) ? ATSub : ATPlus;\n//            }\n//\n//            //11. \u5219\u8fdb\u884c\u611f\u6027IRT\u53cd\u7701;\n//            if (type != ATDefault) {\n//                [TCRethink perceptOutRethink:foModel type:type];\n//                NSLog(@\"---//OP\u53cd\u7701\u89e6\u53d1\u5668\u6267\u884c(R\u4efb\u52a1):%p F%ld \u72b6\u6001:%@\",foModel,foModel.content_p.pointerId,TOStatus2Str(foModel.status));\n//"
        },
        {
            "comment": "Code snippet is part of hActYes function in TCActYes.m, which is used to perform an action in the H mode by waiting for the feedback from hAlg and calling rationalORT reflection with feedbackTOR. The code prepares the data, sets the root status as actYes, and handles the case when TOAlgModel is HNGL. The function was replaced by frameActYes() starting May 28, 2022.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCActYes/TCActYes.m\":143-173",
            "content": "//                //12. \u5982\u679c\u65e0\u53cd\u9988,\u5219\u8bbe\u4e3a\u5931\u8d25,\u5e76\u7ee7\u7eed\u51b3\u7b56;\n//                DebugE();\n//                if (foModel.status == TOModelStatus_ActYes) {\n//                    foModel.status = TOModelStatus_ActNo;\n//                    [TCScore scoreFromIfTCNeed];\n//                }\n//            }\n//        }\n//    }];\n//}\n/**\n *  MARK:--------------------hActYes--------------------\n *  @desc H\u6a21\u5f0f,\u7b49\u5f85hAlg\u8f93\u5165\u53cd\u9988 -> \u8c03\u7528\u7406\u6027ORT\u53cd\u7701 ->feedbackTOR;\n *  @version\n *      2021.12.26: \u63a5\u5165\u7406\u6027ORT\u53cd\u7701 (\u53c2\u800325032-5);\n *      2022.05.28: \u88abframeActYes()\u66ff\u4ee3 (\u53c2\u800326137-TODO3);\n */\n//+(void) hActYes:(TOAlgModel*)algModel{\n//    //1. \u6570\u636e\u51c6\u5907\n//    [theTC updateOperCount:kFILENAME];\n//    Debug();\n//    TOFoModel *foModel = (TOFoModel*)algModel.baseOrGroup;\n//    AIFoNodeBase *foNode = [SMGUtils searchNode:foModel.content_p];\n//\n//    //1. root\u8bbe\u4e3aactYes\n//    DemandModel *root = [TOUtils getRootDemandModelWithSubOutModel:algModel];\n//    root.status = TOModelStatus_ActYes;\n//\n//    //2. \u5982\u679cTOAlgModel\u4e3aHNGL\u65f6 (\u6240\u9700\u65f6\u95f4\u4e3a\"target-1\u5230target\"\u65f6\u95f4);\n//    double deltaTime = [NUMTOOK(ARR_INDEX(foNode.deltaTimes, foModel.targetSPIndex)) doubleValue];"
        },
        {
            "comment": "This code appears to be a part of an AI model control system. It triggers a reflective analysis if there is no input within a specific time frame. The algorithm determines whether the reason for success or failure is due to subordination (ATSub) or additionality (ATPlus). If successful and there are ongoing demands, the code continues decision-making. If it's an ActYes situation and there are ongoing demands, it recursively calls itself for further analysis.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCActYes/TCActYes.m\":174-193",
            "content": "//    [AINoRepeatRun sign:STRFORMAT(@\"%p\",algModel)];\n//\n//    //3. \u89e6\u53d1\u5668 (\u89e6\u53d1\u6761\u4ef6:\u672a\u7b49\u5230\u5b9e\u9645\u8f93\u5165);\n//    NSLog(@\"---//\u89e6\u53d1\u5668A_\u751f\u6210: %@ from:%@ time:%f\",AlgP2FStr(algModel.content_p),Fo2FStr(foNode),deltaTime);\n//    [AITime setTimeTrigger:deltaTime trigger:^{\n//\n//        //4. \u53cd\u7701\u7c7b\u6bd4(\u6210\u529f/\u672a\u6210\u529f)\u7684\u4e3b\u8981\u539f\u56e0;\n//        AnalogyType type = (algModel.status == TOModelStatus_ActYes) ? ATSub : ATPlus;\n//        [AINoRepeatRun run:STRFORMAT(@\"%p\",algModel) block:^{\n//            [TCRethink reasonOutRethink:foModel type:type];\n//            NSLog(@\"---//OR\u53cd\u7701\u89e6\u53d1\u5668\u6267\u884c:%p A%ld \u72b6\u6001:%@\",algModel,algModel.content_p.pointerId,TOStatus2Str(algModel.status));\n//        }];\n//\n//        //5. \u5931\u8d25\u65f6_\u7ee7\u7eed\u51b3\u7b56 (\u6210\u529f\u65f6,\u7531feedback\u7684IN\u6d41\u7a0b\u7ee7\u7eed);\n//        BOOL havRoot = [theTC.outModelManager.getAllDemand containsObject:root];\n//        DebugE();\n//        if (algModel.status == TOModelStatus_ActYes && havRoot) {\n//            NSLog(@\"====ActYes is ATSub -> \u9012\u5f52alg\");\n//            //5. 2020.11.28: alg\u672c\u7ea7\u9012\u5f52 (\u53ea\u6709_Hav\u5168\u90e8\u5931\u8d25\u65f6,\u624d\u4f1a\u81ea\u884c\u8c03\u7528failure\u58f0\u660e\u5931\u8d25) (\u53c2\u80032114C);\n//            algModel.status = TOModelStatus_ActNo;"
        },
        {
            "comment": "Code segment performs the following actions:\n\n1. Updates the root's status to \"ActYes\".\n2. Performs P-model ActYes processing on TOFoModel data.\n3. Triggers a time event when certain task conditions are met.\n4. Checks if there is a root (demand) and handles accordingly.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCActYes/TCActYes.m\":194-222",
            "content": "//\n//            //6. 2021.12.02: \u5931\u8d25\u65f6,\u7ee7\u7eed\u51b3\u7b56;\n//            [TCScore scoreFromIfTCNeed];\n//        }\n//    }];\n//}\n/**\n *  MARK:--------------------P\u6a21\u5f0f,fo\u6267\u884c\u5b8c\u6210\u65f6,actYes->feedbackTOP--------------------\n *  @version\n *      2022.05.28: \u88abframeActYes()\u66ff\u4ee3 (\u53c2\u800326137-TODO4);\n */\n//+(void) pActYes:(TOFoModel*)foModel{\n//    //1. root\u8bbe\u4e3aactYes\n//    [theTC updateOperCount:kFILENAME];\n//    Debug();\n//    DemandModel *root = [TOUtils getRootDemandModelWithSubOutModel:foModel];\n//    root.status = TOModelStatus_ActYes;\n//    \n//    //2. P-\u6a21\u5f0fActYes\u5904\u7406 (TOFoModel\u65f6,\u6570\u636e\u51c6\u5907);\n//    AIFoNodeBase *solutionFo = [SMGUtils searchNode:foModel.content_p];\n//    PerceptDemandModel *demand = (PerceptDemandModel*)foModel.baseOrGroup;\n//    \n//    //3. \u89e6\u53d1\u5668 (\u89e6\u53d1\u6761\u4ef6:\u4efb\u52a1\u672a\u5728demandManager\u4e2d\u62b5\u6d88);\n//    NSLog(@\"---//\u89e6\u53d1\u5668pActYes_\u751f\u6210: %p -> %@ time:%f\",demand,Fo2FStr(solutionFo),solutionFo.mvDeltaTime);\n//    [AITime setTimeTrigger:solutionFo.mvDeltaTime trigger:^{\n//        \n//        //4. \u65e0root\u65f6,\u8bf4\u660e\u5df2\u88ab\u522b\u7684R-\u65b0matchFo\u62b5\u6d88\u6389,\u62b5\u6d88\u6389\u540e\u662f\u4e0d\u505a\u53cd\u7701\u7684 (\u53c2\u800322081-todo1);\n//        BOOL havRoot = [theTC.outModelManager.getAllDemand containsObject:root];"
        },
        {
            "comment": "This code appears to be a part of a larger program written in Swift, and it seems to involve some sort of decision-making or feedback processing based on the state of an object called \"foModel\". The code checks whether \"havRoot\" is true, then performs different actions depending on the current status of foModel. It also has some logging statements for debugging purposes. Additionally, there are several annotations that reference specific issues or changes made to the code over time.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCActYes/TCActYes.m\":223-249",
            "content": "//        if (havRoot) {\n//            \n//            //5. \u5982\u679c\u72b6\u6001\u5df2\u6539\u6210OutBack,\u8bf4\u660e\u6709\u53cd\u9988;\n//            AnalogyType type = (foModel.status == TOModelStatus_OuterBack) ? ATPlus : ATSub;\n//            \n//            //6. \u5219\u8fdb\u884c\u611f\u6027ORT\u53cd\u7701;\n//            [TCRethink perceptOutRethink:foModel type:type];\n//            NSLog(@\"---//OP\u53cd\u7701\u89e6\u53d1\u5668\u6267\u884c(P\u4efb\u52a1):%p F%ld \u72b6\u6001:%@\",foModel,foModel.content_p.pointerId,TOStatus2Str(foModel.status));\n//            \n//            //7. \u5982\u679c\u65e0\u53cd\u9988,\u5219\u7ee7\u7eed\u51b3\u7b56;\n//            DebugE();\n//            if (foModel.status == TOModelStatus_ActYes) {\n//                foModel.status = TOModelStatus_ActNo;\n//                [TCScore scoreFromIfTCNeed];\n//            }\n//        }\n//    }];\n//}\n/**\n *  MARK:--------------------\u5e27\u9759\u9ed8\u7b49\u5f85--------------------\n *  @desc \u6bcf\u5e27\u90fd\u89e6\u53d1\u7b49\u5f85\u53cd\u9988 (\u53c2\u800326136-\u65b9\u6848);\n *  @version\n *      2022.05.29: \u4e0d\u5224\u65adsolutionFo.mv\u4ef7\u503c\u5206\u56e0\u4e3a\u5b83\u4e00\u822c\u4e3a\u7a7a;\n *      2022.06.01: actYes\u4ec5\u6807\u8bb0\u81ea\u5df1\u53ca\u6240\u5728\u7684demand,\u4e0d\u6807\u8bb0root (\u53c2\u800326185-TODO1);\n *      2023.01.01: \u4fee\u590dsolutionFo\u7684mvDeltaTime\u603b\u662f0\u7684\u95ee\u9898 (\u53c2\u800328013);\n *      2023.03.04: \u4fee\u590d\u53cd\u7701\u672a\u4fdd\u7559\u4ee5\u5f80\u5e27actionIndex,\u5bfc\u81f4\u53cd\u7701\u65f6\u9519\u8bef\u7684BUG (\u53c2\u800328144-todo);"
        },
        {
            "comment": "This code updates the status of a TOFoModel to \"ActYes\" for a given solution model, prepares data from demand, solutionFo, and frameAlg, checks if the solutionFo has been completed (actYes4Mv), and sets deltaTime accordingly. It uses helper functions from SMGUtils and TOUtils.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCActYes/TCActYes.m\":250-272",
            "content": " */\n+(void) frameActYes:(TOFoModel*)solutionModel{\n    [theTC updateOperCount:kFILENAME];\n    Debug();\n    //0. \u6570\u636e\u51c6\u5907 (\u4ece\u4e0a\u5230\u4e0b,\u53d6demand,solutionFo,frameAlg);\n    DemandModel *demand = (DemandModel*)solutionModel.baseOrGroup;\n    AIFoNodeBase *solutionFo = [SMGUtils searchNode:solutionModel.content_p];\n    NSInteger curActionIndex = solutionModel.actionIndex;\n    AIKVPointer *frameAlg_p = ARR_INDEX(solutionFo.content_ps, curActionIndex);\n    TOAlgModel *frameModel = [SMGUtils filterSingleFromArr:solutionModel.subModels checkValid:^BOOL(TOAlgModel *item) {\n        return [item.content_p isEqual:frameAlg_p];\n    }];\n    //1. \u8bbe\u4e3aactYes\n    solutionModel.status = TOModelStatus_ActYes;\n    demand.status = TOModelStatus_ActYes;\n    if (frameModel) frameModel.status = TOModelStatus_ActYes;\n    //2. solutionFo\u5df2\u6267\u884c\u5b8c\u6210,\u76f4\u63a5\u53d6mvDeltaTime\u505a\u89e6\u53d1\u5668\u65f6\u95f4;\n    double deltaTime = 0;\n    BOOL actYes4Mv = curActionIndex >= solutionFo.count;\n    if (actYes4Mv) {\n        AIKVPointer *basePFoOrTargetFo_p = [TOUtils convertBaseFoFromBasePFoOrTargetFoModel:solutionModel.basePFoOrTargetFoModel];"
        },
        {
            "comment": "The code initializes a trigger with the time delta for building an actYes behavior frame. It checks if the current action index is greater than or equal to the solution's count, and if so, it determines the analogy type based on the status of the solution model (OuterBack indicates feedback) and performs a perceptOutRethink with the determined type. If there was no feedback, the solution model is set to ActNo and the decision process continues.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCActYes/TCActYes.m\":273-294",
            "content": "        AIFoNodeBase *basePFoOrTargetFo = [SMGUtils searchNode:basePFoOrTargetFo_p];\n        deltaTime = basePFoOrTargetFo.mvDeltaTime;\n    }else{\n        deltaTime = [NUMTOOK(ARR_INDEX(solutionFo.deltaTimes, curActionIndex)) doubleValue];\n    }\n    //3. \u89e6\u53d1\u5668;\n    NSLog(@\"---//\u6784\u5efa\u884c\u4e3a\u5316\u5e27\u89e6\u53d1\u5668:%p for:%@ time:%.2f\",actYes4Mv?solutionModel:frameModel,ClassName2Str(demand.algsType),deltaTime);\n    [AITime setTimeTrigger:deltaTime trigger:^{\n        //4. \u672b\u5c3e\u4e3amv\u611f\u6027\u76ee\u6807;\n        if (curActionIndex >= solutionFo.count) {\n            //a. \u5982\u679c\u72b6\u6001\u5df2\u6539\u6210OutBack,\u8bf4\u660e\u6709\u53cd\u9988(\u574f),\u5426\u5219\u672a\u53cd\u9988(\u597d) (\u53c2\u8003feedbackTOP);\n            AnalogyType type = (solutionModel.status == TOModelStatus_OuterBack) ? ATSub : ATPlus;\n            //d. \u5219\u8fdb\u884c\u611f\u6027PORT\u53cd\u7701;\n            [TCRethink perceptOutRethink:solutionModel type:type];\n            NSLog(@\"---//\u884c\u4e3a\u5316\u5e27\u89e6\u53d1\u611f\u6027\u53cd\u7701:%p F%ld \u72b6\u6001:%@\",solutionModel,solutionFo.pointer.pointerId,TOStatus2Str(solutionModel.status));\n            //e. \u5982\u679c\u65e0\u53cd\u9988,\u5219\u8bbe\u4e3a\u5931\u8d25,\u5e76\u7ee7\u7eed\u51b3\u7b56;\n            if (solutionModel.status == TOModelStatus_ActYes) {\n                solutionModel.status = TOModelStatus_ActNo;"
        },
        {
            "comment": "This code appears to be a part of an algorithm for decision-making and reasoning. It involves frame models, solution models, and demand statuses. The code triggers rational reflection based on the success or failure of analogies. If successful, it continues to feedback processes; otherwise, it proceeds with further decision-making steps by setting the status to \"ActNo\" and continuing to determine solutions.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCActYes/TCActYes.m\":295-315",
            "content": "                demand.status = TOModelStatus_Runing;\n                [TCScore scoreFromIfTCNeed];\n            }\n        }\n        //5. \u4e2d\u95f4\u4e3a\u5e27\u7406\u6027\u76ee\u6807;\n        else{\n            //a. \u53cd\u7701\u7c7b\u6bd4(\u6210\u529f/\u672a\u6210\u529f)\u7684\u4e3b\u8981\u539f\u56e0,\u8fdb\u884cRORT\u53cd\u7701;\n            AnalogyType type = (frameModel.status == TOModelStatus_ActYes) ? ATSub : ATPlus;\n            [TCRethink reasonOutRethink:solutionModel actionIndex:curActionIndex type:type];\n            NSLog(@\"---//\u884c\u4e3a\u5316\u5e27\u89e6\u53d1\u7406\u6027\u53cd\u7701:%p A%ld \u72b6\u6001:%@\",frameModel,frameAlg_p.pointerId,TOStatus2Str(frameModel.status));\n            //5. \u5931\u8d25\u65f6_\u7ee7\u7eed\u51b3\u7b56 (\u6210\u529f\u65f6,\u7531feedback\u7684IN\u6d41\u7a0b\u7ee7\u7eed);\n            if (frameModel.status == TOModelStatus_ActYes) {\n                //5. 2020.11.28: alg\u672c\u7ea7\u9012\u5f52 (\u53ea\u6709_Hav\u5168\u90e8\u5931\u8d25\u65f6,\u624d\u4f1a\u81ea\u884c\u8c03\u7528failure\u58f0\u660e\u5931\u8d25) (\u53c2\u80032114C);\n                frameModel.status = TOModelStatus_ActNo;\n                solutionModel.status = TOModelStatus_ActNo;\n                demand.status = TOModelStatus_Runing;\n                NSLog(@\"\u5728ReasonOutRethink\u53cd\u7701\u540e solution:F%ld \u56e0\u8d85\u65f6\u65e0\u6548\u800cset actYes to actNo-------->\",solutionModel.content_p.pointerId);\n                //6. 2021.12.02: \u5931\u8d25\u65f6,\u7ee7\u7eed\u51b3\u7b56;"
        },
        {
            "comment": "This code segment initializes a TCScore object and calls its scoreFromIfTCNeed method, likely to calculate a score based on certain conditions. After that, it invokes the DebugE() function, presumably for error handling or logging purposes. The entire block is wrapped within an @implementation section for a class called \"TCActYes\".",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCActYes/TCActYes.m\":316-323",
            "content": "                [TCScore scoreFromIfTCNeed];\n            }\n        }\n        DebugE();\n    }];\n}\n@end"
        }
    ]
}