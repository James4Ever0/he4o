{
    "summary": "The code optimizes facial recognition and image analysis tasks by filtering, sorting, outputting solutions, logging scene counts, and updating AI performance. It also selects optimal candidate sets based on stability scores and calculates task hierarchy actions.",
    "details": [
        {
            "comment": "This code is implementing a fast solution algorithm for a reasoning demand model. It prepares data, collects all candidate sets from the given problem, and retrieves the valid effect dictionaries of each candidate set.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCSolution/Util/TCSolutionUtil.m\":0-32",
            "content": "//\n//  TCSolutionUtil.m\n//  SMG_NothingIsAll\n//\n//  Created by jia on 2022/6/5.\n//  Copyright \u00a9 2022\u5e74 XiaoGang. All rights reserved.\n//\n#import \"TCSolutionUtil.h\"\n@implementation TCSolutionUtil\n//MARK:===============================================================\n//MARK:                     < \u5feb\u601d\u8003 >\n//MARK:===============================================================\n/**\n *  MARK:--------------------R\u5feb\u601d\u8003--------------------\n *  @desc \u4e60\u60ef (\u53c2\u800326142);\n *  @version\n *      2022.11.30: \u5148\u5173\u6389\u5feb\u601d\u8003\u529f\u80fd,\u56e0\u4e3a\u6162\u601d\u8003\u6709\u4e86indexDic\u548c\u76f8\u4f3c\u5ea6\u590d\u7528\u540e\u5e76\u4e0d\u6162,\u5e76\u4e14effectDic\u548cSP\u7b49\u6548 (\u53c2\u800327205);\n */\n+(AICansetModel*) rSolution_Fast:(ReasonDemandModel *)demand except_ps:(NSArray*)except_ps{\n    if (!Switch4FastSolution) return nil;\n    //1. \u6570\u636e\u51c6\u5907;\n    except_ps = ARRTOOK(except_ps);\n    //2. \u6536\u96c6\u6240\u6709\u89e3\u51b3\u65b9\u6848\u5019\u9009\u96c6;\n    NSArray *cansetModels = [SMGUtils convertArr:demand.validPFos convertItemArrBlock:^NSArray *(AIMatchFoModel *pFoM) {\n        //a. \u53d6\u51fapFo\u7684effectDic\u5019\u9009\u96c6;\n        AIFoNodeBase *pFo = [SMGUtils searchNode:pFoM.matchFo];\n        NSArray *cansetFos = [pFo getValidEffs:pFo.count];"
        },
        {
            "comment": "This code block appears to implement a fast thinking solution for analyzing and converting analyst results, excluding items not applicable to the current scenario. It then performs fast reasoning using the H-thinking approach (turned off currently) and returns the result as an AICansetModel object if the Switch4FastSolution is enabled.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCSolution/Util/TCSolutionUtil.m\":33-55",
            "content": "        if (Log4Solution_Fast && ARRISOK(cansetFos)) NSLog(@\"\\tF%ld\u7684\u7b2c%ld\u5e27\u53d6: %@\",pFo.pointer.pointerId,pFo.count,CLEANSTR(cansetFos));\n        //b. \u5206\u6790analyst\u7ed3\u679c & \u6392\u9664\u6389\u4e0d\u9002\u7528\u5f53\u524d\u573a\u666f\u7684(\u4e3anil) (\u53c2\u800326232-TODO8);\n        return [SMGUtils convertArr:cansetFos convertBlock:^id(AIEffectStrong *eff) {\n            //c. \u5206\u6790\u6bd4\u5bf9\u7ed3\u679c;\n            NSInteger rAleardayCount = [self getRAleardayCount:demand pFo:pFoM];\n            AICansetModel *sModel = [TCCanset convert2CansetModel:eff.solutionFo sceneFo:pFoM.matchFo basePFoOrTargetFoModel:pFoM ptAleardayCount:rAleardayCount isH:true sceneModel:nil];\n            return sModel;\n        }];\n    }];\n    //3. \u5feb\u601d\u8003\u7b97\u6cd5;\n    return [TCSolutionUtil generalSolution_Fast:demand cansets:cansetModels except_ps:except_ps];\n}\n/**\n *  MARK:--------------------H\u5feb\u601d\u8003--------------------\n *  @desc \u4e60\u60ef (\u53c2\u800326142);\n *  @version\n *      2022.11.30: \u5148\u5173\u6389\u5feb\u601d\u8003\u529f\u80fd,\u56e0\u4e3a\u6162\u601d\u8003\u6709\u4e86indexDic\u548c\u76f8\u4f3c\u5ea6\u590d\u7528\u540e\u5e76\u4e0d\u6162,\u5e76\u4e14effectDic\u548cSP\u7b49\u6548 (\u53c2\u800327205);\n */\n+(AICansetModel*) hSolution_Fast:(HDemandModel *)hDemand except_ps:(NSArray*)except_ps{\n    if (!Switch4FastSolution) return nil;"
        },
        {
            "comment": "This code prepares the data and retrieves a solution candidate set from a target node. It then analyzes analyst results, excludes candidates not applicable to the current scene, and applies the fast thinking algorithm to find the best solution.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCSolution/Util/TCSolutionUtil.m\":56-80",
            "content": "    //1. \u6570\u636e\u51c6\u5907;\n    TOFoModel *targetFoM = (TOFoModel*)hDemand.baseOrGroup.baseOrGroup;\n    AIFoNodeBase *targetFo = [SMGUtils searchNode:targetFoM.content_p];\n    //2. \u4ecetargetFo\u53d6\u89e3\u51b3\u65b9\u6848\u5019\u9009\u96c6;\n    NSArray *cansetFos = [targetFo.effectDic objectForKey:@(targetFoM.actionIndex)];\n    //3. \u5206\u6790analyst\u7ed3\u679c & \u6392\u9664\u6389\u4e0d\u9002\u7528\u5f53\u524d\u573a\u666f\u7684(\u4e3anil) (\u53c2\u800326232-TODO8);\n    NSArray *cansetModels = [SMGUtils convertArr:cansetFos convertBlock:^id(AIEffectStrong *eff) {\n        //a. \u5206\u6790\u6bd4\u5bf9\u7ed3\u679c;\n        NSInteger hAleardayCount = [self getHAleardayCount:targetFoM];\n        AICansetModel *sModel = [TCCanset convert2CansetModel:eff.solutionFo sceneFo:targetFoM.content_p basePFoOrTargetFoModel:targetFoM ptAleardayCount:hAleardayCount isH:true sceneModel:nil];\n        return sModel;\n    }];\n    //3. \u5feb\u601d\u8003\u7b97\u6cd5;\n    return [TCSolutionUtil generalSolution_Fast:hDemand cansets:cansetModels except_ps:except_ps];\n}\n/**\n *  MARK:--------------------\u5feb\u601d\u8003--------------------\n *  @desc \u4e60\u60ef (\u53c2\u800326142);\n *  @version\n *      2022.06.03: \u5c06cansets\u4e2dhnStrong\u5408\u5e76,\u4e00\u76f4\u8fd9\u4e48\u8bbe\u8ba1\u7684,\u4eca\u53d1\u73b0\u5199\u6ca1\u5b9e\u73b0,\u8865\u4e0a;\n *      2022.06.03: \u6392\u9664\u6389\u5019\u9009\u65b9\u6848\u4e0d\u9002\u7528\u5f53\u524d\u573a\u666f\u7684 (\u53c2\u800326192);"
        },
        {
            "comment": "This code is part of the TCSolutionUtil class and appears to be a general solution function for a demand model using cansets. It prepares data, filters solution models based on specific conditions, and evaluates time-related factors. The code also includes references to various related issues or tasks.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCSolution/Util/TCSolutionUtil.m\":81-103",
            "content": " *      2022.06.05: \u652f\u6301\u4e09\u4e2a\u9608\u503c (\u53c2\u800326199);\n *      2022.06.05: \u5c06R\u5feb\u601d\u8003\u548cH\u5feb\u601d\u8003\u6574\u7406\u6210\u901a\u7528\u5feb\u601d\u8003\u7b97\u6cd5;\n *      2022.06.09: \u5e9f\u5f03\u9608\u503c\u65b9\u6848\u548cH>5\u7684\u8981\u6c42 (\u53c2\u800326222-TODO3);\n *      2022.06.09: \u5f03\u7528\u9608\u503c\u65b9\u6848,\u6539\u4e3a\u7efc\u5408\u6392\u540d (\u53c2\u800326222-TODO2);\n *      2022.06.12: \u5e9f\u5f03\u540ccansetFo\u7684effStrong\u7d2f\u8ba1 (\u53c2\u800326232-TODO8);\n *      2022.06.12: \u6bcf\u4e2apFo\u72ec\u7acb\u505aanalyst\u6bd4\u5bf9,\u8f6c\u4e3acansetModels (\u53c2\u800326232-TODO8);\n *      2022.10.15: \u5feb\u601d\u8003\u652f\u6301\u53cd\u601d,\u4e0d\u7136\u56e0\u4e3a\u4e00\u70b9\u70b9\u5c0f\u4efb\u52a1\u5c31\u6b7b\u5faa\u73af (\u53c2\u800327143-\u95ee\u98982);\n */\n+(AICansetModel*) generalSolution_Fast:(DemandModel *)demand cansets:(NSArray*)cansets except_ps:(NSArray*)except_ps{\n    //1. \u6570\u636e\u51c6\u5907;\n    except_ps = ARRTOOK(except_ps);\n    BOOL havBack = ISOK(demand, HDemandModel.class); //H\u6709\u540e\u6bb5,\u522b\u7684\u6ca1\u6709;\n    NSLog(@\"1. \u5feb\u601d\u8003protoCansets\u6570:%ld\",cansets.count);\n    //2. solutionModels\u8fc7\u6ee4\u5668;\n    cansets = [SMGUtils filterArr:cansets checkValid:^BOOL(AICansetModel *item) {\n        //a. \u6392\u9664\u4e0d\u5e94\u671f;\n        if([except_ps containsObject:item.cansetFo]) return false;\n        //b. \u65f6\u95f4\u4e0d\u6025\u8bc4\u4ef7: \u4e0d\u6025 = \u89e3\u51b3\u65b9\u6848\u6240\u9700\u65f6\u95f4 <= \u7236\u4efb\u52a1\u80fd\u7ed9\u7684\u65f6\u95f4 (\u53c2\u8003:24057-\u65b9\u68483,24171-7);\n        if (![AIScore FRS_Time:demand solutionModel:item]) return false;\n        ////2. \u540e\u6bb5-\u76ee\u6807\u5339\u914d (\u9608\u503c>80%) (\u53c2\u800326199-TODO1);"
        },
        {
            "comment": "This code is implementing a filtering and sorting process for candidate solutions. It checks three conditions: the effect score, front match value, and back match value. The code then sorts the valid candidates and applies a reverse thinking process to find the best solution. Finally, it logs relevant information and updates the strength value if a valid solution is found.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCSolution/Util/TCSolutionUtil.m\":104-136",
            "content": "        //if (item.backMatchValue < 0.8f) return false;\n        //\n        ////3. \u4e2d\u6bb5-\u6309\u6709\u6548\u7387 (effectScore>0) (\u53c2\u800326199-TODO2);\n        //if (item.effectScore <= 0) return false;\n        //\n        ////4. \u524d\u6bb5-\u573a\u666f\u5339\u914d (\u9608\u503c>80%) (\u53c2\u800326199-TODO3);\n        //if (item.frontMatchValue < 0.8) return false;\n        //5. \u95ef\u5173\u6210\u529f;\n        return true;\n    }];\n    NSLog(@\"2. (\u4e0d\u5e94\u671f & FRSTime & \u540e\u4e2d\u540e\u6bb5\u9608\u503c)\u8fc7\u6ee4\u540e:%ld\",cansets.count);\n    //6. \u5bf9\u5019\u9009\u96c6\u6392\u5e8f;\n    NSArray *sortCansets = [AIRank solutionFoRankingV3:cansets];\n    NSLog(@\"3. \u6709\u6548\u7387\u6392\u5e8f\u540e:%ld\",cansets.count);\n    if (Log4Solution_Fast) for (AICansetModel *m in ARR_SUB(sortCansets, 0, 5)) {\n        NSLog(@\"\\t(\u524d%.2f \u4e2d%.2f \u540e%.2f) %@\",m.frontMatchValue,m.midEffectScore,m.backMatchValue,Pit2FStr(m.cansetFo));\n    }\n    //6. \u9010\u6761S\u53cd\u601d;\n    AICansetModel *result = nil;\n    for (AICansetModel *item in sortCansets) {\n        BOOL score = [TCRefrection refrection:item demand:demand];\n        if (score) {\n            result = item;\n            break;\n        }\n    }\n    //7. \u65e5\u5fd7\u53ca\u66f4\u65b0\u5f3a\u5ea6\u503c\u7b49;\n    if (result) {\n        if ("
        },
        {
            "comment": "This code appears to be related to a facial recognition or analysis system. It is implementing a slow thinking function, likely using machine learning algorithms for object detection and recognition. The code first gathers candidate sets of objects and then uses these sets to find the best match, updating the confidence levels of matches in the front and back segments. This information could be used to inform facial recognition systems or similar image analysis tasks.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCSolution/Util/TCSolutionUtil.m\":136-161",
            "content": "Log4Solution && result) NSLog(@\"4. \u5feb\u601d\u8003\u6700\u4f73\u7ed3\u679c:F%ld (\u524d%.2f \u4e2d%.2f \u540e%.2f\",result.cansetFo.pointerId,result.frontMatchValue,result.midEffectScore,result.backMatchValue);\n        //8. \u66f4\u65b0\u5176\u524d\u6bb5\u5e27\u7684con\u548cabs\u62bd\u5177\u8c61\u5f3a\u5ea6 (\u53c2\u800328086-todo2);\n        [AINetUtils updateConAndAbsStrongByIndexDic:result.matchFrontIndexDic matchFo:result.sceneFo cansetFo:result.cansetFo];\n        //16. \u66f4\u65b0\u540e\u6bb5\u7684\u7684\u5177\u8c61\u5f3a\u5ea6 (\u53c2\u800328092-todo4);\n        [AINetUtils updateConAndAbsStrongByIndexDic:result.backIndexDic matchFo:result.sceneFo cansetFo:result.cansetFo];\n    }\n    //8. \u5c06\u9996\u6761\u6700\u4f73\u65b9\u6848\u8fd4\u56de;\n    return result;\n}\n//MARK:===============================================================\n//MARK:                     < \u6162\u601d\u8003 >\n//MARK:===============================================================\n/**\n *  MARK:--------------------H\u6162\u601d\u8003--------------------\n *  @version\n *      2023.09.10: \u5347\u7ea7v2,\u652f\u6301TCScene\u548cTCCanset (\u53c2\u800330127);\n */\n+(AICansetModel*) hSolution_SlowV2:(HDemandModel *)demand except_ps:(NSArray*)except_ps {\n    //1. \u6536\u96c6cansetModels\u5019\u9009\u96c6;\n    NSArray *sceneModels = [TCScene hGetSceneTree:demand];"
        },
        {
            "comment": "Code converts sceneModels to cansetModels by filtering overrideCansets and converting them into cansetModel candidates. It also logs the count of original cansets and converted cansetModel candidates for item scenes if Log4GetCansetResult4H is enabled.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCSolution/Util/TCSolutionUtil.m\":162-174",
            "content": "    TOFoModel *targetFoM = (TOFoModel*)demand.baseOrGroup.baseOrGroup;\n    //2. \u6bcf\u4e2acansetModel\u8f6csolutionModel;\n    NSArray *cansetModels = [SMGUtils convertArr:sceneModels convertItemArrBlock:^NSArray *(AISceneModel *sceneModel) {\n        //3. \u53d6\u51faoverrideCansets;\n        NSArray *cansets = ARRTOOK([TCCanset getOverrideCansets:sceneModel sceneTargetIndex:sceneModel.cutIndex + 1]);//127ms\n        NSArray *itemCansetModels = [SMGUtils convertArr:cansets convertBlock:^id(AIKVPointer *canset) {\n            //4. \u8fc7\u6ee4\u5668 & \u8f6ccansetModels\u5019\u9009\u96c6 (\u53c2\u800326128-\u7b2c1\u6b65 & 26161-1&2&3);\n            NSInteger aleardayCount = sceneModel.cutIndex + 1;\n            return [TCCanset convert2CansetModel:canset sceneFo:sceneModel.scene basePFoOrTargetFoModel:targetFoM ptAleardayCount:aleardayCount isH:true sceneModel:sceneModel];//245ms\n        }];\n        if (Log4GetCansetResult4H && cansets.count > 0) NSLog(@\"\\t item\u573a\u666f(%@):%@ \u53d6\u5f97\u5019\u9009\u6570:%ld \u8f6c\u6210\u5019\u9009\u6a21\u578b\u6570:%ld\",SceneType2Str(sceneModel.type),Pit2FStr(sceneModel.scene),cansets.count,itemCansetModels.count);"
        },
        {
            "comment": "This code performs the following actions:\n1. Prepares the necessary data for slow solution calculation.\n2. Retrieves relevant scene trees based on a demand model.\n3. Finds candidate sets (cansets) from the retrieved scene trees.\n4. Converts canset models to solution models and returns them as output.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCSolution/Util/TCSolutionUtil.m\":175-201",
            "content": "        return itemCansetModels;\n    }];\n    //TODOTOMORROW20231004:\n    //\u67e5\u4e0b,\u8fd9\u91cchSolution\u603b\u662f\u8f93\u51fa\u65e0\u8ba1\u53ef\u65bd,\u800c\u6b64\u65f6\"\u76ae\u679c\"\u5df2\u7ecf\u6709\u4e86,\u6309\u9053\u7406\u8bf4,\u524d\u6bb5\u6761\u4ef6\u6ee1\u8db3\u5df2\u7ecf\u6ee1\u8db3\u4e86;\n    //\u65e5\u5fd7: \u7b2c1\u6b65 H\u573a\u666f\u6811\u679d\u70b9\u6570 I:1 + Father:0 + Brother:0 = \u603b:1 (\u8fd9\u91cc\u603b\u662f\u53d6\u5230hCanset=0\u6761);\n    NSLog(@\"\u7b2c2\u6b65 \u8f6c\u4e3a\u5019\u9009\u96c6 \u603b\u6570:%ld\",cansetModels.count);\n    //5. \u6162\u601d\u8003;\n    return [self generalSolution_Slow:demand cansetModels:cansetModels except_ps:except_ps];//400ms\n}\n+(AICansetModel*) hSolution_SlowV3:(HDemandModel *)demand except_ps:(NSArray*)except_ps {\n    //1. \u6570\u636e\u51c6\u5907;\n    TOFoModel *targetFoM = (TOFoModel*)demand.baseOrGroup.baseOrGroup;\n    ReasonDemandModel *baseRDemand = (ReasonDemandModel*)targetFoM.baseOrGroup;//\u53d6\u51farDemand\n    //2. \u518d\u6839\u636erDemand\u53d6\u51fa\u573a\u666f\u6811;\n    NSArray *sceneModels = [TCScene rGetSceneTree:baseRDemand];\n    //3. \u518d\u6839\u636er\u573a\u666f\u6811,\u627e\u51facansets;\n    //2. \u6bcf\u4e2acansetModel\u8f6csolutionModel;\n    NSArray *cansetModels = [SMGUtils convertArr:sceneModels convertItemArrBlock:^NSArray *(AISceneModel *sceneModel) {\n        //3. \u53d6\u51faoverrideCansets;\n        NSArray *cansets = ARRTOOK([TCCanset getOverrideCansets:sceneModel sceneTargetIndex:sceneModel.cutIndex + 1]);//127ms"
        },
        {
            "comment": "This code is filtering and converting cansets to cansetModels, related to the H demand. It checks for relationships with hDemand in cansets, filters out the ones that match, and converts them into cansetModels. The filtered cansetModels are then returned. Additionally, a log message is logged if the Log4GetCansetResult4H flag is set and cansets count is greater than 0. Finally, generalSolution_Slow method is called with cansetModels and except_ps as parameters.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCSolution/Util/TCSolutionUtil.m\":202-222",
            "content": "        NSArray *itemCansetModels = [SMGUtils convertArr:cansets convertBlock:^id(AIKVPointer *canset) {\n            //4. \u8fc7\u6ee4\u5668 & \u8f6ccansetModels\u5019\u9009\u96c6 (\u53c2\u800326128-\u7b2c1\u6b65 & 26161-1&2&3);\n            NSInteger aleardayCount = sceneModel.cutIndex + 1;\n            //TODOTOMORROW20240106: \u6d4b\u4e0bh\u4efb\u52a1\u4e5f\u4ecer\u573a\u666f\u6811\u8fc1\u79fb (\u53c2\u800331053);\n            //1. \u4ececansets\u4e2d\u8fc7\u6ee4\u51fa\u4e0ehDemand\u6709\u62bd\u5177\u8c61\u5173\u7cfb\u7684 (\u7528hAlg\u53d6\u62bd\u5177\u8c61\u5173\u7cfb\u7684,\u5224\u65ad\u4ea4\u96c6\u5373\u53ef);\n            //\u95ee\u9898: \u6b64\u5904\u518d\u8dd1\u4e00\u6b21R\u7684\u6d41\u7a0b\u6709\u70b9\u6d6a\u8d39,\u5e76\u4e14R\u6d41\u7a0b\u4e5f\u4e0d\u884c,\u5f97\u518d\u6539\u4ee3\u7801,\u5f80H\u518d\u6df1\u5165\u4e00\u5c42,\u6709\u70b9\u590d\u6742\u4e14\u9ebb\u70e6;\n            return [TCCanset convert2CansetModel:canset sceneFo:sceneModel.scene basePFoOrTargetFoModel:targetFoM ptAleardayCount:aleardayCount isH:true sceneModel:sceneModel];//245ms\n        }];\n        if (Log4GetCansetResult4H && cansets.count > 0) NSLog(@\"\\t item\u573a\u666f(%@):%@ \u53d6\u5f97\u5019\u9009\u6570:%ld \u8f6c\u6210\u5019\u9009\u6a21\u578b\u6570:%ld\",SceneType2Str(sceneModel.type),Pit2FStr(sceneModel.scene),cansets.count,itemCansetModels.count);\n        return itemCansetModels;\n    }];\n    NSLog(@\"\u7b2c2\u6b65 \u8f6c\u4e3a\u5019\u9009\u96c6 \u603b\u6570:%ld\",cansetModels.count);\n    //5. \u6162\u601d\u8003;\n    return [self generalSolution_Slow:demand cansetModels:cansetModels except_ps:except_ps];//400ms"
        },
        {
            "comment": "The code is taking the results of a previous solution (rSolution) and building upon it to create another solution (hSolution). It first extracts the rCansetModels from the previous demand, logs the count, and then searches for the hAlg model based on the current algorithm. It then abstracts the hAlgs into absolute and connected HAlgs, and adds them all to a mutable array before continuing with the subsequent steps.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCSolution/Util/TCSolutionUtil.m\":223-245",
            "content": "}\n+(AICansetModel*) hSolution_SlowV4:(HDemandModel *)demand except_ps:(NSArray*)except_ps {\n    return [self hSolution_SlowV2:demand except_ps:except_ps];\n    //1. \u53d6\u51farSolution\u7684\u6210\u679c,\u5728\u5b83\u7684\u57fa\u7840\u4e0a\u7ee7\u7eed\u505ahSolution;\n    ReasonDemandModel *rDemand = (ReasonDemandModel*)demand.baseOrGroup.baseOrGroup.baseOrGroup;\n    NSArray *rCansetModels = rDemand.rCansetModels;\n    NSLog(@\"\u7b2c1\u6b65 rCansetModels\u6570: %ld\",rCansetModels.count);\n    //2. \u6839\u636e\u5f53\u524dhAlg\u53d6\u62bd\u5177\u8c61\u6811;\n    TOAlgModel *hAlgModel = (TOAlgModel*)demand.baseOrGroup;\n    AIFoNodeBase *hAlg = [SMGUtils searchNode:hAlgModel.content_p];\n    NSArray *absHAlgs = Ports2Pits([AINetUtils absPorts_All:hAlg]);\n    NSArray *conHAlgs = [SMGUtils convertArr:absHAlgs convertItemArrBlock:^NSArray *(AIKVPointer *obj) {\n        AIAlgNodeBase *absHAlg = [SMGUtils searchNode:obj];\n        return Ports2Pits([AINetUtils conPorts_All:absHAlg]);\n    }];\n    NSMutableArray *allHAlgs = [[NSMutableArray alloc] init];\n    [allHAlgs addObject:hAlg.pointer];\n    [allHAlgs addObjectsFromArray:absHAlgs];\n    [allHAlgs addObjectsFromArray:conHAlgs];"
        },
        {
            "comment": "Code snippet checks if the hAlg string contains \"\u76ae\u679c\". If it does, it starts debugging and counts the number of hCansets without the \"\u679c\" element in rCansetModels. It then loops through each rCansetModel, searching for nodes with no \"\u76ae\u679c\" algorithm. This is likely part of a larger debug process to ensure that all necessary elements are present in the algorithms.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCSolution/Util/TCSolutionUtil.m\":246-266",
            "content": "    NSLog(@\"\u7b2c2\u6b65 absHAlg\u6570:%ld conHAlg\u6570:%ld HAlg\u6811\u603b\u6570:%ld\",absHAlgs.count,conHAlgs.count,allHAlgs.count);\n//    NSLog(@\"=====> %@\",CLEANSTR([SMGUtils convertArr:allHAlgs convertBlock:^id(AIKVPointer *obj) {\n//        return STRFORMAT(@\"F%ld\",obj.pointerId);\n//    }]));\n    NSString *hAlgStr = Alg2FStr(hAlg);\n    NSMutableArray *havHCansetOfRCanset = [[NSMutableArray alloc] init];\n    if ([hAlgStr containsString:@\"\u76ae\u679c\"]) {\n        NSLog(@\"\u76f4\u63a5\u8c03\u8bd5\u4ee5\u4e0b,rCanset\u4e2d\u5c31\u6ca1\u6709\u5305\u542b \u679c \u7684...\");\n        //1. \u53ef\u662f\u4e0d\u5bf9\u554a,\u90fd\u751f\u6210\u76ae\u679chDemand\u4e86,\u600e\u4e48\u53ef\u80fdrCanset\u91cc\u6ca1\u4e00\u4e2a\u6709\"\u679c\"\u7684\u5462?\n        //2. \u5373\u4f7f\u5c31\u771f\u7684\u5168\u6ca1\u679c,\u90a3\u4e48\u53ea\u597d\u518d\u591a\u8bad\u7ec3\u4e00\u4e9bnewHCanset\u51fa\u6765\u4e86...\n        //3. \u53ef\u662f\u4e0b\u9762havHAlgRCansetModelsCount\u53c8\u663e\u793a\u8ba1\u65705,\u5c31\u5947\u602a\u4e86...,\u65e2\u7136\u6ca1\u6709\"\u679c\",\u53c8\u54ea\u91cc\u8ba1\u52305\u5462?\n        NSInteger step1 = 0,step2 = 0;\n        for (AICansetModel *item in rCansetModels) {\n            AIFoNodeBase *rCanset = [SMGUtils searchNode:item.cansetFo];\n            for (NSInteger i = 0; i < rCanset.count; i++) {\n                AIKVPointer *rCansetAlg = ARR_INDEX(rCanset.content_ps, i);\n                NSString *rCansetAlgStr = Pit2FStr(rCansetAlg);\n                if (![rCansetAlgStr containsString:@\"\u76ae\u679c\"]) {"
        },
        {
            "comment": "This code checks each rCanset for the presence of an hAlg tree, increments counters based on whether it has hCansets or not, and filters out rCansets that contain the hAlg tree. It then stores these rCansets in havHAlgRCansetModels array.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCSolution/Util/TCSolutionUtil.m\":267-293",
            "content": "                    step1++;\n                    continue;\n                }\n                NSArray *hCansets = [rCanset getConCansets:i];\n                if (!ARRISOK(hCansets)) {\n                    step2++;\n                    continue;\n                }\n                [havHCansetOfRCanset addObject:item];\n                NSLog(@\"\u6302\u8f7d\u6709hCanset Success\");\n            }\n        }\n        NSLog(@\"==============>>> %ld %ld\",step1,step2);//\u5305\u542b\u6709\u76ae\u679c\u7684rCanset\u5171192\u6761,\u4f46\u5b83\u4eec\u5168\u90e8\u90fd\u6ca1\u6709\u6302\u622ahCanset;\n    }\n    //3. \u4ece\u6240\u6709rCanset\u4e2d,\u7b5b\u9009\u51fa\u5305\u542bhAlg\u62bd\u5177\u8c61\u6811\u7684;\n    __block NSMutableArray *havHAlgRCansetModels = [[NSMutableArray alloc] init];\n    NSArray *hCansets = [SMGUtils convertArr:rCansetModels convertItemArrBlock:^NSArray *(AICansetModel *item) {\n        //a. \u4ece\u6bcf\u6761rCanset\u4e2d,\u627e\u662f\u5426\u5305\u542bhAlg\u6811\u7684\u4efb\u4f55\u4e00\u4e2a\u679d\u53f6;\n        AIFoNodeBase *rCansetFo = [SMGUtils searchNode:item.cansetFo];\n        NSInteger findIndex = -1;\n        for (NSInteger i = 0; i < rCansetFo.count; i++) {\n            AIKVPointer *rCansetAlg = ARR_INDEX(rCansetFo.content_ps, i);\n            if ([allHAlgs containsObject:rCansetAlg]) {"
        },
        {
            "comment": "This code is finding and selecting the best hCanset solution from a set of rCansets for a given demand. It first filters out the rCansets containing an H alg tree, then selects the hCansets within these rCansets, competes between them to find the best one, and returns it. This process is part of the \"R\u6162\u601d\u8003\" (slow reasoning) method for solving problems in the AI system. The code also optimizes performance by pre-fetching the scene's pFo earlier in the loop.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCSolution/Util/TCSolutionUtil.m\":294-324",
            "content": "                findIndex = i;\n                break;\n            }\n        }\n        if (findIndex == -1) return nil;//\u627ehAlg\u6811\u679d\u53f6\u5931\u8d25: \u5219\u6b64rCanset\u4e0d\u5177\u5907\u8fc1\u79fb\u7ed9hScene.hAlg\u5e27\u7684\u6761\u4ef6;\n        [havHAlgRCansetModels addObject:item];\n        //b. \u4ece\u6240\u6709rCanset\u4e2d,\u7b5b\u9009\u51fa\u6709hAlg\u7684hCanset\u89e3\u7684\u90e8\u5206;\n        NSArray *hCansets = [rCansetFo getConCansets:findIndex];\n        if (!ARRISOK(hCansets)) return nil;//rCanset\u8fd9\u5e27\u65e0H\u89e3: \u5219\u5b83\u6ca1\u4efb\u4f55hCanset\u53ef\u8fc1\u79fb\u7ed9hScene.hAlg;\n        return hCansets;\n    }];\n    NSLog(@\"\u7b2c3\u6b65 \u5305\u542bHAlg\u6811\u7684rCansetModels\u6570:%ld \\n%@\",havHAlgRCansetModels.count,CLEANSTR([SMGUtils convertArr:havHAlgRCansetModels convertBlock:^id(AICansetModel *obj) {\n        return STRFORMAT(@\"F%ld\",obj.cansetFo.pointerId);\n    }]));\n    NSLog(@\"\u7b2c4\u6b65 \u627e\u5230hCansets\u6570:%ld\",hCansets.count);\n    //5. \u5bf9\u6709\u89e3\u7684\u90e8\u5206\u8fdb\u884c\u7ade\u4e89;\n    //6. \u5c06\u6700\u597d\u7684hCanset\u89e3\u8fd4\u56de (\u6539\u5199H\u7248\u672c\u7684generalSolution_Slow());\n    return nil;\n    //7. \u8fd4\u56de\u540e,\u5c06hCanset\u6253\u5305\u6210foModel,\u5e76\u8fc1\u79fb;\n}\n/**\n *  MARK:--------------------R\u6162\u601d\u8003--------------------\n *  @version\n *      2023.12.26: \u63d0\u524d\u5728for\u4e4b\u524d\u53d6scene\u6240\u5728\u7684pFo,\u4ee5\u4f18\u5316\u5176\u6027\u80fd (\u53c2\u800331025-\u4ee3\u7801\u6bb5-\u95ee\u98981) //\u5171\u4e09\u5904\u4f18\u5316,\u6b64\u4e43\u5176\u4e00;\n */\n+(AICansetModel*) rSolution_Slow:(ReasonDemandModel *)demand except_ps:(NSArray*)except_ps {"
        },
        {
            "comment": "Collecting candidate scene models and converting them to solution models. It retrieves overrideCansets, filters for the matching fo model, and prepares conversion parameters before generating candidate canset models.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCSolution/Util/TCSolutionUtil.m\":325-341",
            "content": "    //1. \u6536\u96c6cansetModels\u5019\u9009\u96c6;\n    NSArray *sceneModels = [TCScene rGetSceneTree:demand];//600ms\n    //2. \u6bcf\u4e2acansetModel\u8f6csolutionModel;\n    NSArray *cansetModels = [SMGUtils convertArr:sceneModels convertItemArrBlock:^NSArray *(AISceneModel *sceneModel) {\n        //3. \u53d6\u51faoverrideCansets;\n        AIFoNodeBase *sceneFo = [SMGUtils searchNode:sceneModel.scene];\n        NSArray *cansets = ARRTOOK([TCCanset getOverrideCansets:sceneModel sceneTargetIndex:sceneFo.count]);//127ms\n        AIMatchFoModel *pFo = [SMGUtils filterSingleFromArr:demand.validPFos checkValid:^BOOL(AIMatchFoModel *item) {\n            return [item.matchFo isEqual:sceneModel.getRoot.scene];\n        }];\n        NSArray *itemCansetModels = [SMGUtils convertArr:cansets convertBlock:^id(AIKVPointer *canset) {\n            //4. cansetModel\u8f6c\u6362\u5668\u53c2\u6570\u51c6\u5907;\n            NSInteger aleardayCount = sceneModel.cutIndex + 1;\n            //4. \u8fc7\u6ee4\u5668 & \u8f6ccansetModels\u5019\u9009\u96c6 (\u53c2\u800326128-\u7b2c1\u6b65 & 26161-1&2&3);\n            return [TCCanset convert2CansetModel:canset sceneFo:sceneM"
        },
        {
            "comment": "The code performs a slow thinking solution by converting demand into canset models and then ranking them based on comprehensive criteria. It also discards results significantly different from the current scene, and if a pFo is activated, it increases the abstract strength of match and canset's first part.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCSolution/Util/TCSolutionUtil.m\":341-363",
            "content": "odel.scene basePFoOrTargetFoModel:pFo ptAleardayCount:aleardayCount isH:false sceneModel:sceneModel];//1200ms/600\u6b21\u6267\u884c\n        }];\n        if (Log4GetCansetResult4R && cansets.count > 0) NSLog(@\"\\t item\u573a\u666f(%@):%@ \u53d6\u5f97\u5019\u9009\u6570:%ld \u8f6c\u6210\u5019\u9009\u6a21\u578b\u6570:%ld\",SceneType2Str(sceneModel.type),Pit2FStr(sceneModel.scene),cansets.count,itemCansetModels.count);\n        return itemCansetModels;\n    }];\n    NSLog(@\"\u7b2c2\u6b65 \u8f6c\u4e3a\u5019\u9009\u96c6 \u603b\u6570:%ld\",cansetModels.count);\n    //5. \u6162\u601d\u8003;\n    return [self generalSolution_Slow:demand cansetModels:cansetModels except_ps:except_ps];//400ms\n}\n/**\n *  MARK:--------------------\u6162\u601d\u8003--------------------\n *  @desc \u601d\u8003\u6c42\u89e3: \u524d\u6bb5\u5339\u914d,\u4e2d\u6bb5\u52a0\u5de5,\u540e\u6bb5\u9759\u9ed8 (\u53c2\u800326127);\n *  @version\n *      2022.06.04: \u4fee\u590d\u7ed3\u679c\u4e0e\u5f53\u524d\u573a\u666f\u76f8\u5dee\u751a\u8fdcBUG: \u5206\u4e09\u7ea7\u6392\u5e8f\u7a84\u51fa (\u53c2\u800326194 & 26195);\n *      2022.06.09: \u5c06R\u548cH\u7684\u6162\u601d\u8003\u5c01\u88c5\u6210\u540c\u4e00\u65b9\u6cd5,\u65b9\u4fbf\u8c03\u7528\u548c\u8fed\u4ee3;\n *      2022.06.09: \u5f03\u7528\u9608\u503c\u65b9\u6848,\u6539\u4e3a\u7efc\u5408\u6392\u540d (\u53c2\u800326222-TODO2);\n *      2022.06.12: \u6bcf\u4e2apFo\u72ec\u7acb\u505aanalyst\u6bd4\u5bf9,\u8f6c\u4e3acansetModels (\u53c2\u800326232-TODO8);\n *      2023.02.19: \u6700\u7ec8\u6fc0\u6d3b\u540e,\u5c06match\u548ccanset\u7684\u524d\u6bb5\u62bd\u5177\u8c61\u5f3a\u5ea6+1 (\u53c2\u800328086-todo2);\n */\n+(AICansetModel*) generalSolution_Slow:(DemandModel *)demand cansetModels:(NSArray*)cansetModels except_ps:(NSArray*)except_ps {"
        },
        {
            "comment": "This code block is preparing the data, filtering out non-applicable items, evaluating next frame urgency, and calculating stable scores for remaining solutions. It logs the counts at each step for testing purposes.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCSolution/Util/TCSolutionUtil.m\":364-387",
            "content": "    //1. \u6570\u636e\u51c6\u5907;\n    [AITest test13:cansetModels];\n    except_ps = ARRTOOK(except_ps);\n    AICansetModel *result = nil;\n    NSLog(@\"\u7b2c5\u6b65 Anaylst\u5339\u914d\u6210\u529f:%ld\",cansetModels.count);//\u6d4b\u65f694\u6761\n    //8. \u6392\u9664\u4e0d\u5e94\u671f;\n    cansetModels = [SMGUtils filterArr:cansetModels checkValid:^BOOL(AICansetModel *item) {\n        return ![except_ps containsObject:item.cansetFo];\n    }];\n    NSLog(@\"\u7b2c6\u6b65 \u6392\u9664\u4e0d\u5e94\u671f:%ld\",cansetModels.count);//\u6d4b\u65f6xx\u6761\n    //9. \u5bf9\u4e0b\u4e00\u5e27\u505a\u65f6\u95f4\u4e0d\u6025\u8bc4\u4ef7: \u4e0d\u6025 = \u89e3\u51b3\u65b9\u6848\u6240\u9700\u65f6\u95f4 <= \u7236\u4efb\u52a1\u80fd\u7ed9\u7684\u65f6\u95f4 (\u53c2\u8003:24057-\u65b9\u68483,24171-7);\n    cansetModels = [SMGUtils filterArr:cansetModels checkValid:^BOOL(AICansetModel *item) {\n        return [AIScore FRS_Time:demand solutionModel:item];\n    }];\n    NSLog(@\"\u7b2c7\u6b65 \u6392\u9664FRSTime\u6765\u4e0d\u53ca\u7684:%ld\",cansetModels.count);//\u6d4b\u65f6xx\u6761\n    //10. \u8ba1\u7b97\u8870\u540estableScore\u5e76\u7b5b\u6389\u4e3a0\u7684 (\u53c2\u800326128-2-1 & 26161-5);\n    //NSArray *outOfFos = [SMGUtils convertArr:cansetModels convertBlock:^id(AICansetModel *obj) {\n    //    return obj.cansetFo;\n    //}];\n    //for (AICansetModel *model in cansetModels) {\n    //    AIFoNodeBase *cansetFo = [SMGUtils searchNode:model.cansetFo];"
        },
        {
            "comment": "In this code snippet, the algorithm filters and sorts candidate sets based on their stability scores. It then ranks these candidate sets using a solution ranking method and selects the best candidate set according to reflection and real-act checks. Finally, it returns the optimal solution.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCSolution/Util/TCSolutionUtil.m\":388-415",
            "content": "    //    model.stableScore = [TOUtils getColStableScore:cansetFo outOfFos:outOfFos startSPIndex:model.cutIndex + 1 endSPIndex:model.targetIndex];\n    //}\n    //cansetModels = [SMGUtils filterArr:cansetModels checkValid:^BOOL(AICansetModel *item) {\n    //    return item.stableScore > 0;\n    //}];\n    //NSLog(@\"\u7b2c8\u6b65 \u6392\u5e8f\u4e2d\u6bb5\u7a33\u5b9a\u6027<=0\u7684:%ld\",cansetModels.count);//\u6d4b\u65f6xx\u6761\n    //11. \u6839\u636e\u5019\u9009\u96c6\u7efc\u5408\u5206\u6392\u5e8f (\u53c2\u800326128-2-2 & 26161-4);\n    NSArray *sortModels = [AIRank solutionFoRankingV3:cansetModels];\n    demand.rCansetModels = sortModels;\n    //13. \u53d6\u901a\u8fc7S\u53cd\u601d\u7684\u6700\u4f73S;\n    for (AICansetModel *item in sortModels) {\n        BOOL score = [TCRefrection refrection:item demand:demand];\n        if (!score) continue;\n        //14. \u95ef\u5173\u6210\u529f,\u53d6\u51fa\u6700\u4f73,\u8df3\u51fa\u5faa\u73af;\n        result = item;\n        break;\n    }\n    //13. \u8f93\u51fa\u524d: \u53ef\u884c\u6027\u68c0\u67e5;\n    result = [TCRealact checkRealactAndReplaceIfNeed:result fromCansets:sortModels];\n    //14. \u8fd4\u56de\u6700\u4f73\u89e3\u51b3\u65b9\u6848;\n    if (result) {\n        AIFoNodeBase *resultFo = [SMGUtils searchNode:result.cansetFo];\n        NSLog(@\"\u6162\u601d\u8003\u6700\u4f73\u7ed3\u679c:F%ld (\u524d%.2f \u4e2d%.2f \u540e%.2f) %@"
        },
        {
            "comment": "1. Updates the confidence and absolute strength of the front segment using index dictionaries (referenced in 28086).\n2. Updates the confidence and absolute strength of the back segment (referenced in 28092).\n3. Updates the algorithm reference strength by index dictionary for the front segment.\n4. Private method to get RAlearday count for a reason demand model and a match fo model.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCSolution/Util/TCSolutionUtil.m\":415-436",
            "content": "\",result.cansetFo.pointerId,result.frontMatchValue,result.midStableScore,result.backMatchValue,CLEANSTR(resultFo.spDic));\n        //15. \u66f4\u65b0\u5176\u524d\u6bb5\u5e27\u7684con\u548cabs\u62bd\u5177\u8c61\u5f3a\u5ea6 (\u53c2\u800328086-todo2);\n        [AINetUtils updateConAndAbsStrongByIndexDic:result.matchFrontIndexDic matchFo:result.sceneFo cansetFo:result.cansetFo];\n        //16. \u66f4\u65b0\u540e\u6bb5\u7684\u7684\u5177\u8c61\u5f3a\u5ea6 (\u53c2\u800328092-todo4);\n        [AINetUtils updateConAndAbsStrongByIndexDic:result.backIndexDic matchFo:result.sceneFo cansetFo:result.cansetFo];\n        //17. \u66f4\u65b0\u5176\u524d\u6bb5alg\u5f15\u7528value\u7684\u5f3a\u5ea6;\n        [AINetUtils updateAlgRefStrongByIndexDic:result.protoFrontIndexDic matchFo:result.cansetFo];\n    }\n    return result;\n}\n//MARK:===============================================================\n//MARK:                     < privateMethod >\n//MARK:===============================================================\n+(NSInteger) getRAleardayCount:(ReasonDemandModel*)rDemand pFo:(AIMatchFoModel*)pFo{\n    //1. \u6570\u636e\u51c6\u5907;\n    BOOL isRoot = !rDemand.baseOrGroup;\n    TOFoModel *demandBaseFo = (TOFoModel*)rDemand.baseOrGroup;"
        },
        {
            "comment": "This code calculates the number of already occurred actions for a given FO (Functional Object) in a task hierarchy. It differentiates between root and sub-tasks, and returns the count accordingly. The `getHAleardayCount` method retrieves the already occurred action count for a specific target FO model.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCSolution/Util/TCSolutionUtil.m\":438-459",
            "content": "    //3. \u53d6pFo\u5df2\u53d1\u751f\u4e2a\u6570 (\u53c2\u800326232-TODO3);\n    NSInteger pFoAleardayCount = 0;\n    if (isRoot) {\n        //a. \u6839R\u4efb\u52a1\u65f6 (\u53c2\u800326232-TODO5);\n        pFoAleardayCount = pFo.cutIndex + 1;\n    }else{\n        //b. \u5b50R\u4efb\u52a1\u65f6 (\u53c2\u800326232-TODO6);\n        pFoAleardayCount = [SMGUtils filterArr:pFo.indexDic2.allValues checkValid:^BOOL(NSNumber *item) {\n            int maskIndex = item.intValue;\n            return maskIndex <= demandBaseFo.actionIndex;\n        }].count;\n    }\n    return pFoAleardayCount;\n}\n+(NSInteger) getHAleardayCount:(TOFoModel*)targetFoM {\n    //1. \u5df2\u53d1\u751f\u4e2a\u6570 (targetFo\u5df2\u884c\u4e3a\u5316\u90e8\u5206\u5373\u5df2\u53d1\u751f) (\u53c2\u800326161-\u6a21\u578b);\n    NSInteger targetFoAleardayCount = targetFoM.actionIndex;\n    return targetFoAleardayCount;\n}\n@end"
        }
    ]
}