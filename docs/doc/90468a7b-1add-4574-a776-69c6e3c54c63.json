{
    "summary": "This code, from the AIAnalyst.m file of a larger project named SMG_NothingIsAll, calculates similarity between two sparse codes using \"compareCansetValue\" algorithm and returns a value representing closeness.",
    "details": [
        {
            "comment": "This code is from the AIAnalyst.m file, which appears to be part of a larger project named SMG_NothingIsAll. This function calculates the similarity between two sparse codes using an algorithm called \"compareCansetValue\". It takes three parameters: cansetV_p (a pointer to the first sparse code), protoV_p (a pointer to the second sparse code), and vInfo (an optional AIValueInfo object). The function returns a value between 0 and 1, representing the similarity between the two codes.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCRecognition/AIAnalyst.m\":0-30",
            "content": "//\n//  AIAnalyst.m\n//  SMG_NothingIsAll\n//\n//  Created by jia on 2022/6/10.\n//  Copyright \u00a9 2022\u5e74 XiaoGang. All rights reserved.\n//\n#import \"AIAnalyst.h\"\n@implementation AIAnalyst\n//MARK:===============================================================\n//MARK:                     < Alg\u5339\u914d\u5ea6 (\u7531TO\u8c03\u7528) >\n//MARK: @desc \u76ee\u524d\u5199\u5728AINetUtils.getNearData()\u4e2d,\u56de\u5934\u770b\u6574\u7406\u5230\u6b64\u5904;\n//MARK:===============================================================\n//MARK:===============================================================\n//MARK:                     < Value\u76f8\u8fd1\u5ea6 (\u7531TI\u8c03\u7528) >\n//MARK:===============================================================\n/**\n *  MARK:--------------------\u6bd4\u5bf9\u7a00\u758f\u7801\u76f8\u8fd1\u5ea6--------------------\n *  @result \u8fd4\u56de0\u52301 (0:\u7a00\u758f\u7801\u5b8c\u5168\u4e0d\u540c, 1\u7a00\u758f\u7801\u5b8c\u5168\u76f8\u540c) (\u53c2\u800326127-TODO6);\n *  @param vInfo \u4e3a\u6027\u80fd\u4f18\u5316\u590d\u7528vInfo (\u4e3a\u7a7a\u65f6,\u6b64\u65b9\u6cd5\u4f1a\u81ea\u53d6);\n *  @version\n *      2023.03.13: \u652f\u6301\u5faa\u73af\u7801\u65f6\u7684\u76f8\u8fd1\u5ea6\u8ba1\u7b97 (\u53c2\u800328174-todo2);\n *      2023.03.16: \u4fee\u590d\u9996\u5c3e\u5dee\u503c\u7b97\u9519\u7684BUG (\u56e0\u4e3a\u6d4b\u5f97360\u5de6\u53f3\u5ea6\u548c180\u5de6\u53f3\u5ea6\u76f8\u8fd1\u5ea6\u662f0.9\u4ee5\u4e0a);\n */\n+(CGFloat) compareCansetValue:(AIKVPointer*)cansetV_p protoValue:(AIKVPointer*)protoV_p vInfo:(AIValueInfo*)vInfo{\n    //1. \u53d6\u7a00\u758f\u7801\u503c;"
        },
        {
            "comment": "This code calculates the similarity between two data sets and returns a value indicating how close they are. It prepares the data, calculates the difference between the two values, and then applies different formulas depending on whether it is in a loop or in a linear state to determine the closeness of the data sets.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCRecognition/AIAnalyst.m\":31-53",
            "content": "    double cansetData = [NUMTOOK([AINetIndex getData:cansetV_p]) doubleValue];\n    double protoData = [NUMTOOK([AINetIndex getData:protoV_p]) doubleValue];\n    //2. \u8ba1\u7b97\u76f8\u8fd1\u5ea6\u8fd4\u56de;\n    return [self compareCansetValue:cansetData protoV:protoData at:cansetV_p.algsType ds:cansetV_p.dataSource isOut:protoV_p.isOut vInfo:vInfo];\n}\n+(CGFloat) compareCansetValue:(double)cansetV protoV:(double)protoV at:(NSString*)at ds:(NSString*)ds isOut:(BOOL)isOut vInfo:(AIValueInfo*)vInfo{\n    //1. \u6570\u636e\u51c6\u5907;\n    if (!vInfo) vInfo = [AINetIndex getValueInfo:at ds:ds isOut:isOut];\n    if (vInfo.span == 0) return 1;\n    double delta = [AINetIndexUtils deltaWithValueA:cansetV valueB:protoV at:at ds:ds isOut:isOut vInfo:vInfo];\n    //2. \u5faa\u73af\u65f6: \u8ba1\u7b97\u51fanearV\u76f8\u8fd1\u5ea6 (\u53c2\u800328174-todo2);\n    if (vInfo.loop) {\n        return 1 - delta / (vInfo.span / 2);\n    }\n    //3. \u7ebf\u6027\u65f6: \u8ba1\u7b97\u51fanearV\u76f8\u8fd1\u5ea6 (\u53c2\u800325082-\u516c\u5f0f1);\n    return 1 - delta / vInfo.span;\n}\n@end"
        }
    ]
}