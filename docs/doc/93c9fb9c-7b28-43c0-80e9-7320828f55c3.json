{
    "summary": "The code ensures that the best result contains non-empty and specific can sets, choosing from prototype can sets based on competition among protoModels. It replaces empty concepts with more specific ones if necessary before outputting the best solution.",
    "details": [
        {
            "comment": "This code checks if the best result contains empty concepts and replaces it with a more specific can set (filtering out the ones with empty concepts) if necessary. It ensures that the new best result is derived from the prototype can sets, does not contain empty concepts, and is chosen based on competition among protoModels. This function is called before TCSolutionUtil outputs the best solution.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCRealact/TCRealact.m\":0-29",
            "content": "//\n//  TCRealact.m\n//  SMG_NothingIsAll\n//\n//  Created by jia on 2023/4/17.\n//  Copyright \u00a9 2023\u5e74 XiaoGang. All rights reserved.\n//\n#import \"TCRealact.h\"\n@implementation TCRealact\n/**\n *  MARK:--------------------TCSolution\u6700\u4f73\u8f93\u51fa\u7684\u53ef\u884c\u6027\u68c0\u67e5--------------------\n *  @title \u5224\u65ad\u5305\u542b\u7a7a\u6982\u5ff5\u65f6,\u53d6\u7528\u5177\u8c61\u4e00\u7ea7\u7684canset (\u8fc7\u6ee4\u6389\u5177\u8c61\u4e5f\u542b\u7a7a\u6982\u5ff5\u7684\u90e8\u5206) (\u53c2\u800329069-todo8);\n *  @desc \u5c06\u6700\u4f73\u8f93\u51fa\u542b\u7a7a\u6982\u5ff5\u65f6,\u8f6c\u6210\u5177\u8c61\u4e00\u5c42\u7684\u53e6\u4e00\u4e2aTCCansetModel;\n *  @desc \u5f53\u524dbestResult\u542b\u7a7a\u6982\u5ff5\u65f6,\u6b64\u65b9\u6cd5\u8d1f\u8d23\u62e6\u622a,\u5e76\u5411\u5b83\u7684\u5177\u8c61\u53d6\u51fa\u4e0d\u542b\u7a7a\u6982\u5ff5\u7684\u4e00\u6761,\u505a\u4e3aTCSolutionUtil\u7684\u6700\u4f73\u8f93\u51fa;\n *      1. \u8981\u6c42: \u53d6\u5177\u8c61\u4e5f\u8981\u7b26\u5408\u5b83\u5728protoCansets\u4e2d (\u56e0\u4e3a\u672c\u6765\u5c31\u662f\u62ffprotoCansets\u4e2d\u7684\u53e6\u4e00\u4e2a\u6765\u66ff\u6362);\n *      2. \u9632\u7a7a: \u53d6\u5177\u8c61\u4e0d\u80fd\u518d\u542b\u7a7a\u6982\u5ff5\u4e86;\n *      3. \u7ade\u4e89: \u53d6protoModels\u4e2d\u7b26\u5408\u6761\u4ef6\u7684\u9996\u6761;\n *  @desc \u6a21\u5757\u8c03\u7528\u4f4d\u7f6e\u8bf4\u660e:\n *      1. \u56e0\u4e3a\u66ff\u6362\u540e\u7684actionIndex\u548ctargetIndex\u7b49\u90fd\u9700\u8981\u7528,\u6240\u4ee5\u8fd9\u4e2a\u4ee3\u7801\u5199\u5728TCSolutionUtil\u8f93\u51fa\u6700\u4f73S\u4e4b\u524d\u8c03\u7528;\n *  @param bestResult : \u4f20\u5165TCSolutionUtil\u6700\u4f73\u65b9\u6848bestResult\u6a21\u578b;\n *  @param fromCansets : \u4f20\u5165TCSolutionUtil\u8f93\u51fa\u6700\u4f73result\u65f6,result\u6240\u5728\u7684\u5168\u96c6sortModels\u6570\u7ec4;\n *  @result \u5982\u6709\u5fc5\u8981,\u5c06\u66ff\u6362\u53ef\u884c\u540e\u7684\u65b0bestResult\u8fd4\u56de;\n */\n+(AICansetModel*) checkRealactAndReplaceIfNeed:(AICansetModel*)bestResult fromCansets:(NSArray*)fromCansets {\n    if (bestResult.baseSceneModel) {\n        //1. \u5224\u65ad\u5305\u542b\u7a7a\u6982\u5ff5;\n        if ([AINetUtils foHasEmptyAlg:bestResult.cansetFo]) {"
        },
        {
            "comment": "This code searches for a specific concrete canset (using the bestResult.cansetFo), filters out non-best concretes and those containing empty concepts, and returns the first matching one. If no matching canset is found or the canset contains an empty concept, it keeps the original bestResult. If it's not a scene, it doesn't replace anything and also returns the original bestResult.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCRealact/TCRealact.m\":31-53",
            "content": "            //2. \u53d6\u5177\u8c61\u4e00\u7ea7cansets (\u7528\u7a7a\u6982\u5ff5\u7ecf\u9a8c\u7684\u5177\u8c61,\u4e0e\u5f53\u524d\u573a\u666f\u7684overrideCansets\u53d6\u4ea4\u96c6\u5f97\u51fa);\n            AIFoNodeBase *bestCansetFo = [SMGUtils searchNode:bestResult.cansetFo];\n            NSArray *conCansets = Ports2Pits([AINetUtils conPorts_All:bestCansetFo]);\n            return [SMGUtils filterSingleFromArr:fromCansets checkValid:^BOOL(AICansetModel *item) {\n                //a. \u8fc7\u6ee4\u6389\u975ebest\u5177\u8c61\u7684;\n                if (![conCansets containsObject:item.cansetFo]) return false;\n                //b. \u8fc7\u6ee4\u6389\u5177\u8c61\u4ea6\u542b\u7a7a\u6982\u5ff5\u7684;\n                if ([AINetUtils foHasEmptyAlg:item.cansetFo]) return false;\n                //c. \u95ef\u5173\u6210\u529f,\u8fd4\u56de\u8fd9\u6761;\n                return true;\n            }];\n        }\n        //2. \u4e0d\u542b\u7a7a\u6982\u5ff5\u65f6,\u4e0d\u66ff\u6362;\n        return bestResult;\n    } else {\n        //3. \u975e\u573a\u666f\u65f6,\u4e0d\u66ff\u6362;\n        return bestResult;\n    }\n}\n@end"
        }
    ]
}