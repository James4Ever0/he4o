{
    "summary": "The code optimizes performance, logs debug info and performs array calculations for object recognition software. It converts data, handles duplicates, adjusts for competition, prepares data, calculates cooling time, and scales importance dictionary values for comparison and analysis.",
    "details": [
        {
            "comment": "This code appears to be a part of a larger program. The specific section being discussed is calculating the importance dictionary for a given AI model, in this case, TCRecognitionUtil. It prepares the necessary data and collects all abstract parts of concrete (abstracted) PFos from the input model. There are also mentions of performance optimizations and debug mode.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCRecognition/TCRecognitionUtil.m\":0-27",
            "content": "//\n//  TCRecognitionUtil.m\n//  SMG_NothingIsAll\n//\n//  Created by jia on 2023/5/30.\n//  Copyright \u00a9 2023\u5e74 XiaoGang. All rights reserved.\n//\n#import \"TCRecognitionUtil.h\"\n@implementation TCRecognitionUtil\n/**\n *  MARK:--------------------\u83b7\u53d6V\u91cd\u8981\u6027\u5b57\u5178 (\u53c2\u800329105 & 29106)--------------------\n *  @result \u8fd4\u56de\u7ed3\u679c\u4e3a\u91cd\u8981\u6027\u5b57\u5178<K:\u7a00\u758f\u7801\u6807\u8bc6,V:\u91cd\u8981\u6027\u503c> & \u505a\u4e86\u6700\u5c0f\u503c1\u7684\u7f29\u653e\u5904\u7406 (\u53c2\u800329107-\u6b65\u9aa41);\n *  @version\n *      2023.06.02: \u4f18\u5316vInfo\u5728\u5faa\u73af\u4e2d,\u5bfc\u81f4\u7684\u6027\u80fd\u95ee\u9898,\u628avInfo\u79fb\u5230\u5c3d\u53ef\u4ee5\u5faa\u73af\u5916,\u7136\u540e\u4f20\u8fdb\u53bb\u590d\u7528\u540e\u6027\u80fdok (\u53c2\u800329109-\u6d4b\u5f972);\n *      2023.06.12: \u4f18\u5316\u53d6\u5f97\u540c\u7ea7\u573a\u666f\u7684\u6761\u6570,\u907f\u514d\u6761\u6570\u592a\u591a\u5bfc\u81f4\u5361 (\u53c2\u800330022-\u4f18\u53163);\n */\n+(NSDictionary*) getVImportanceDic:(AIShortMatchModel*)inModel {\n    //1. \u6570\u636e\u51c6\u5907;\n    NSMutableDictionary *result = [[NSMutableDictionary alloc] init];\n    BOOL debugMode = false;\n    if (debugMode) AddDebugCodeBlock_Key(@\"a\", STRFORMAT(@\"1 pFos:%ld\u6761\",inModel.matchPFos.count));\n    NSMutableDictionary *cutIndexOfConFo = [[NSMutableDictionary alloc] init]; //\u6536\u96c6\u6240\u6709\u540c\u7ea7fo\u7684cutIndex\n    //2. \u9010\u4e2a\u6536\u96c6pFos\u7684\u540c\u7ea7(\u62bd\u8c61\u7684\u5177\u8c61)->\u62bd\u8c61\u90e8\u5206 (\u53c2\u800329105-\u65b9\u6848\u6539);\n    NSMutableArray *allConPorts1 = [self collectAbsFosThenConFos:inModel.matchPFos outCutIndexDic:cutIndexOfConFo];"
        },
        {
            "comment": "This code is sorting a list of ports based on their strength, then taking the first 20% of the sorted list. It is also logging information about each step in debug mode.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCRecognition/TCRecognitionUtil.m\":28-45",
            "content": "    if (debugMode) AddDebugCodeBlock_Key(@\"a\", STRFORMAT(@\"2 \u540c\u5c42\u573a\u666f:%ld\u6761\",allConPorts1.count));\n    //6. \u6392\u5e8f,\u5e76\u53d6\u524d20% (\u53c2\u800329105-todo2);\n    NSArray *sortOfStrong3 = [SMGUtils sortBig2Small:allConPorts1 compareBlock:^double(AIPort *obj) {\n        return obj.strong.value;\n    }];\n    if (debugMode) AddDebugCodeBlock_Key(@\"a\", @\"3\");\n    NSInteger goodLimit = MIN(30, sortOfStrong3.count * 0.2f);\n    NSArray *goodPorts4 = ARR_SUB(sortOfStrong3, 0, goodLimit);\n    if (debugMode) AddDebugCodeBlock_Key(@\"a\", STRFORMAT(@\"4 \u5f3a\u5ea6\u524d20%%: %ld\u6761\",goodPorts4.count));\n    //7. \u5206\u522b\u6839\u636eprotoV\u627e\u5230\u5728goodPorts4\u4e2d\u6700\u76f8\u8fd1\u7684\u90a3\u4e00\u6761,\u6700\u63a5\u8fd1\u90a3\u6761\u7684\u5f3a\u5ea6\u5373\u7b97\u505aprotoV\u7684\u5f3a\u5ea6 (\u53c2\u800329105-todo3-\u65b9\u68484);\n    NSMutableString *zunjieLog = [[NSMutableString alloc] init];\n    for (AIKVPointer *protoV_p in inModel.protoAlg.content_ps) {\n        if (debugMode) AddDebugCodeBlock_Key(@\"a\", @\"7\");\n        //8. \u8282\u7ea6\u6027\u80fd: \u5168\u7a0b\u53ea\u6709\u4e00\u4e2a\u56fa\u5b9a\u503c\u7684\u6253\u9171\u6cb9\u7801,\u4e0d\u505a\u5904\u7406 (\u53c2\u800329105-todo4);\n        AIValueInfo *info = [AINetIndex getValueInfo:protoV_p.algsType ds:protoV_p.dataSource isOut:protoV_p.isOut];\n        if (debugMode) AddDebugCodeBlock_Key(@\"a\", STRFORMAT(@\"8 \u53c2\u4e0exy\u8f74\u5b57\u5178: %ld\u6761\",goodPorts4.count));"
        },
        {
            "comment": "Continue loop if span of info is 0. Calculate xy coordinates from goodPorts4 and cutIndexOfConFo using convertConFoPorts2XYDic method. If xyDic is not valid, continue loop. Iterate through each sample in 100 parts and calculate average Y value. Store current Y values in an array quXianYArr for later use.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCRecognition/TCRecognitionUtil.m\":46-65",
            "content": "        if (info.span == 0) continue;\n        //9. \u6c42\u51fa\u5168\u90e8xy\u8f74;\n        NSDictionary *xyDic = [self convertConFoPorts2XYDic:goodPorts4 cutIndexDic:cutIndexOfConFo protoV:protoV_p];\n        if (debugMode) AddDebugCodeBlock_Key(@\"a\", @\"9\");\n        if (!DICISOK(xyDic)) continue;\n        //10. \u5747\u5300\u53d6\u6837100\u4efd,\u6c42\u51fa\u5e73\u5747\u503c (\u53c2\u800329106-\u89e3\u5747\u503c);\n        double sumTemplateY = 0;//\u6240\u6709\u6837\u672c\u603bY\u503c;\n        NSMutableArray *quXianYArr = [[NSMutableArray alloc] init];\n        for (int i = 0; i < 100; i++) {\n            if (debugMode) AddDebugCodeBlock_Key(@\"a\", @\"10\");\n            double itemSpan = info.span / 100;\n            double curX = (i + 0.5f) * itemSpan;\n            if (debugMode) AddDebugCodeBlock_Key(@\"a\", @\"11\");\n            CGFloat curY = [self getY:xyDic checkX:curX at:protoV_p.algsType ds:protoV_p.dataSource isOut:protoV_p.isOut vInfo:info];\n            if (debugMode) AddDebugCodeBlock_Key(@\"a\", @\"12\");\n            sumTemplateY += curY;\n            [quXianYArr addObject:@(curY)];\n            if (debugMode) AddDebugCodeBlock_Key(@\"a\", @\"13\");"
        },
        {
            "comment": "This code segment calculates the average Y value of a template, computes the Y-axis strength value for protoV based on its indexed data, and finds the maximum Y value in an array. It then iterates through the array from the maximum Y value to 1, printing each line with alternating heights.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCRecognition/TCRecognitionUtil.m\":66-85",
            "content": "        }\n        double averageY = sumTemplateY / 100;\n        if (debugMode) AddDebugCodeBlock_Key(@\"a\", @\"14\");\n        //11. \u6839\u636eprotoV\u7684\u503c,\u6c42\u51faprotoV\u7684Y\u8f74\u5f3a\u5ea6\u503c;\n        double protoV = NUMTOOK([AINetIndex getData:protoV_p]).doubleValue;\n        if (debugMode) AddDebugCodeBlock_Key(@\"a\", @\"15\");\n        CGFloat protoY = [self getY:xyDic checkX:protoV at:protoV_p.algsType ds:protoV_p.dataSource isOut:protoV_p.isOut vInfo:info];\n        if (debugMode) AddDebugCodeBlock_Key(@\"a\", @\"16\");\n        //12. debugLog\n        //for (AIPort *conFoPort in goodPorts4) NSLog(@\"\\t\\t > conFo: %@ \u5f3a\u5ea6%ld\",Pit2FStr(conFoPort.target_p),conFoPort.strong.value);\n        int maxY = (int)protoY;\n        for (NSNumber *item in quXianYArr) {\n            if (maxY < (int)item.doubleValue) maxY = (int)item.doubleValue;\n        }\n        if (debugMode) AddDebugCodeBlock_Key(@\"a\", @\"17\");\n        for (int row = maxY; row >= 1; row--) {//\u4e00\u884c\u884c\u6253\u5370\n            NSMutableString *line = [[NSMutableString alloc] init];\n            if (row % 2 == 1) continue;//\u9ad8\u5ea6\u7f29\u5c0f\u4e3a50%;"
        },
        {
            "comment": "In this code snippet, a loop iterates through each column in an array and performs calculations to determine whether to display a \"\u25cf\", \"|\", or \"o\" symbol. The results are then printed or logged, depending on the debug mode setting. Finally, the importance of the current code is calculated and displayed.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCRecognition/TCRecognitionUtil.m\":86-102",
            "content": "            for (int column = 0; column < quXianYArr.count; column++) {\n                int quXianY = NUMTOOK(ARR_INDEX(quXianYArr, column)).doubleValue;\n                double protoX = (protoV / info.span) * 100; //protoX\u9700\u8981\u7531\u771f\u5b9ev\u503c,\u8f6c\u4e3a0-100\u7684x\u8f74\u503c;\n                BOOL isProto = fabs(row - protoY) <= 2 && fabs(column - protoX) <= 1;//\u653e\u5927proto\u70b9\u6253\u5370(\u66f4\u663e\u773c)\n                BOOL border = column == 0;\n                NSString *spc = isProto ? @\"\u25cf\" : border ? @\"|\" : @\" \";\n                NSString *dot = isProto ? @\"\u25cf\" : row / 2 == ((int)averageY) / 2 ? @\"-\" : @\"o\";\n                [line appendString:quXianY >= row ? dot : spc];\n            }\n            if (debugMode) NSLog(@\"%@\",line);\n        }\n        if (debugMode) AddDebugCodeBlock_Key(@\"a\", @\"18\");\n        //13. \u7b97\u51fa\u5f53\u524d\u7801\u7684\u91cd\u8981\u6027 (\u53c2\u800329105-todo5);\n        double vImportance = protoY / averageY;\n        if (debugMode) NSLog(@\"------------------------------------------ %@ \u91cd\u8981\u6027:%.3f ------------------------------------------\\n\",Pit2FStr(protoV_p),vImportance);\n        [zunjieLog appendFormat:@\"%@ = %.3f; \",Pit2FStr(protoV_p),vImportance];"
        },
        {
            "comment": "This code snippet is part of a larger program that handles matching and recognition of certain objects. It collects pFo models, performs checks on the data and collects same-layer Fos. The method also includes debugging options for logging and printing. A result is returned after scaling processing.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCRecognition/TCRecognitionUtil.m\":103-132",
            "content": "        [result setObject:@(vImportance) forKey:protoV_p.identifier];\n    }\n    if (debugMode) AddDebugCodeBlock_Key(@\"a\", @\"19\");\n    NSLog(@\"\u91cd\u8981\u6027\u7ed3\u679c: %@\",zunjieLog);\n    //14. \u7f29\u653e\u5904\u7406\u5e76\u8fd4\u56de (\u53c2\u800329107-\u6b65\u9aa41);\n    if (debugMode) PrintDebugCodeBlock_Key(@\"a\");\n    return [self scala4ImportanceDic:result];\n}\n//MARK:===============================================================\n//MARK:                     < privateMethod >\n//MARK:===============================================================\n/**\n *  MARK:--------------------\u6536\u96c6pFos\u7684\u540c\u5c42fos (\u62bd\u8c61\u540e\u5177\u8c61)--------------------\n *  @param outCutIndexDic \u5c06\u7ed3\u679c\u5bf9\u5e94\u7684cutIndex\u4e5f\u8fd4\u56de;\n *  @version\n *      2023.06.11: \u8fd4\u56de\u7ed3\u679c\u9632\u91cd,\u63d0\u524d\u9632\u91cd\u6027\u80fd\u597d (\u53c2\u800330022-\u4f18\u53161);\n *  @result notnull\n */\n+(NSMutableArray*) collectAbsFosThenConFos:(NSArray*)pFoModels outCutIndexDic:(NSMutableDictionary*)outCutIndexDic{\n    //1. \u6570\u636e\u68c0\u67e5;\n    BOOL debugMode = false;\n    NSMutableArray *result = [[NSMutableArray alloc] init];\n    pFoModels = ARRTOOK(pFoModels);\n    //2. \u4f9d\u6b21\u5bf9pFo\u53d6\u540c\u5c42;\n    for (AIMatchFoModel *pFoM in pFoModels) {\n        AIFoNodeBase *pFo = [SMGUtils searchNode:pFoM.matchFo];"
        },
        {
            "comment": "Iterates through abstract ports and their associated parts, checks for a corresponding cutIndex frame, filters out unnecessary parts, and prevents duplicate or invalid parts.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCRecognition/TCRecognitionUtil.m\":133-151",
            "content": "        NSArray *abs_ps = Ports2Pits([AINetUtils absPorts_All:pFo]);\n        if (debugMode) NSLog(@\"from pFo: %@\",Fo2FStr(pFo));\n        for (AIKVPointer *abs_p in abs_ps) {\n            //3. \u5224\u65ad\u62bd\u8c61\u4e2d\u6709\u5bf9\u5e94\u7684cutIndex\u5e27;\n            NSDictionary *indexDic = [pFo getAbsIndexDic:abs_p];\n            NSNumber *absCutIndexKey = ARR_INDEX([indexDic allKeysForObject:@(pFoM.cutIndex)], 0);\n            if (!absCutIndexKey) continue;\n            //4. \u9010\u4e2a\u6536\u96c6pFos\u7684\u540c\u7ea7(\u62bd\u8c61\u7684\u5177\u8c61)->\u5177\u8c61\u90e8\u5206 (\u53c2\u800329105-\u65b9\u6848\u6539);\n            AIFoNodeBase *absFo = [SMGUtils searchNode:abs_p];\n            if (!absFo.cmvNode_p) continue;//\u65e0mv\u6307\u5411\u5219\u7565\u8fc7;\n            if (debugMode) NSLog(@\"\\t > absFo: %@->%@\",Pit2FStr(abs_p),Pit2FStr(absFo.cmvNode_p));\n            NSArray *conPorts = [AINetUtils conPorts_All:absFo];\n            for (AIPort *conPort in conPorts) {\n                //4. \u9632\u91cd (\u6839\u636eoutCutIndexDic\u9632\u91cd,\u6027\u80fd\u66f4\u597d) (\u53c2\u800329105-todo1);\n                if ([outCutIndexDic objectForKey:@(conPort.target_p.pointerId)]) continue;\n                //4. \u9632\u65e0\u6548;\n                NSDictionary *indexDic2 = [absFo getConIndexDic:conPort.target_p];"
        },
        {
            "comment": "This code converts force port data into an xy-coordinate dictionary. It first prepares the necessary data and then iterates over each force port, collecting their x and y values, along with the corresponding cut index. The collected data is stored in a dictionary where the key is the pointer's ID and the value is the xy coordinate pair. The code also includes performance optimizations like reusing protoDataDic and protoIdentifier within a for loop to avoid unnecessary memory allocations.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCRecognition/TCRecognitionUtil.m\":152-175",
            "content": "                NSNumber *conCutIndexValue = [indexDic2 objectForKey:absCutIndexKey];\n                if (!conCutIndexValue) continue;\n                //5. \u5206\u522b\u6536\u96c6\u540c\u7ea7port,\u548c\u8bb0\u5f55\u5b83\u7684conCutIndex;\n                [outCutIndexDic setObject:conCutIndexValue forKey:@(conPort.target_p.pointerId)];\n                [result addObject:conPort];\n            }\n        }\n    }\n    return result;\n}\n/**\n *  MARK:--------------------\u5c06conFoPorts\u8f6c\u6210xy\u8f74\u6570\u636e (x\u8f74\u4e3av\u503c,y\u8f74\u4e3a\u5f3a\u5ea6) (\u53c2\u800329106-\u89e3\u66f2\u7ebf)--------------------\n *  @version\n *      2023.06.12: \u6027\u80fd\u4f18\u5316,\u5c06protoDataDic\u548cprotoIdentifier\u5728for\u5faa\u73af\u5916\u590d\u7528 (\u53c2\u800330022);\n */\n+(NSDictionary*) convertConFoPorts2XYDic:(NSArray*)conFoPorts cutIndexDic:(NSDictionary*)cutIndexDic protoV:(AIKVPointer*)protoV_p {\n    //1. \u6570\u636e\u51c6\u5907;\n    BOOL debugMode = false;\n    if (debugMode) AddDebugCodeBlock_Key(@\"b\", @\"0\");\n    NSMutableDictionary *result = [[NSMutableDictionary alloc] init];\n    NSDictionary *protoDataDic = [AINetIndexUtils searchDataDic:protoV_p.algsType ds:protoV_p.dataSource isOut:protoV_p.isOut];//\u4e3a\u6027\u80fd,\u5728for\u4e2d\u590d\u7528\n    NSString *protoIdentifier = protoV_p.identifier;//\u4e3a\u6027\u80fd,\u5728for\u4e2d\u590d\u7528"
        },
        {
            "comment": "This code is part of a larger program that involves multiple layers and components. It appears to be searching for specific nodes, identifying corresponding concepts in `conFo`, and extracting information from those concepts. The `debugMode` variable seems to control the inclusion of debugging messages in the process. Overall, it's difficult to provide more context or a detailed explanation without further information about the codebase as a whole.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCRecognition/TCRecognitionUtil.m\":176-194",
            "content": "    if (debugMode) AddDebugCodeBlock_Key(@\"b\", @\"1\");\n    //2. \u8f6c\u6210conFo\u4e2d\u5bf9\u5e94\u7684\u6982\u5ff5\u5e27conAlg;\n    for (AIPort *conFoPort in conFoPorts) {\n        if (debugMode) AddDebugCodeBlock_Key(@\"b\", @\"2\");\n        AIFoNodeBase *conFo = [SMGUtils searchNode:conFoPort.target_p];\n        if (debugMode) AddDebugCodeBlock_Key(@\"b\", @\"3\");\n        NSInteger conCutIndex = NUMTOOK([cutIndexDic objectForKey:@(conFo.pId)]).integerValue;\n        if (debugMode) AddDebugCodeBlock_Key(@\"b\", @\"4\");\n        AIKVPointer *conAlg_p = ARR_INDEX(conFo.content_ps, conCutIndex);\n        if (debugMode) AddDebugCodeBlock_Key(@\"b\", @\"5\");\n        AIAlgNodeBase *conAlg = [SMGUtils searchNode:conAlg_p];\n        if (debugMode) AddDebugCodeBlock_Key(@\"b\", @\"6\");\n        //3. \u5728conAlg\u4e2d\u627e\u7740\u540c\u533a\u7801 (\u7528\u6765\u53d6xy\u8f74);\n        AIKVPointer *findSameIdenConValue_p = [SMGUtils filterSingleFromArr:conAlg.content_ps checkValid:^BOOL(AIKVPointer *conValue_p) {\n            return [protoIdentifier isEqualToString:conValue_p.identifier];\n        }];\n        if (debugMode) AddDebugCodeBlock_Key(@\"b\", @\"7\");"
        },
        {
            "comment": "This code calculates a feature intensity curve using x and y values, and returns a dictionary of x-y pairs. It also includes debugging code blocks and provides a method to calculate y value based on given x value in a dictionary. The code is version controlled with recent updates increasing competition by adjusting radiation and environment temperature percentages.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCRecognition/TCRecognitionUtil.m\":195-218",
            "content": "        if (!findSameIdenConValue_p) continue;\n        //4. \u5f97\u51faxy\u8f74\u503c,\u7528\u4e8e\u8ba1\u7b97\u7279\u5f81\u5f3a\u5ea6\u66f2\u7ebf (\u53c2\u800329106-\u89e3\u66f2\u7ebf);\n        double x = NUMTOOK([AINetIndex getData:findSameIdenConValue_p fromDataDic:protoDataDic]).doubleValue;\n        if (debugMode) AddDebugCodeBlock_Key(@\"b\", @\"8\");\n        NSInteger y = conFoPort.strong.value;\n        [result setObject:@(y) forKey:@(x)];\n        if (debugMode) AddDebugCodeBlock_Key(@\"b\", @\"9\");\n    }\n    if (debugMode) AddDebugCodeBlock_Key(@\"b\", @\"10\");\n    if (debugMode) PrintDebugCodeBlock_Key(@\"b\");\n    return result;\n}\n/**\n *  MARK:--------------------\u6839\u636exyDic\u548cx\u503c\u8ba1\u7b97\u51fay\u503c (\u53c2\u800329106-\u89e3\u66f2\u7ebf)--------------------\n *  @param vInfo notnull \u4e3a\u6027\u80fd\u597d,\u63d0\u524d\u53d6\u597dvalueInfo\u4f20\u8fc7\u6765\u590d\u7528;\n *  @version\n *      2023.05.30: \u589e\u5f3a\u7ade\u4e89: \u5c06\u8f90\u5c04\u753150%\u6539\u4e3a33%,\u73af\u5883\u6e29\u5ea6\u753130%\u6539\u4e3a10% (\u53c2\u800329106-todo7.1);\n *      2023.05.30: \u589e\u5f3a\u7ade\u4e89: \u52a0\u4e0a\u53ef\u89c6\u5316\u66f2\u7ebf\u540e,\u8fb9\u8c03\u6574\u8fb9\u770b\u66f2\u7ebf,\u8c03\u6574\u4e3a\u8f90\u5c0450%,\u73af\u5883\u6e29\u5ea65% (\u540e\u518d\u6fc0\u70c8\u70b9,\u8c03\u62103%);\n */\n+(CGFloat) getY:(NSDictionary*)xyDic checkX:(double)checkX at:(NSString*)at ds:(NSString*)ds isOut:(BOOL)isOut vInfo:(AIValueInfo*)vInfo{\n    CGFloat resultY = 0;\n    for (NSNumber *key in xyDic.allKeys) {"
        },
        {
            "comment": "This code snippet performs data preparation, calculates the cooling time based on the input values and uses a scaling method to process an importance dictionary. The scaling method scales the dictionary values to have a minimum value of 1, which is useful for comparison and analysis in various contexts.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCRecognition/TCRecognitionUtil.m\":219-250",
            "content": "        //1. \u6570\u636e\u51c6\u5907;\n        double templateX = key.doubleValue;\n        NSInteger y = NUMTOOK([xyDic objectForKey:key]).integerValue;\n        //2. \u5df2\u51b7\u5374\u65f6\u957f;\n        double delta = [AINetIndexUtils deltaWithValueA:templateX valueB:checkX at:at ds:ds isOut:isOut vInfo:vInfo];\n        //3. span\u768450%\u65f6\u51b7\u5374\u5b8c\u6210,\u73af\u5883\u6e29\u5ea630% (\u53c2\u800329106-\u89e3\u66f2\u7ebf);\n        CGFloat cooledValue = [MathUtils getCooledValue:vInfo.span / 4 pastTime:delta finishValue:0.005f];\n        //4. \u5c06checkX\u7684\u5f3a\u5ea6\u503c\u7d2f\u8ba1\u8d77\u6765,\u7528\u4e8e\u8fd4\u56de;\n        resultY += y * cooledValue;\n    }\n    return resultY;\n}\n/**\n *  MARK:--------------------\u5b57\u5178\u7f29\u653e\u5904\u7406--------------------\n *  @desc \u7f29\u653e\u81f3\u6700\u5c0f\u503c\u4e3a1 (\u53c2\u800329107-\u6b65\u9aa41);\n */\n+(NSDictionary*) scala4ImportanceDic:(NSDictionary*)importanceDic {\n    //1. \u6570\u636e\u68c0\u67e5;\n    importanceDic = DICTOOK(importanceDic);\n    //2. \u7f29\u653e\u91cd\u8981\u6027\u5b57\u5178: \u627e\u5230\u6700\u5c0f\u503c (\u53c2\u800329107-\u6b65\u9aa41);\n    double min = MAXFLOAT;\n    for (NSNumber *value in importanceDic.allValues) {\n        if (min > value.doubleValue) min = value.doubleValue;\n    }\n    //3. \u7f29\u653e\u91cd\u8981\u6027\u5b57\u5178: \u7f29\u653e\u81f3\u6700\u5c0f\u503c\u4e3a1 (\u53c2\u800329107-\u6b65\u9aa41);\n    for (NSString *key in importanceDic.allKeys) {"
        },
        {
            "comment": "Computes a normalized value for each key in the dictionary using NUMTOK function and stores it back in the dictionary with values divided by min. Returns the modified dictionary.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCRecognition/TCRecognitionUtil.m\":251-257",
            "content": "        double value = NUMTOOK([importanceDic objectForKey:key]).doubleValue;\n        [importanceDic setValue:@(value / min) forKey:key];\n    }\n    return importanceDic;\n}\n@end"
        }
    ]
}