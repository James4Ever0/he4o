{
    "summary": "AIHeader.h imports necessary modules for SMG_NothingIsAll, including utility and task pool models, offering constant definitions, string operations, array/dictionary macros, data type conversion utilities, access to AIFoundation library objects, logging constants/macros, customizable log statements, macro functions for AI system logging with adjustable modes and levels of logging, and switches to manage features during development.",
    "details": [
        {
            "comment": "This file, AIHeader.h, imports numerous other files for various functionalities and modules in the SMG_NothingIsAll codebase. It includes utilities, task pool models, and other necessary headers for proper functioning of the AI system.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIHeader.h\":0-48",
            "content": "//\n//  AIHeader.h\n//  SMG_NothingIsAll\n//\n//  Created by \u8d3e  on 2017/5/21.\n//  Copyright \u00a9 2017\u5e74 XiaoGang. All rights reserved.\n//\n#import \"SMGEnum.h\"\n#import \"SMGUtils.h\"\n#import \"SMGUtils+General.h\"\n#import \"SMGConfig.h\"\n#import \"AINodeBase.h\"\n#import \"AIFoNodeBase.h\"\n#import \"AICMVNodeBase.h\"\n#import \"NVHeader.h\"\n#import \"AIInput.h\"\n#import \"AINet.h\"\n#import \"HeLogHeader.h\"\n#import \"AIKVPointer.h\"\n#import \"AIThinkingControl.h\"\n#import \"NSString+Extension.h\"\n#import \"AsyncMutableArray.h\"\n#import \"AsyncMutableDictionary.h\"\n#import \"AIScore.h\"\n#import \"XGDelegate.h\"\n#import \"TOModelVision.h\"\n#import \"TOMVision2.h\"\n#import \"RTQueueModel.h\"\n#import \"XGWedis.h\"\n#import \"CortexAlgorithmsUtil.h\"\n#import \"MapModel.h\"\n//Util\n#import \"ThinkingUtils.h\"\n#import \"TOUtils.h\"\n#import \"TIUtils.h\"\n#import \"TCSolutionUtil.h\"\n#import \"TCRecognitionUtil.h\"\n#import \"TCRethinkUtil.h\"\n#import \"NVViewUtil.h\"\n#import \"MathUtils.h\"\n#import \"XGDebug.h\"\n#import \"TCDebug.h\"\n//\u4efb\u52a1\u6c60\n#import \"ReasonDemandModel.h\"\n#import \"PerceptDemandModel.h\"\n#import \"HDemandModel.h\""
        },
        {
            "comment": "This code imports various models and classes for different aspects of the AI system, such as demand manager, short-term memory, networking, analyzers, evaluators, triggers, repeat prevention, rankings, filters, and the new 2021 TC architecture.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIHeader.h\":49-96",
            "content": "#import \"DemandManager.h\"\n#import \"AIMatchFoModel.h\"\n#import \"AIMatchAlgModel.h\"\n#import \"AIMatchCansetModel.h\"\n//\u77ed\u65f6\u8bb0\u5fc6\n#import \"TOAlgModel.h\"\n#import \"TOFoModel.h\"\n#import \"AIShortMatchModel.h\"\n#import \"AIShortMatchModel_Simple.h\"\n#import \"ShortMatchManager.h\"\n#import \"AICansetModel.h\"\n#import \"AISceneModel.h\"\n#import \"FrontIndexDicModel.h\"\n#import \"AITransferModel.h\"\n#import \"TCResult.h\"\n//\u7f51\u7edc\n#import \"AINetUtils.h\"\n#import \"AINetIndex.h\"\n#import \"AINetIndexUtils.h\"\n#import \"AIPort.h\"\n#import \"AITransferPort.h\"\n#import \"AIAbsAlgNode.h\"\n#import \"AIAlgNodeBase.h\"\n#import \"AIFrontOrderNode.h\"\n#import \"AIFoNodeBase.h\"\n#import \"AINetAbsFoNode.h\"\n#import \"AICMVNode.h\"\n#import \"AIAbsCMVNode.h\"\n//\u5176\u5b83: \u7c7b\u6bd4\u5668,\u8bc4\u4ef7\u5668,\u89e6\u53d1\u5668,\u9632\u91cd\u5668,\u8f93\u5165,\u8f93\u51fa\n#import \"AIAnalyst.h\"\n#import \"AIAnalogy.h\"\n#import \"AITime.h\"\n#import \"OutputModel.h\"\n#import \"Output.h\"\n#import \"AINoRepeatRun.h\"\n#import \"AIRank.h\"\n#import \"AIFilter.h\"\n//2021\u65b0TC\u67b6\u6784\n#import \"TCInput.h\"\n#import \"TCRegroup.h\"\n#import \"TCRecognition.h\"\n#import \"TCLearning.h\"\n#import \"TCFeedback.h\"\n#import \"TCForecast.h\""
        },
        {
            "comment": "This code defines several macro constants related to different node types and their root directories in a mobile app. These macros are used for organizing and accessing data associated with various components of the application.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIHeader.h\":97-131",
            "content": "#import \"TCRethink.h\"\n#import \"TCDemand.h\"\n#import \"TCScore.h\"\n#import \"TCPlan.h\"\n#import \"TCScene.h\"\n#import \"TCCanset.h\"\n#import \"TCSolution.h\"\n#import \"TCRefrection.h\"\n#import \"TCEffect.h\"\n#import \"TCTransfer.h\"\n#import \"TCRealact.h\"\n#import \"TCAction.h\"\n#import \"TCActYes.h\"\n#import \"TCOut.h\"\n//MARK:===============================================================\n//MARK:                         < \u5185\u6838\u5b8f >\n//MARK:===============================================================\n/**\n *  MARK:--------------------PathNameKey (kPH)--------------------\n */\n#define kCachePath [NSSearchPathForDirectoriesInDomains(NSCachesDirectory, NSUserDomainMask, YES) objectAtIndex:0]\n//algNode\n#define kPN_ALG_NODE           @\"PN_ALG_NODE\"          //Alg\u8282\u70b9\u6839\u76ee\u5f55;(\u767d\u8d28)\n#define kPN_ALG_ABS_NODE       @\"PN_ALG_ABS_NODE\"      //AbsAlg\u8282\u70b9\u6839\u76ee\u5f55;(\u767d\u8d28)\n//foNode\n#define kPN_FRONT_ORDER_NODE   @\"PN_FRONT_ORDER_NODE\"  //frontOrder\u8282\u70b9\u6839\u76ee\u5f55;(\u767d\u8d28)\n#define kPN_FO_ABS_NODE        @\"PN_FO_ABS_NODE\"       //\u795e\u7ecf\u7f51\u7edc\u6839\u76ee\u5f55;(\u767d\u8d28)\n//cmv\n#define kPN_CMV_NODE           @\"PN_CMV_NODE\"          //cmv\u8282\u70b9\u6839\u76ee\u5f55;(\u767d\u8d28)"
        },
        {
            "comment": "This code defines various constants for different parts of a neural network, including nodes, directions, references, indices, values, and file names. These constants help organize the data structure of the neural network by providing clear labels for each component.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIHeader.h\":132-153",
            "content": "#define kPN_ABS_CMV_NODE       @\"PN_ABS_CMV_NODE\"      //cmv\u62bd\u8c61\u8282\u70b9\u6839\u76ee\u5f55;(\u767d\u8d28)\n#define kPN_DIRECTION(mvDir)   STRFORMAT(@\"PN_DIRECTION_%ld\",mvDir)//mv\u987a\u9006\u65b9\u5411\u5f15\u7528\u5e8f\u5217(\u4ee5Path\u4e3a\u5404mv\u7684\u5206\u533a,cmvNode\u548cabsCMVNode\u90fd\u6307\u5411\u6b64direction)\n//reference\n#define kPN_REFERENCE          @\"PN_REFERENCE\"         //\u795e\u7ecf\u7f51\u7edc\"\u5f15\u7528\u5e8f\u5217\"\u6839\u76ee\u5f55;(\u6d77\u9a6c\u4f53)\n#define kPN_CEREBEL_CANOUT     @\"PN_CEREBEL_CANOUT\"    //\u5c0f\u8111\u53ef\u8f93\u51fa\u6807\u8bc6\u5e8f\u5217\n#define kPN_INDEX              @\"PN_INDEX\"             //\u7d22\u5f15\u5e8f\u5217\n#define kPN_DATA               @\"PN_DATA\"              //\u5fae\u4fe1\u606f\u503c\u5b57\u5178\n#define kPN_VALUE              @\"PN_VALUE\"             //\u5fae\u4fe1\u606f\u5355\u6761\u503c\n/**\n *  MARK:--------------------FileNameKey (kFN)--------------------\n *  @version\n *      2022.10.09: \u5e9f\u5f03isMem\u5185\u5b58\u5355\u72ec\u5b58\u7684key (\u53c2\u800327124-todo3);\n */\n#define kFNNode @\"node\"               //\u8282\u70b9\n//#define kFNValue @\"value\"             //\u5fae\u4fe1\u606f\n#define kFNRefPorts @\"refPorts\"       //\u5fae\u4fe1\u606f\u7684reference\u5e8f\u5217\u6587\u4ef6\u540d;\n#define kFNIndex(isOut) STRFORMAT(@\"index_%d\",isOut) //in\u5fae\u4fe1\u606f\u7d22\u5f15(\u6570\u7ec4) / out\u5c0f\u8111\u5fae\u4fe1\u606f(\u6570\u7ec4)\n#define kFNData(isOut) STRFORMAT(@\"data_%d\",isOut) //in\u5fae\u4fe1\u606f\u503c / out\u5c0f\u8111\u5fae\u4fe1\u606f\u503c (dic)\n#define kFNDirectionIndex(mvDirection) STRFORMAT(@\"directionIndex_%ld\",mvDirection) //mv\u7684\u987a\u9006\u65b9\u5411\u7d22\u5f15\u5e8f\u5217\u5730\u5740"
        },
        {
            "comment": "This code defines several constants, including string literals for file references and folders, as well as functions to check strings. The code also includes functions to format strings and convert a string into an array based on a separator.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIHeader.h\":155-171",
            "content": "#define kFNReference_ByPointer @\"reference_ByPointer\" //\u5fae\u4fe1\u606f\u5f15\u7528(pointer\u5e8f)\n#define kFNReference_ByPort @\"reference_ByPort\"       //\u5fae\u4fe1\u606f\u5f15\u7528(port\u5e8f)\n#define kFNDefault @\" \"                               //\u9ed8\u8ba4\u6587\u4ef6\u540d; (\u4f8b\u5982:\u5c0f\u8111canout\u5e8f\u5217)\n//\u6240\u6709\u6587\u4ef6\u5939\u6570\u7ec4\n#define kFN_ALL @[/*mvNode*/kPN_CMV_NODE,kPN_ABS_CMV_NODE,/*mv\u7d22\u5f15*/kPN_DIRECTION(MVDirection_None),kPN_DIRECTION(MVDirection_Negative),kPN_DIRECTION(MVDirection_Positive),/*foNode*/kPN_FRONT_ORDER_NODE,kPN_FO_ABS_NODE,/*algNode*/kPN_ALG_NODE,kPN_ALG_ABS_NODE,/*\u5c0f\u8111*/kPN_CEREBEL_CANOUT,/*\u7a00\u758f\u7801\u7d22\u5f15*/kPN_INDEX,kPN_DATA,kPN_VALUE]\n/**\n *  MARK:--------------------\u6570\u636e\u68c0\u67e5--------------------\n */\n//String\n#define STRISOK(s) [SMGUtils strIsOk:s]                                 //\u662f\u5426\u7a7a\u5b57\u7b26\u4e32\n#define STRTOOK(s) [SMGUtils strToOk:s]                                 //string\u5f3a\u68c0\u67e5\n#define STRFORMAT(s, ...) [NSString stringWithFormat:s, ##__VA_ARGS__]  //String.format\n#define SUBSTR2INDEX(s,index) [SMGUtils subStr:s toIndex:index]         //subStr_toIndex\n#define STRTOARR(str, sep) [SMGUtils strToArr:str sep:sep]              //str\u5206\u9694\u6210arr"
        },
        {
            "comment": "The code defines several macros for common operations on arrays, NSNumbers, and dictionaries. These macros are defined in the SMGUtils class. The array-related macros include checking if an array is empty or not, extracting elements from the array by index or in reverse order, removing elements at a specific index, and substring extraction. The number-related macros check if an NSNumber is valid and allow for default value handling. The dictionary-related macro checks if a dictionary is empty and performs a strong check on it.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIHeader.h\":172-190",
            "content": "#define CLEANSTR(s) [SMGUtils cleanStr:s]\n//Array\n#define ARRISOK(a) [SMGUtils arrIsOk:a]                                 //\u662f\u5426\u7a7a\u6570\u7ec4\n#define ARRTOOK(a) [SMGUtils arrToOk:a]                                 //\u6570\u7ec4\u5f3a\u68c0\u67e5\n#define ARR_INDEX(a,i) [SMGUtils arrIndex:a index:i]                    //\u6570\u7ec4\u53d6\u5b50\u9632\u95ea\n#define ARR_INDEX_REVERSE(a,i) [SMGUtils arrTransIndex:a index:i]       //\u6570\u7ec4\u53cd\u5e8f\u53d6\u5b50\u9632\u95ea\n#define ARR_INDEXISOK(a,i) [SMGUtils arrIndexIsOk:a index:i]            //\u6570\u7ec4\u53ef\u79fb\u9664i\n#define ARR_SUB(a,s,l) [SMGUtils arrSub:a start:s length:l]             //\u6570\u7ec4\u622a\u53d6 (arr start length)\n#define ARRTOSTR(arr,mPre,mSep) [SMGUtils arrToStr:arr prefix:mPre sep:mSep]         //\u6570\u7ec4\u63a5\u6210\u5b57\u7b26\u4e32\n//NSNumber\n#define NUMISOK(n) [SMGUtils numIsOk:n]                                 //\u662f\u5426\u6709\u6548NSNumber\n#define NUMTOOK(n) [SMGUtils numToOk:n]                                 //number\u5f3a\u68c0\u67e5\n#define NUMTOOK_DV(n,dv) [SMGUtils numToOk:n defaultValue:dv]\n//Dic\n#define DICISOK(d) [SMGUtils dicIsOk:d]                                 //\u662f\u5426\u7a7a\u5b57\u5178\n#define DICTOOK(d) [SMGUtils dicToOk:d]                                 //dictionary\u5f3a\u68c0\u67e5"
        },
        {
            "comment": "This code defines various macros for pointer and object checks, NSData manipulation, and converting pointers to strings. The macros can be used for strong checking, verifying if a pointer represents a specific concept or data type, and converting objects to and from NSData. The code also includes functions for converting arrays of pointers into separate strings with different separators.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIHeader.h\":192-212",
            "content": "//AIPointer\n#define POINTERISOK(p) [SMGUtils pointerIsOk:p]                         //\u6307\u9488\u5f3a\u68c0\u67e5\n#define PitIsValue(p) [NVHeUtil isValue:p]                              //\u662f\u5426\u7a00\u758f\u7801\n#define PitIsAlg(p) [NVHeUtil isAlg:p]                                  //\u662f\u5426\u6982\u5ff5\n#define PitIsFo(p) [NVHeUtil isFo:p]                                    //\u662f\u5426\u65f6\u5e8f\n#define PitIsMv(p) [NVHeUtil isMv:p]                                    //\u662f\u5426\u4ef7\u503c\n#define PitIsAbs(p) [NVHeUtil isAbs:p]                                  //\u662f\u5426\u62bd\u8c61\u8282\u70b9\n//ISOK\n#define ISOK(o, c) [SMGUtils isOk:o class:c]                            //obj\u5f3a\u68c0\u67e5 (object class)\n//NSData\n#define OBJ2DATA(obj) [NSKeyedArchiver archivedDataWithRootObject:obj]\n#define DATA2OBJ(data) [NSKeyedUnarchiver unarchiveObjectWithData:data]\n#define DATAS2OBJS(datas) [SMGUtils datas2Objs:datas]\n#define CopyByCoding(obj) DATA2OBJ(OBJ2DATA(obj))\n//\u6307\u9488\u8f6c\u5b57\u7b26\u4e32\n#define Pit2FStr(p) [NVHeUtil getLightStr:p simple:false header:true]\n#define Pits2FStr(ps) [NVHeUtil getLightStr4Ps:ps simple:false header:true sep:@\",\"]\n#define Pits2FStr_MultiLine(ps) [NVHeUtil getLightStr4Ps:ps simple:false header:true sep:@\"\\n\"]"
        },
        {
            "comment": "These macros define various functions to convert different types of data into strings, convert port and node pointers, and convert type descriptions. The code appears to be part of a larger utility library for converting between different data representations in an application.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIHeader.h\":214-236",
            "content": "#define Pit2SStr(p) [NVHeUtil getLightStr:p]\n#define Pits2SStr(ps) [NVHeUtil getLightStr4Ps:ps]\n//\u8282\u70b9\u8f6c\u5b57\u7b26\u4e32\n#define Alg2FStr(a) [NVHeUtil getLightStr:a.pointer simple:false header:true]\n#define Fo2FStr(f) [NVHeUtil getLightStr:f.pointer simple:false header:true]\n#define Mv2FStr(m) [NVHeUtil getLightStr:m.pointer simple:false header:true]\n#define AlgP2FStr(a_p) [NVHeUtil getLightStr:a_p simple:false header:true]\n#define FoP2FStr(f_p) [NVHeUtil getLightStr:f_p simple:false header:true]\n#define Mvp2Str(m_p) [NVHeUtil getLightStr:m_p simple:false header:true]\n//\u7a00\u758f\u7801\u503c\u8f6c\u5b57\u7b26\u4e32\n#define Data2FStr(data,at,ds) [NVHeUtil getLightStr_Value:data algsType:at dataSource:ds]\n//xxx\u8f6c\u6307\u9488\n#define Ports2Pits(ports) [SMGUtils convertPointersFromPorts:ports]\n#define Nodes2Pits(nodes) [SMGUtils convertPointersFromNodes:nodes]\n#define TOModels2Pits(toModels) [TOUtils convertPointersFromTOModels:toModels]\n//Type\u8f6c\u5b57\u7b26\u4e32\n#define ATType2Str(type) [NSLog_Extension convertATType2Desc:type]\n#define TOStatus2Str(status) [NSLog_Extension convertTOStatus2Desc:status]"
        },
        {
            "comment": "This code contains various macro definitions for converting different types of data into string format using NSLog_Extension and AIUtils functions. It also includes macros for converting MVP, scene type, TOModelVision, and RTQueueModel data. These macros provide convenient ways to convert and use different types of data in the codebase.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIHeader.h\":237-262",
            "content": "#define TIStatus2Str(status) [NSLog_Extension convertTIStatus2Desc:status]\n#define EffectStatus2Str(status) [NSLog_Extension convertEffectStatus2Desc:status]\n#define Class2Str(c) [NSLog_Extension convertClass2Desc:c]\n#define ClassName2Str(c) [NSLog_Extension convertClassName2Desc:c]\n#define Mvp2DeltaStr(mv_p) [NSLog_Extension convertMvp2DeltaDesc:mv_p]\n#define SceneType2Str(type) [NSLog_Extension convertSceneType2Desc:type simple:true]\n//Double\u8f6cStr\n#define Double2Str_NDZ(value) [NSString double2Str_NoDotZero:value]\n//\u601d\u7ef4\u63a7\u5236\u5668\u76f8\u5173\u8f6c\u6362\n#define Mvp2Delta(mv_p) [AINetUtils getDeltaFromMv:mv_p]\n#define Mvp2Score(mv_p,ratio) [AIScore score4MV:mv_p ratio:ratio]\n//\u77ed\u65f6\u8bb0\u5fc6\u8f6c\u5b57\u7b26\u4e32\n#define TOModel2Root2Str(sub) [TOModelVision cur2Root:sub]\n#define TOModel2Sub2Str(cur) [TOModelVision cur2Sub:cur]\n#define TOModel2Key(model) [TOUtils toModel2Key:model]\n//\u5f3a\u8bad\u5de5\u5177\n#define Queue(name) [RTQueueModel newWithName:name arg0:nil]\n#define Queue0(name,a0) [RTQueueModel newWithName:name arg0:a0]\n/**\n *  MARK:--------------------\u5feb\u6377\u5efa\u5bf9\u8c61--------------------"
        },
        {
            "comment": "This code defines several macros for accessing and defining different objects, keys, and identifiers used in the AIFoundation library. It also includes constants for various output types, such as text and emotional states like anxious or satisfied.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIHeader.h\":263-303",
            "content": " */\n//NSArray\n//#define SMGArrayMake(arg) \\\n//NSMutableArray *array = [NSMutableArray arrayWithObject:arg];\\\n//va_list args;\\\n//va_start(args, arg);\\\n//id next = nil;\\\n//while ((next = va_arg(args,id))) {\\\n//[array addObject:next];\\\n//}\\\n//va_end(args);\\\n/**\n *  MARK:--------------------\u5feb\u6377\u8bbf\u95ee\u5bf9\u8c61--------------------\n */\n//2017.11.13\u540e\u542f\u7528N8\u89c4\u5219DOP\u67b6\u6784;\n#define theNet [AINet sharedInstance]\n#define theTC [AIThinkingControl shareInstance]\n/**\n *  MARK:--------------------OutputObserverKey--------------------\n */\n//OutputObserverKey\n#define kOutputObserver   @\"kOutputObserver\"\n//OutputObjectKey (2021.02.05: \u6539\u4e3a\u76f4\u63a5\u7528OutputModel\u505aobj);\n//#define kOOIdentify @\"identify\" //\u8f93\u51fa\u884c\u4e3a\u6807\u8bc6\n//#define kOOParam @\"param\"       //\u8f93\u51fa\u884c\u4e3a\u53c2\u6570\u503c\n//#define kOOType @\"type\"         //\u5e7f\u64ad\u7c7b\u578b\n//#define kOOUseTime @\"useTime\"   //\u53cd\u9988\u9700\u7528\u65f6\n//Identify\u6807\u8bc6 (\u5185\u6838\u65b9)\n#define TEXT_RDS @\"TEXT_RDS\" //\u5b57\u7b26\u8f93\u51fa\u53cd\u5c04\u6807\u8bc6\n#define ANXIOUS_RDS @\"ANXIOUS_RDS\" //\u7126\u6025\u60c5\u7eea\u8f93\u51fa\u6807\u8bc6\n#define SATISFY_RDS @\"SATISFY_RDS\" //\u6ee1\u610f\u60c5\u7eea\u8f93\u51fa\u6807\u8bc6\n/**\n *  MARK:--------------------AlgsType & DataSource--------------------\n */\n#define DefaultAlgsType @\" \"    //\u9ed8\u8ba4AlgsType"
        },
        {
            "comment": "This code defines constants for logging and data source. It includes macros for various log levels with customizable titles, allowing developers to easily add logging statements throughout their codebase.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIHeader.h\":304-324",
            "content": "#define DefaultDataSource @\" \"  //\u9ed8\u8ba4DataSource\n#define AlgNodeAlgsType(pId) STRFORMAT(@\"%ld\",(long)pId)   //\u6982\u5ff5\u8282\u70b9AlgsType\n/**\n *  MARK:--------------------LOG--------------------\n */\n//\u65e5\u5fd7\u9ed8\u8ba4header\u6a21\u5f0f (\u5f53\u524d\u4e3a\u9996\u884c\u663e\u793a)\n#define DefaultHeaderMode 2\n//\u5f53\u524d\u7c7b\u540d\n#define FILENAME [[NSString stringWithUTF8String:__FILE__] lastPathComponent]\n//errorLog\n#define ELog(fmt, ...) NSLog((@\"<\u9519\u8bef> \" fmt), ##__VA_ARGS__);\n//warnLog\n#define WLog(fmt, ...) NSLog((@\"<\u8b66\u544a> \" fmt), ##__VA_ARGS__);\n//demoLog (Demo\u4ea4\u4e92\u4fe1\u606f)\n#define DemoLog(fmt, ...) NSLog((@\"\\n******************************* \" fmt @\" *******************************\"), ##__VA_ARGS__);\n//titleLog (\u63a7\u5236\u53f0\u65e5\u5fd7\u7ec4\u5757title) (\u5176\u5b9eS\u4e3a\u7b80\u5316\u7248,F\u4e3a\u5168\u7248,I\u4e3a\u8f93\u5165\u671f,O\u4e3a\u8f93\u51fa\u671f);\n#define ISTitleLog(title) IFTitleLog(title,@\"\")\n#define IFTitleLog(title,fmt, ...) [SMGUtils inTitle:title log:[NSString stringWithFormat:fmt, ##__VA_ARGS__] fileName:FILENAME]\n#define OSTitleLog(title) OFTitleLog(title,@\"\")\n#define OFTitleLog(title,fmt, ...) [SMGUtils outTitle:title log:[NSString stringWithFormat:fmt, ##__VA_ARGS__] fileName:FILENAME]"
        },
        {
            "comment": "This code defines macros for groupLog and NSLog with customizable titles, formats, and optionally a custom file name. It uses the SMGUtils class to check and print logs based on a \"noNSLog\" switch and provides default header formatting.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIHeader.h\":325-333",
            "content": "//groupLog (\u6bcf\u8f6e\u5faa\u73af\u4e4b\u59cb\u53ef\u7528)\n#define ISGroupLog(title) IFGroupLog(title,@\"\")\n#define IFGroupLog(title,fmt, ...) NSLog((@\"\\n\\n#########################################################################################################\\n                                                <\" title @\"> \\n#########################################################################################################\"fmt), ##__VA_ARGS__);\n//\u7cfb\u7edflog (\u683c\u5f0f\u5316)\n//20220515: \u5c06NSLog\u62c6\u5206\u6210NSLog+PrintLog (\u4e3a\u4e86\u589e\u52a0noNSLog\u5f00\u5173\u529f\u80fd);\n//#define NSLog(FORMAT, ...) fprintf(stderr,\"%s\",[[SMGUtils nsLogFormat:FILENAME line:__LINE__ protoLog:[NSString stringWithFormat:FORMAT, ##__VA_ARGS__] headerMode:DefaultHeaderMode] UTF8String]);\n#define NSLog(FORMAT, ...) [SMGUtils checkPrintNSLog:FILENAME line:__LINE__ protoLog:[NSString stringWithFormat:FORMAT, ##__VA_ARGS__] headerMode:DefaultHeaderMode]\n#define NSLog_CustomFileName(customFileName,FORMAT, ...) [SMGUtils checkPrintNSLog:customFileName line:__LINE__ protoLog:[NSString stringWithFormat:FORMAT, ##__VA_ARGS__] headerMode:DefaultHeaderMode]"
        },
        {
            "comment": "This code defines several macro functions for logging, allowing the user to choose different modes and levels of logging. The macros include PrintLog for standard error output, NSLog_Mode for customized header mode, HeLog for persistent log storage, TipLog for UI pop-up logs, and AllLog for system, persistent, and UI pop-up logs. The code also includes several flags to control which modules are logged based on test mode, cortex algorithms, TC input, concept recognition, fuzzy matching, time series recognition, and inner analogy.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIHeader.h\":334-363",
            "content": "#define PrintLog(log) fprintf(stderr,\"%s\",[log UTF8String]);\n//nsLog (\u81ea\u5b9a\u4e49header\u6a21\u5f0f)\n#define NSLog_Mode(mode,FORMAT, ...) fprintf(stderr,\"%s\",[[SMGUtils nsLogFormat:FILENAME line:__LINE__ protoLog:[NSString stringWithFormat:FORMAT, ##__VA_ARGS__] headerMode:mode] UTF8String]);\n//heLog (\u6301\u4e45\u5316\u65e5\u5fd7)\n#define HeLog(fmt, ...) [theApp.heLogView addLog:[NSString stringWithFormat:fmt, ##__VA_ARGS__]]\n//tipLog (UI\u5f39\u51fa\u65e5\u5fd7)\n#define TipLog(fmt, ...) [theApp setTipLog:[NSString stringWithFormat:fmt, ##__VA_ARGS__]]\n//allLog (\u7cfb\u7edf + \u6301\u4e45\u5316 + UI\u5f39\u51fa)\n#define AllLog(fmt, ...) [SMGUtils allLog:[NSString stringWithFormat:fmt, ##__VA_ARGS__]]\n/**\n *  MARK:--------------------LOG\u5f00\u5173--------------------\n */\n#define Log4DemoWood false\n//\u6d4b\u8bd5\u6a21\u5f0f (\u529f\u80fd\u8bf4\u660e: \u628aall\u5173\u6389,\u7136\u540e\u4ec5\u4f1a\u6253\u5370just\u4e2d\u6a21\u5757\u7684\u65e5\u5fd7; \u4f7f\u7528\u8bf4\u660e: \u7528\u4e8e\u6d4b\u8bd5\u67d0\u4e9b\u6a21\u5757\u65f6\u4f7f\u7528);\n#define LogJustPrintTCs @[@\"TCSolution\"]\n#define LogPrintAllTCs true\n//\u76ae\u5c42\n#define Log4CortexAlgs false\n//\u8f93\u5165\u601d\u7ef4\n#define Log4TCInput false\n//\u8bc6\u522b\u6982\u5ff5\n#define Log4MAlg true\n//\u6a21\u7cca\u5339\u914d\n#define Log4FuzzyAlg false\n//\u8bc6\u522b\u65f6\u5e8f\n#define Log4MFo false\n//\u5185\u7c7b\u6bd4\n#define Log4InAna false\n#define Log4InAnaGL(type) ((type == ATGreater || type == ATLess) && false)"
        },
        {
            "comment": "This code defines various logging conditions and settings for different modules within the AIHeader.h file. It enables or disables specific functionalities based on the specified log conditions. The code includes separate sections for analytics, input, output, decision-making, scoring, and system modules.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIHeader.h\":364-408",
            "content": "#define Log4InAnaHN(type) ((type == ATHav || type == ATNone) && false)\n//\u5916\u7c7b\u6bd4\n#define Log4OutAna false\n#define Log4OutCansetAna true\n//\u65b9\u5411\u7d22\u5f15\n#define Log4DirecRef true\n//\u5916\u8f93\u5165\u63a8\u8fdb\u4e2d\u5faa\u73af\n#define Log4OPushM true\n#define Log4TIROPushM false\n//\u5f53\u524d\u53ef\u51b3\u7b56\u4efb\u52a1:CanDecisionDemand;\n#define Log4CanDecisionDemand false\n//In\u53cd\u7701\n#define Log4InRethink true\n#define Log4OutRethink true\n#define Log4Rethink true\n//\u89e3\u51b3\u65b9\u6848\u6761\u4ef6\u6ee1\u8db3\n#define Log4SceneIsOk false\n//S\u8fc7\u6ee4\u5668\n#define Log4SolutionFilter false\n//Score\n#define Log4Score false\n#define Log4Solution true\n#define Log4Solution_Slow true\n#define Log4Solution_Fast true\n//TCCanset\u65e5\u5fd7\u5f00\u5173\n#define Log4TCCanset false\n#define Log4GetCansetResult4R false\n#define Log4GetCansetResult4H true\n//AIRank\u65e5\u5fd7\u5f00\u5173\n#define Log4AIRank true\n#define Log4AIRankDebugMode false //Rank\u5728BUG\u8c03\u8bd5\u6a21\u5f0f\u65f6\u7684\u65e5\u5fd7\n//MARK:===============================================================\n//MARK:                     < \u7cfb\u7edf\u6a21\u5757\u5f00\u5173 >\n//MARK:===============================================================\n//R\u51b3\u7b56\u6a21\u5f0f\n#define Switch4RS true\n//P\u51b3\u7b56\u6a21\u5f0f\n#define Switch4PS false\n//P\u4efb\u52a1\u5f00\u5173 (20230301\u65e9\u6ca1\u7528P\u4efb\u52a1\u4e86,\u5173\u6389)"
        },
        {
            "comment": "This code defines a series of switches that control various features and functionalities in the AI system. Each switch is associated with a specific feature or functionality and can be toggled on or off as needed, allowing for customization and debugging during development.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIHeader.h\":409-427",
            "content": "#define Switch4PDemand false\n//\u5feb\u601d\u8003\u5f00\u5173\n#define Switch4FastSolution false\n//\u884c\u4e3a\u518d\u8f93\u5165\u5f00\u5173 (\u53c2\u800328133-1 & 28137-\u4fee\u590d)\n#define Switch4IsOutReIn false\n//\u8bc6\u522b\u6392\u540d\u5668\u5f00\u5173 (\u53c2\u800328152-\u65b9\u68485)\n#define Switch4RecognitionRank false\n//matchRFos\u8bc6\u522b\u5f00\u5173 (\u53c2\u800328185-todo1)\n#define Switch4RecognitionMatchRFos false\n//AITest\u5f00\u5173\n#define Switch4AITest false\n//Canset\u8bc6\u522b\u5f00\u5173\n//#define Switch4RecognitionCansetFo false\n//Canset\u7c7b\u6bd4\u5f00\u5173\n#define Switch4AnalogyCansetFo true\n//\u60f0\u6027\u671f\u5f00\u5173 (\u53c2\u800329073-\u65b9\u6848)\n#define Switch4DuoXinQi false\n//\u53cd\u9988\u53cd\u601d\u8bc6\u522b\u5f00\u5173,\u53ea\u8981\u628a\u5b83\u7684\u91cd\u7ec4\u5173\u4e86,\u540e\u9762\u7684\u8bc6\u522b\u4e5f\u5c31\u5173\u4e86 (\u53c2\u800330054)\n#define Switch4FeedbackRegroup false"
        }
    ]
}