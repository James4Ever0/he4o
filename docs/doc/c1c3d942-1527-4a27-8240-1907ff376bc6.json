{
    "summary": "This code improves AI thinking control in SMG_NothingIsAll, handling updates and triggers. It prepares data, identifies concepts, filters feedback, and passes to TOR module. The code manages pInput, including continuous processing with protoFo4PInput, recognition, learning, decision-making, and introspection triggers for matchPFos & matchRFos.",
    "details": [
        {
            "comment": "This code is for the TCInput class in the SMG_NothingIsAll project. It handles input when mv information is not available, with various TODOs and version updates. The changes made include fixing bugs related to concept node deduplication, updating protoFo and matchAFo construction to exclude memory, preserving mModel earlier, and supporting biological clock triggers (incomplete).",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCInput/TCInput.m\":0-27",
            "content": "//\n//  TCInput.m\n//  SMG_NothingIsAll\n//\n//  Created by jia on 2021/11/28.\n//  Copyright \u00a9 2021\u5e74 XiaoGang. All rights reserved.\n//\n#import \"TCInput.h\"\n@implementation TCInput\n/**\n *  MARK:--------------------\u8f93\u5165\u975emv\u4fe1\u606f\u65f6--------------------\n *  @todo\n *      1. \u8fdc\u53e4TODO: \u770b\u5230\u897f\u74dc\u4f1a\u5f00\u5fc3 : \u5bf9\u81ea\u8eab\u72b6\u6001\u7684\u5224\u65ad, (\u6bd4\u5982,\u770b\u5230\u897f\u74dc,\u60f3\u5403,\u90a3\u4e48\u5f53\u524d\u72b6\u6001\u662f\u5426\u997f)\n *          > \u5df2\u89e3\u51b3,\u5e9f\u5f03\u4e86useNode,\u5e76\u7531mModel\u66ff\u4ee3,\u4e14\u4f1a\u4ea4\u7531demandManager\u505a\u6b64\u5904\u7406;\n *      2. TODOWAIT: TIR_Alg\u8bc6\u522b\u540e,\u8981\u8fdb\u884c\u7c7b\u6bd4,\u5e76\u6784\u5efa\u7f51\u7edc\u5173\u8054; (\u53c2\u8003n16p7)\n *      3. \u70b9\u51fb\u9965\u997f,\u518d\u70b9\u51fb\u4e71\u6295,\u6b64\u5904\u8fd4\u56de\u4e86matchFo:nil matchValue:0;\n *          > \u5df2\u89e3\u51b3,\u56e0\u4e3afromMemShort\u662f4\u5c42alg,\u800cfromRethink\u662f\u4e24\u5c42;\n *  @version\n *      20200416 - \u4fee\u590d\u65f6\u5e8f\u8bc6\u522b\u7684bug: \u56e0\u6982\u5ff5\u8282\u70b9\u53bb\u91cd\u4e0d\u591f,\u5bfc\u81f4\u5373\u4f7f\u6982\u5ff5\u5185\u5bb9\u4e00\u81f4,\u5728\u65f6\u5e8f\u8bc6\u522b\u65f6,\u4e5f\u4f1a\u65e0\u6cd5\u5339\u914d (\u53c2\u8003n19p5-A\u7ec4BUG4);\n *      20200731 - \u5c06protoFo\u548cmatchAFo\u7684\u6784\u5efa\u6539\u4e3aisMem=false (\u56e0\u4e3a\u6784\u5efa\u5230\u5185\u5b58\u7684\u8bdd,\u5728\u5185\u7c7b\u6bd4\u6784\u5efa\u65f6\u5e8f\u5177\u8c61\u6307\u5411\u4e3a\u7a7a,\u53c2\u800320151-BUG);\n *      20200817 - \u8d4b\u503cprotoAlg\u548cmatchAlg\u5373\u662f\u5b58\u77ac\u65f6\u8bb0\u5fc6,\u56e0\u4e3a\u77ac\u65f6\u4e0e\u77ed\u65f6\u6574\u5408\u4e86;\n *      20201019 - \u5c06mModel\u66f4\u63d0\u524d\u4fdd\u7559\u81f3mModelManager\u4e2d;\n *      20201112 - TIR_Fo\u652f\u6301\u4e0d\u5e94\u5176except_ps,\u5c06protoF\u548cmatchAF\u90fd\u8bbe\u4e3a\u4e0d\u5e94\u671f,\u907f\u514dAF\u8bc6\u522bP\u56de\u6765 (\u53c2\u800321144);\n *      20201113 - \u6784\u5efamatchAFo\u65f6,MatchA\u4e3a\u7a7a\u65f6,\u517c\u5bb9\u53d6part\u9996\u6761,\u5426\u5219\u4f1a\u5bfc\u81f4\u65f6\u5e8f\u8bc6\u522b\u5931\u8d25 (\u53c2\u800321144);\n *      20210118 - \u652f\u6301\u751f\u7269\u949f\u89e6\u53d1\u5668 (\u672a\u5b8c\u6210) (\u53c2\u800322052-1);"
        },
        {
            "comment": "This code performs input processing for AI thinking control. It prepares data, identifies concepts using TIR algorithms, adds the model to memory, and filters concept feedback before passing it to the TOR module.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCInput/TCInput.m\":28-53",
            "content": " *      20210119 - \u652f\u6301TIR_OPushM (\u53c2\u800322052-2);\n *      20211016 - \u5c06\u9884\u6d4b\u8c03\u6574\u5230R\u51b3\u7b56\u4e4b\u540e,\u56e0\u4e3aR\u51b3\u7b56\u603b\u4f1a\u5361\u4f4f,\u800c\u9884\u6d4b\u4e2d\u5c06\u6765\u7684UI\u53d8\u5316\u8fdf\u8fdf\u4e0d\u6765 (\u53c2\u800324058-\u65b9\u68481);\n *      20211017 - \u5728\u6267\u884c\u51b3\u7b56\u524d,\u5148\u5230OPushM\u5c06TIModel.status\u66f4\u65b0\u4e86,\u56e0\u4e3a\u6709\u4e9bIRT\u89e6\u53d1\u5668\u5df2\u7ecf\u5931\u6548\u4e86 (\u53c2\u800324061);\n *      20230301 - \u8f93\u51fa\u884c\u4e3a\u4e0d\u5fc5\u518d\u89e6\u53d1`\u65f6\u5e8f\u8bc6\u522b&\u5b66\u4e60&\u4efb\u52a1&\u53cd\u7701` (\u53c2\u800328137-\u4fee\u590d);\n *      20230531 - r\u65f6\u5e8f\u8bc6\u522b\u7ed3\u675f\u540e,\u8c03\u7528\u8bc6\u522b\u4e8c\u6b21\u8fc7\u6ee4\u5668 (\u53c2\u800329107-todo3);\n *      20231107 - \u5c06feedbackTIR\u8c03\u6574\u5230feedbackTOR\u4e4b\u524d (\u53c2\u800330154-todo4.2);\n */\n+(void) rInput:(AIAlgNodeBase*)algNode except_ps:(NSArray*)except_ps{\n    ISGroupLog(@\"input R\");\n    [theTC updateLoopId];\n    [theTC updateOperCount:kFILENAME];\n    Debug();\n    //1. \u6570\u636e\u51c6\u5907 (\u77ac\u65f6\u8bb0\u5fc6,\u7406\u6027\u5339\u914d\u51fa\u7684\u6a21\u578b);\n    __block AIShortMatchModel *mModel = [[AIShortMatchModel alloc] init];\n    mModel.protoAlg = algNode;\n    mModel.inputTime = [[NSDate date] timeIntervalSince1970];\n    //2. \u8bc6\u522b\u6982\u5ff5;\n    [TIUtils TIR_Alg:algNode.pointer except_ps:except_ps inModel:mModel];\n    //3. \u5c06mModel\u4fdd\u7559 (\u53ea\u6709\u5148\u4fdd\u7559\u540e,\u6784\u5efa\u65f6\u5e8f\u65f6,\u624d\u4f1a\u542b\u65b0\u5e27\u6982\u5ff5);\n    [theTC.inModelManager add:mModel];\n    DebugE();\n    //4. \u6982\u5ff5\u53cd\u9988 -> TIR\u53cd\u9988;\n    //todo: \u52a0\u4e86\u4e8c\u6b21\u8fc7\u6ee4\u540e,\u6b64\u5904\u8fc7\u6ee4\u540e,\u4ec5\u5269\u51e0\u6761\u4e86 (\u53ef\u80fd\u5bfc\u81f4tir\u592a\u96befeedback\u6210\u529f\u4e86) (\u5148\u4e0d\u6539,\u7b49\u6d4b\u5f97\u5177\u4f53\u6709\u5f71\u54cd\u7684bug\u65f6\u518d\u6539);"
        },
        {
            "comment": "This code snippet appears to handle various aspects of AI thinking control in the context of an input. It includes feedback, regrouping, recognition, learning, demand generation, forecasting, and decision-making for continuous processing. It also implements second-level filters and manages protoFos (prototypical fragments) for matching algorithms.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCInput/TCInput.m\":54-91",
            "content": "    [TCFeedback feedbackTIR:mModel];\n    //4. \u6982\u5ff5\u53cd\u9988 -> \u91cd\u7ec4 & \u53cd\u601d;\n    //todo: \u52a0\u4e86\u4e8c\u6b21\u8fc7\u6ee4\u540e,\u6b64\u5904\u8fc7\u6ee4\u524d,\u53ef\u80fd\u592a\u6742\u4e86,\u6bd5\u7adfpAlgs\u8fc7\u8fc7\u6ee4\u4e8650% (\u53ef\u80fd\u5bfc\u81f4tor\u624d\u5bb9\u6613feedback\u6210\u529f\u4e86) (\u5148\u4e0d\u6539,\u7b49\u6d4b\u5f97\u5177\u4f53\u6709\u5f71\u54cd\u7684bug\u65f6\u518d\u6539);\n    [TCFeedback feedbackTOR:mModel];\n    //5. \u8f6cregroup\u751f\u6210protoFo;\n    [TCRegroup rRegroup:mModel];\n    AIFoNodeBase *protoFo = ARRISOK(mModel.matchAlgs) ? mModel.protoFo : mModel.matchAFo;\n    //6. \u884c\u4e3a\u4e0d\u89e6\u53d1\u8bc6\u522b\u548c\u5b66\u4e60 (\u53c2\u800328137-\u4fee\u590d);\n    if (!algNode.pointer.isOut || Switch4IsOutReIn) {\n        //7. \u65f6\u5e8f\u8bc6\u522b\n        [TCRecognition rRecognition:mModel];\n        //8. \u8bc6\u522b\u4e8c\u6b21\u8fc7\u6ee4\u5668;\n        [AIFilter secondRecognitionFilter:mModel];\n        //8. \u5b66\u4e60;\n        [TCLearning rLearning:mModel protoFo:protoFo];\n    }\n    //10. \u884c\u4e3a\u4e0d\u6784\u5efa\u4efb\u52a1\u548c\u9884\u6d4b (\u53c2\u800328137-\u4fee\u590d);\n    if (!algNode.pointer.isOut || Switch4IsOutReIn) {\n        //11. \u4efb\u52a1;\n        [TCDemand rDemand:mModel protoFo:mModel.protoFo];\n        //12. \u4e3a\u65b0matchPFos & matchRFos\u6784\u5efa\u53cd\u7701\u89e6\u53d1\u5668;\n        [TCForecast forecast_Multi:mModel.matchPFos];\n        [TCForecast forecast_Multi:mModel.matchRFos];\n    }\n    //13. \u8f6c\u7ee7\u7eed\u51b3\u7b56;\n    [TCScore scoreFromIfTCNeed];\n}\n/**\n *  MARK:--------------------pInput--------------------"
        },
        {
            "comment": "This code is responsible for handling \"pInput\" input type in the AIThinkingControl component of a codebase. It prepares data by generating short-term models, identifies concepts using the model, converts to regroup and generates protoFo, adds the model to the instantaneous sequence list, and performs other tasks related to pInput handling.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCInput/TCInput.m\":92-120",
            "content": " *  @desc pInput\u65f6:\n *          1. \u751f\u6210\u7684protoFo\u6784\u5efa\u6307\u5411mv\u7684\u65f6\u5e8f,\u5e76\u7528\u4e8elearning\u5b66\u4e60;\n *          2. \u751f\u6210\u7684protoFo4PInput\u6784\u5efamv\u653e\u5230content\u672b\u5e27\u7684\u65f6\u5e8f,\u5e76\u7528\u4e8epInput\u65f6\u7684\u65f6\u5e8f\u8bc6\u522b (\u53c2\u800330094-todo3);\n *  @version\n *      2023.03.11: mv\u4e5f\u751f\u6210shortModel,\u5e76\u52a0\u5165\u77ac\u65f6\u5e8f\u5217 (\u53c2\u800328171-todo6);\n *      2023.03.11: \u634b\u4e00\u4e0bmv\u8f93\u5165\u4e0d\u9700\u8981\u6982\u5ff5\u8bc6\u522b\u548c\u65f6\u5e8f\u8bc6\u522b (\u53c2\u800328171-todo5);\n *      2023.08.08: pInput\u65f6\u652f\u6301\u65f6\u5e8f\u8bc6\u522b & \u6784\u5efa\u4efb\u52a1 & \u9884\u6d4b (\u53c2\u800330094-todo3 & todo5);\n */\n+(void) pInput:(AICMVNodeBase*)mv{\n    ISGroupLog(@\"input P\");\n    [theTC updateLoopId];\n    [theTC updateOperCount:kFILENAME];\n    Debug();\n    //1. \u6570\u636e\u51c6\u5907 (\u77ac\u65f6\u8bb0\u5fc6,\u7406\u6027\u5339\u914d\u51fa\u7684\u6a21\u578b);\n    __block AIShortMatchModel *shortModel = [[AIShortMatchModel alloc] init];\n    shortModel.protoAlg = mv;\n    shortModel.inputTime = [[NSDate date] timeIntervalSince1970];\n    DebugE();\n    //2. \u8bc6\u522b\u6982\u5ff5;\n    [TIUtils TIR_Alg:mv.pointer except_ps:nil inModel:shortModel];\n    //2. \u8f6cregroup\u751f\u6210protoFo;\n    [TCRegroup pRegroup:mv shortModel:shortModel];\n    //3. P\u4e0d\u9700\u8981\u6982\u5ff5\u8bc6\u522b,\u4f46\u53ef\u4ee5\u76f4\u63a5\u751f\u6210AIShortMatchModel,\u5e76\u6536\u96c6\u5230\u77ac\u65f6\u5e8f\u5217 => \u5c06mModel\u4fdd\u7559 (\u53ea\u6709\u5148\u4fdd\u7559\u540e,\u6784\u5efa\u65f6\u5e8f\u65f6,\u624d\u4f1a\u542b\u65b0\u5e27\u6982\u5ff5);\n    [theTC.inModelManager add:shortModel];\n    //4. protoFo4PInput\u662f\u4ee5mv\u4e3a\u7ed3\u5c3e\u6784\u5efa\u65f6\u5e8f,\u7136\u540e\u53c8\u60f3\u4ee5mv\u4e3a\u4e00\u5e27\u6765\u8bc6\u522b (\u53c2\u800330093-\u65b9\u68481-\u6539\u52a8\u70b9 & 30094-todo3);"
        },
        {
            "comment": "1. Create protoFo4PInput from net and inModelManager's shortCache.\n2. Submit recognition for TCRecognition.\n3. Trigger learning with shortModel.protoFo.\n4. Search cmvNode for tip feedback.\n5. If cmvNode is not valid, return.\n6. Provide tip and top feedback with cmvNode.\n7. Generate p-demand for TCDemand.\n8. Build introspection triggers for matchPFos & matchRFos.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCInput/TCInput.m\":121-154",
            "content": "    shortModel.protoFo4PInput = [theNet createConFo:[theTC.inModelManager shortCache:false]];\n    //5. P\u4e0d\u9700\u8981\u65f6\u5e8f\u8bc6\u522b,\u4f46\u53ef\u4ee5\u89e6\u53d1\u5b66\u4e60 => \u63d0\u4ea4\u5b66\u4e60\u8bc6\u522b;\n    [TCRecognition pRecognition:shortModel];\n    //6. \u5b66\u4e60\n    [TCLearning pLearning:shortModel.protoFo];\n    //7. \u53d6cmvNode: tip\u53cd\u9988: tip_OPushM & top_OPushM;\n    AICMVNode *cmvNode = [SMGUtils searchNode:shortModel.protoFo.cmvNode_p];\n    if (!ISOK(cmvNode, AICMVNode.class)) {\n        return;\n    }\n    [TCFeedback feedbackTIP:shortModel.protoFo cmvNode:cmvNode];\n    [TCFeedback feedbackTOP:cmvNode];\n    //8. \u4efb\u52a1=>\u751f\u6210p\u4efb\u52a1: \u884c\u4e3a\u4e0d\u6784\u5efa\u4efb\u52a1\u548c\u9884\u6d4b (\u53c2\u800328137-\u4fee\u590d);\n    [TCDemand rDemand:shortModel protoFo:shortModel.protoFo4PInput];\n    //9. \u4e3a\u65b0matchPFos & matchRFos\u6784\u5efa\u53cd\u7701\u89e6\u53d1\u5668;\n    [TCForecast forecast_Multi:shortModel.matchPFos];\n    [TCForecast forecast_Multi:shortModel.matchRFos];\n}\n+(void) hInput:(TOAlgModel*)algModel{\n    ISGroupLog(@\"input H\");\n    [theTC updateLoopId];\n    [theTC updateOperCount:kFILENAME];\n    Debug();\n    DebugE();\n    [TCDemand hDemand:algModel];\n}\n@end"
        }
    ]
}