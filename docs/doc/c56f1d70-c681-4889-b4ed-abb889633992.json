{
    "summary": "The code initializes a TOFoModel class, calculates scores, adds submodels, and updates dictionaries. It also creates a class method for retrieving scene content, includes NSCoding implementation, and encodes an object 'i' and boolean value 'refrectionNo' in aCoder.",
    "details": [
        {
            "comment": "This code defines the `TOFoModel` class, which is a model for managing sub-models and demands. It also initializes an instance of `TOFoModel` with given parameters and assigns default values to various properties. Additionally, it includes a comment about calculating a comprehensive score across different FOs.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/Out/Model/TOFoModel.m\":0-37",
            "content": "//\n//  TOFoModel.m\n//  SMG_NothingIsAll\n//\n//  Created by jia on 2019/1/30.\n//  Copyright \u00a9 2019\u5e74 XiaoGang. All rights reserved.\n//\n#import \"TOFoModel.h\"\n@interface TOFoModel()\n@property (strong, nonatomic) NSMutableArray *subModels;\n@property (strong, nonatomic) NSMutableArray *subDemands;\n@end\n@implementation TOFoModel\n+(TOFoModel*) newWithFo_p:(AIKVPointer*)fo_p base:(TOModelBase<ITryActionFoDelegate>*)base basePFoOrTargetFoModel:(id)basePFoOrTargetFoModel {\n    //1. \u6570\u636e\u51c6\u5907;\n    AIFoNodeBase *fo = [SMGUtils searchNode:fo_p];\n    TOFoModel *result = [[TOFoModel alloc] initWithContent_p:fo_p];\n    //2. \u8d4b\u503c;\n    result.status = TOModelStatus_Runing;\n    if (base) [base.actionFoModels addObject:result];\n    result.baseOrGroup = base;\n    result.actionIndex = -1;//\u9ed8\u8ba4\u4e3a\u5934(-1),r\u548ch\u4efb\u52a1\u81ea\u884c\u91cd\u8d4b\u503c;\n    result.targetSPIndex = fo.count;//\u9ed8\u8ba4\u5230\u5c3e(foCount),h\u4efb\u52a1\u81ea\u884c\u91cd\u8d4b\u503c;\n    result.basePFoOrTargetFoModel = basePFoOrTargetFoModel;\n    return result;\n}\n/**\n *  MARK:--------------------\u6bcf\u5c42\u7b2c\u4e00\u540d\u4e4b\u548c\u5206\u503c--------------------\n *  @desc \u8de8fo\u7684\u7efc\u5408\u8bc4\u5206,\n *          1. \u6bd4\u5982\u6253\u7bee\u7403\u53bb?\u8fd8\u662fk\u6b4c\u53bb,\u6253\u7bee\u7403\u8003\u8651\u5230\u6709\u6ca1\u6709\u7403,\u7403\u573a\u662f\u5426\u8fdc,\u81ea\u5df1\u662f\u5426\u7d2f,\u5929\u6c14\u662f\u5426\u597d, k\u6b4c\u4e5f\u8003\u8651\u5230\u81ea\u5df1\u4f1a\u5531\u6b4c\u4e0d,\u55d3\u5b50\u662f\u5426\u8212\u670d;"
        },
        {
            "comment": "This function calculates the overall score by summing up the scores of all submodels and sets the action index. It also provides methods to add submodels and subdemands, and converts feedback into orders for building protoFo.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/Out/Model/TOFoModel.m\":38-72",
            "content": " *          2. \u5f53\u5bf9\u4e8c\u8005\u8fdb\u884c\u7efc\u5408\u8bc4\u5206,\u9009\u62e9\u65f6,\u6d89\u53ca\u5230\u7ed3\u6784\u5316\u4e0b\u7684\u7efc\u5408\u8bc4\u5206;\n *          3. \u76ee\u524d\u7528\u4e0d\u7740,\u4ee5\u540e\u53ef\u80fd\u4e5f\u7528\u4e0d\u7740;\n *\n */\n//-(CGFloat) allNiceScore{\n//    //TOModelBase *subModel = [self itemSubModels];\n//    //if (subModel) {\n//    //    return self.score + [subModel allNiceScore];\n//    //}\n//    //1. \u4ece\u5f53\u524dactionIndex\n//    //2. \u627eitemSubModels\u4e0b\n//    //3. \u6240\u6709status\u672a\u4e2d\u6b62\u7684\n//    //4. \u90a3\u4e9b\u65f6\u5e8f\u7684\u8bc4\u5206\u603b\u548c\n//    return self.score;\n//}\n-(NSMutableArray *)subModels {\n    if (_subModels == nil) _subModels = [[NSMutableArray alloc] init];\n    return _subModels;\n}\n-(NSMutableArray *)subDemands{\n    if (_subDemands == nil) _subDemands = [[NSMutableArray alloc] init];\n    return _subDemands;\n}\n//-(void)setActionIndex:(NSInteger)actionIndex{\n//    NSLog(@\"toFo.setActionIndex:%ld -> %ld\",self.actionIndex,actionIndex);\n//    _actionIndex = actionIndex;\n//}\n/**\n *  MARK:--------------------\u5c06\u6bcf\u5e27\u53cd\u9988\u8f6c\u6210orders,\u4ee5\u6784\u5efaprotoFo--------------------\n *  @param fromRegroup : \u4eceTCRegroup\u8c03\u7528\u65f6\u672a\u53d1\u751f\u90e8\u5206\u4e5f\u53d6, \u800c\u7528\u4e8ecanset\u62bd\u8c61\u65f6\u4ec5\u53d6\u5df2\u53d1\u751f\u90e8\u5206;\n *  @version\n *      2022.11.25: \u8f6cregroupFo\u65f6\u6536\u96c6\u9ed8\u8ba4content_p\u5185\u5bb9(\u4ee3\u7801\u4e0d\u53d8),canset\u518d\u7c7b\u6bd4\u65f6\u4ec5\u83b7\u53d6feedback\u53cd\u9988\u7684alg (\u53c2\u800327207-1);"
        },
        {
            "comment": "This code retrieves a list of algorithms from a given set, prioritizing feedback algorithms if available. It collects the real occurrences of the algorithms and creates a new instance of AIShortMatchModel_Simple for each, adding it to an array.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/Out/Model/TOFoModel.m\":73-96",
            "content": " *      2023.02.12: \u8fd4\u56de\u6539\u4e3a: matchFo\u7684\u524d\u6bb5+\u6267\u884c\u90e8\u5206\u53cd\u9988\u5e27 (\u53c2\u800328068-\u65b9\u68481);\n */\n-(NSArray*) getOrderUseMatchAndFeedbackAlg:(BOOL)fromRegroup {\n    //1. \u6570\u636e\u51c6\u5907 (\u6536\u96c6\u9664\u672b\u4f4d\u5916\u7684content\u4e3aorder);\n    AIFoNodeBase *fo = [SMGUtils searchNode:self.content_p];\n    NSMutableArray *order = [[NSMutableArray alloc] init];\n    NSArray *feedbackIndexArr = [self getIndexArrIfHavFeedback];\n    NSInteger max = fromRegroup ? fo.count : self.actionIndex;\n    //2. \u5c06fo\u9010\u5e27\u6536\u96c6\u771f\u5b9e\u53d1\u751f\u7684alg;\n    for (NSInteger i = 0; i < max; i++) {\n        //3. \u627e\u5230\u5f53\u524d\u5e27alg_p;\n        AIKVPointer *matchAlg_p = ARR_INDEX(fo.content_ps, i);\n        //4. \u5982\u679c\u6709\u53cd\u9988feedbackAlg,\u5219\u4f18\u5148\u53d6\u53cd\u9988;\n        AIKVPointer *findAlg_p = matchAlg_p;\n        if ([feedbackIndexArr containsObject:@(i)]) {\n            findAlg_p = [self getFeedbackAlgWithSolutionIndex:i];\n        }\n        //5. \u751f\u6210\u65f6\u5e8f\u5143\u7d20;\n        if (findAlg_p) {\n            NSTimeInterval inputTime = [NUMTOOK(ARR_INDEX(fo.deltaTimes, i)) doubleValue];\n            [order addObject:[AIShortMatchModel_Simple newWithAlg_p:findAlg_p inputTime:inputTime isTimestamp:false]];"
        },
        {
            "comment": "This code snippet is converting an old index dictionary (indexDic) to a new one using feedback information from a solutionFo and targetOrPFo. The process involves collecting frames of feedback, retrieving the old index dictionary, filtering out only the relevant keys (absIndex), and then creating a new index dictionary (newIndexDic).",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/Out/Model/TOFoModel.m\":97-124",
            "content": "        }\n    }\n    return order;\n}\n/**\n *  MARK:--------------------\u7b97\u51fa\u65b0\u7684indexDic--------------------\n *  @desc \u7528\u65e7indexDic\u548cfeedbackAlg\u8ba1\u7b97\u51fa\u65b0\u7684indexDic (\u53c2\u800327206d-\u65b9\u68482);\n */\n-(NSDictionary*) convertOldIndexDic2NewIndexDic:(AIKVPointer*)targetOrPFo_p {\n    //1. \u6570\u636e\u51c6\u5907;\n    AIFoNodeBase *targetOrPFo = [SMGUtils searchNode:targetOrPFo_p];\n    AIKVPointer *solutionFo = self.content_p;\n    //2. \u5c06fo\u9010\u5e27\u6536\u96c6\u6709\u53cd\u9988\u7684conIndex (\u53c2\u800327207-7);\n    NSArray *feedbackIndexArr = [self getIndexArrIfHavFeedback];\n    //3. \u53d6\u51fasolutionFo\u65e7\u6709\u7684indexDic (\u53c2\u800327207-8);\n    NSDictionary *oldIndexDic = [targetOrPFo getConIndexDic:solutionFo];\n    //4. \u7b5b\u9009\u51fa\u6709\u53cd\u9988\u7684absIndex\u6570\u7ec4 (\u53c2\u800327207-9);\n    NSArray *feedbackAbsIndexArr = [SMGUtils filterArr:oldIndexDic.allKeys checkValid:^BOOL(NSNumber *absIndexKey) {\n        NSNumber *conIndexValue = NUMTOOK([oldIndexDic objectForKey:absIndexKey]);\n        return [feedbackIndexArr containsObject:conIndexValue];\n    }];\n    //5. \u8f6c\u6210newIndexDic (\u53c2\u800327207-10);\n    NSMutableDictionary *newIndexDic = [[NSMutableDictionary alloc] init];"
        },
        {
            "comment": "This code is converting the old SP dictionary to a new one by collecting data for each frame and using feedback index. It prepares the solution, iterates through feedback indexes, retrieves specific solution frame's strong value, and then returns the new dictionary.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/Out/Model/TOFoModel.m\":125-150",
            "content": "    for (NSInteger i = 0; i < feedbackAbsIndexArr.count; i++) {\n        NSNumber *absIndex = ARR_INDEX(feedbackAbsIndexArr, i);\n        [newIndexDic setObject:@(i) forKey:absIndex];\n    }\n    return newIndexDic;\n}\n/**\n *  MARK:--------------------\u7b97\u51fa\u65b0\u7684spDic--------------------\n *  @desc \u7528\u65e7spDic\u548cfeedbackAlg\u8ba1\u7b97\u51fa\u65b0\u7684spDic (\u53c2\u800327211-todo1);\n *  @version\n *      2023.04.01: \u4fee\u590d\u7b97\u51fa\u7684S\u53ef\u80fd\u4e3a\u8d1f\u7684BUG,\u6539\u4e3a\u76f4\u63a5\u4ececonSolution\u7ee7\u627f\u5bf9\u5e94\u5e27\u7684SP\u503c (\u53c2\u800327214);\n *  @result notnull (\u5efa\u8bae\u8fd4\u56de\u540e,\u68c0\u67e5\u4e00\u4e0bspDic\u548cabsCansetFo\u7684\u957f\u5ea6\u662f\u5426\u4e00\u81f4,\u4e0d\u4e00\u81f4\u65f6\u6765\u67e5BUG);\n */\n-(NSDictionary*) convertOldSPDic2NewSPDic {\n    //1. \u6570\u636e\u51c6\u5907 (\u6536\u96c6\u9664\u672b\u4f4d\u5916\u7684content\u4e3aorder) (\u53c2\u800327212-\u6b65\u9aa41);\n    AIFoNodeBase *solutionFo = [SMGUtils searchNode:self.content_p];\n    NSArray *feedbackIndexArr = [self getIndexArrIfHavFeedback];\n    NSMutableDictionary *newSPDic = [[NSMutableDictionary alloc] init];\n    //2. sulutionIndex\u90fd\u662f\u6709\u53cd\u9988\u7684\u5e27,\n    for (NSInteger i = 0; i < feedbackIndexArr.count; i++) {\n        //3. \u6570\u636e\u51c6\u5907: \u6709\u53cd\u9988\u7684\u5e27,\u5728solution\u5bf9\u5e94\u7684index (\u53c2\u800327212-\u6b65\u9aa41);\n        NSNumber *solutionIndex = ARR_INDEX(feedbackIndexArr, i);\n        //4. \u53d6\u5f97\u5177\u8c61solutionFo\u7684spStrong (\u53c2\u800327213-2&3);"
        },
        {
            "comment": "This code is part of a method that collects feedback indices from a solution and creates an NSMutableDictionary (newSPDic) containing the corresponding SP values. The getIndexArrIfHavFeedback method prepares data for collecting the feedback indices, searching the node in the content_p and creating an array called \"result\".",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/Out/Model/TOFoModel.m\":151-177",
            "content": "        AISPStrong *conSPStrong = [solutionFo.spDic objectForKey:@(solutionIndex.integerValue)];\n        //5. \u76f4\u63a5\u7ee7\u627fsolutionFo\u5bf9\u5e94\u5e27\u7684SP\u503c (\u53c2\u800327214-\u65b9\u6848);\n        AISPStrong *absSPStrong = conSPStrong ? conSPStrong : [[AISPStrong alloc] init];\n        [AITest test19:absSPStrong];\n        //6. \u65b0\u7684spDic\u6536\u96c6\u4e00\u5e27: \u62bd\u8c61canset\u7684\u5e27=i (\u56e0\u4e3a\u6bd4\u5982\u67093\u5e27\u6709\u53cd\u9988,\u90a3\u4e48\u8fd9\u4e09\u5e27\u5c31\u662f0,1,2) (\u53c2\u800327207-10);\n        NSInteger absCansetIndex = i;\n        [newSPDic setObject:absSPStrong forKey:@(absCansetIndex)];\n    }\n    return newSPDic;\n}\n//MARK:===============================================================\n//MARK:                     < privateMthod >\n//MARK:===============================================================\n/**\n *  MARK:--------------------\u83b7\u53d6\u5f53\u524dsolution\u4e2d\u6709\u53cd\u9988\u7684\u4e0b\u6807\u6570\u7ec4--------------------\n *  @result <K:\u6709\u53cd\u9988\u7684\u4e0b\u6807,V:\u6709\u53cd\u9988\u7684feedbackAlg_p>\n */\n-(NSMutableArray*) getIndexArrIfHavFeedback {\n    //1. \u6570\u636e\u51c6\u5907;\n    AIFoNodeBase *solutionFo = [SMGUtils searchNode:self.content_p];\n    NSMutableArray *result = [[NSMutableArray alloc] init];\n    //2. \u5c06fo\u9010\u5e27\u6536\u96c6\u6709\u53cd\u9988\u7684conIndex (\u53c2\u800327207-7);"
        },
        {
            "comment": "This code retrieves a feedback algorithm based on the given solution index. It first prepares data by finding the solution Fo node and then searches for an outer back model with a matching content pointer in the subModels array. If found, it returns the feedback algorithm of that model; otherwise, it returns nil.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/Out/Model/TOFoModel.m\":178-207",
            "content": "    for (NSInteger i = 0; i < solutionFo.count; i++) {\n        AIKVPointer *solutionAlg_p = ARR_INDEX(solutionFo.content_ps, i);\n        for (TOAlgModel *item in self.subModels) {\n            if (item.status == TOModelStatus_OuterBack && [item.content_p isEqual:solutionAlg_p] && item.feedbackAlg) {\n                [result addObject:@(i)];\n                break;\n            }\n        }\n    }\n    return result;\n}\n/**\n *  MARK:--------------------\u6839\u636esolutionIndex\u53d6feedbackAlg--------------------\n */\n-(AIKVPointer*) getFeedbackAlgWithSolutionIndex:(NSInteger)solutionIndex {\n    //1. \u6570\u636e\u51c6\u5907;\n    AIFoNodeBase *solutionFo = [SMGUtils searchNode:self.content_p];\n    AIKVPointer *solutionAlg_p = ARR_INDEX(solutionFo.content_ps, solutionIndex);\n    //2. \u627e\u51fa\u53cd\u9988\u8fd4\u56de;\n    for (TOAlgModel *item in self.subModels) {\n        if (item.status == TOModelStatus_OuterBack && [item.content_p isEqual:solutionAlg_p] && item.feedbackAlg) {\n            return item.feedbackAlg;\n        }\n    }\n    return nil;\n}\n//MARK:==============================================================="
        },
        {
            "comment": "This code sets the data for a three-level scene model and retrieves cansets for reflection or effective statistics. It checks if father, i, and content_p cansets have values, adding them to an array. If none of these cansets has a value, it adds a default canset from the content_p's scene.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/Out/Model/TOFoModel.m\":208-238",
            "content": "//MARK:                     < for \u4e09\u7ea7\u573a\u666f >\n//MARK:===============================================================\n-(void) setDataWithSceneModel:(AISceneModel*)baseSceneModel brother:(AITransferModel*)brother father:(AITransferModel*)father i:(AITransferModel*)i {\n    self.baseSceneModel = baseSceneModel;\n    self.brother = brother;\n    self.father = father;\n    self.i = i;\n}\n/**\n *  MARK:--------------------\u6709iCanset\u76f4\u63a5\u8fd4\u56de\u8fdb\u884c\u884c\u4e3a\u5316\u7b49 (\u53c2\u800329069-todo9 & todo10.1b)--------------------\n */\n-(AIKVPointer *)content_p {\n    if (_i) return _i.canset;\n    return super.content_p;\n}\n/**\n *  MARK:--------------------\u8fd4\u56de\u9700\u7528\u4e8e\u53cd\u7701\u6216\u6709\u6548\u7edf\u8ba1\u7684cansets (\u53c2\u800329069-todo11 && todo11.2)--------------------\n *  @result notnull\n */\n-(NSArray*) getRethinkEffectCansets {\n    NSMutableArray *result = [[NSMutableArray alloc] init];\n    //1. father\u548ci\u4e24\u7ea7canset\u6709\u503c\u65f6,\u6536\u96c6 (\u53c2\u800329069-todo11.2);\n    if (self.father) [result addObject:self.father];\n    if (self.i) [result addObject:self.i];\n    //2. \u4e09\u7ea7canset\u90fd\u65e0\u503c\u65f6,\u9ed8\u8ba4\u8fd4\u56decontent_p;\n    if (!ARRISOK(result)) [result addObject:[AITransferModel newWithScene:[self getContentScene] canset:self.content_p]];"
        },
        {
            "comment": "This code defines a class method \"getContentScene\" which returns the scene containing the content, based on whether it is an R task or H task. If it's an R task, it retrieves the matching FO model and returns its corresponding scene. If it's an H task, it accesses the target FO model through a series of nested baseOrGroup properties, and returns its content pointer. The code also includes the implementation of the \"initWithCoder\" method for NSCoding conformance, initializing instance variables with decoded data from the coder object.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/Out/Model/TOFoModel.m\":239-269",
            "content": "    return result;\n}\n//MARK:===============================================================\n//MARK:                     < privateMethod >\n//MARK:===============================================================\n-(AIKVPointer*) getContentScene {\n    //1. R\u4efb\u52a1\u65f6,\u8fd4\u56decontent\u6240\u5728\u7684scene;\n    if (ISOK(self.baseOrGroup, ReasonDemandModel.class)) {\n        AIMatchFoModel *pFo = (AIMatchFoModel*)self.basePFoOrTargetFoModel;\n        return pFo.matchFo;\n    }\n    //2. H\u4efb\u52a1\u65f6,\u8fd4\u56decontent\u6240\u5728\u7684scene;\n    if (ISOK(self.baseOrGroup, HDemandModel.class)) {\n        HDemandModel *hDemand = (HDemandModel*)self.baseOrGroup;\n        TOFoModel *targetFo = (TOFoModel*)hDemand.baseOrGroup.baseOrGroup;\n        return targetFo.content_p;\n    }\n    return nil;\n}\n/**\n *  MARK:--------------------NSCoding--------------------\n */\n- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder {\n    self = [super initWithCoder:aDecoder];\n    if (self) {\n        self.subModels = [aDecoder decodeObjectForKey:@\"subModels\"];\n        self.actionIndex = [aDecoder decodeIntegerForKey:@\"actionIndex\"];"
        },
        {
            "comment": "Decoding and encoding object properties using NSCoder for key-value storage.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/Out/Model/TOFoModel.m\":270-289",
            "content": "        self.targetSPIndex = [aDecoder decodeIntegerForKey:@\"targetSPIndex\"];\n        self.subDemands = [aDecoder decodeObjectForKey:@\"subDemands\"];\n        self.feedbackMv = [aDecoder decodeObjectForKey:@\"feedbackMv\"];\n        self.brother = [aDecoder decodeObjectForKey:@\"brother\"];\n        self.father = [aDecoder decodeObjectForKey:@\"father\"];\n        self.i = [aDecoder decodeObjectForKey:@\"i\"];\n        self.refrectionNo = [aDecoder decodeBoolForKey:@\"refrectionNo\"];\n    }\n    return self;\n}\n- (void)encodeWithCoder:(NSCoder *)aCoder {\n    [super encodeWithCoder:aCoder];\n    [aCoder encodeObject:self.subModels forKey:@\"subModels\"];\n    [aCoder encodeInteger:self.actionIndex forKey:@\"actionIndex\"];\n    [aCoder encodeInteger:self.targetSPIndex forKey:@\"targetSPIndex\"];\n    [aCoder encodeObject:self.subDemands forKey:@\"subDemands\"];\n    [aCoder encodeObject:self.feedbackMv forKey:@\"feedbackMv\"];\n    [aCoder encodeObject:self.brother forKey:@\"brother\"];\n    [aCoder encodeObject:self.father forKey:@\"father\"];"
        },
        {
            "comment": "Encodes object 'i' for key \"i\" and encodes boolean value of 'refrectionNo' for key \"refrectionNo\" in aCoder.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/Out/Model/TOFoModel.m\":290-294",
            "content": "    [aCoder encodeObject:self.i forKey:@\"i\"];\n    [aCoder encodeBool:self.refrectionNo forKey:@\"refrectionNo\"];\n}\n@end"
        }
    ]
}