{
    "summary": "This code sets up a timer in the SMG_NothingIsAll project, triggering events after specified intervals and handling various caller situations. The updated version includes bug fixes, supports non-trigger conditions, and uses a precise timer method with GCD execution.",
    "details": [
        {
            "comment": "This code is for the class AITime in the SMG_NothingIsAll project. It initializes a timer with a 10 second interval and triggers a notificationTimer method when the interval expires. The code also includes private methods and has notes about different callers and versions.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIClass/AITime/AITime.m\":0-43",
            "content": "//\n//  AITime.m\n//  SMG_NothingIsAll\n//\n//  Created by \u8d3e  on 2017/9/17.\n//  Copyright \u00a9 2017\u5e74 XiaoGang. All rights reserved.\n//\n#import \"AITime.h\"\n//@interface AITime ()\n//@property (strong,nonatomic) NSTimer *timer;            //\u8ba1\u65f6\u5668\n//@end\n@implementation AITime\n//-(id) init{\n//    self = [super init];\n//    if (self) {\n//        [self initData];\n//    }\n//    return self;\n//}\n//\n//-(void) initData{\n//    self.timer = [NSTimer scheduledTimerWithTimeInterval:10 target:self selector:@selector(notificationTimer) userInfo:nil repeats:YES];\n//}\n//\n////MARK:===============================================================\n////MARK:                     < privateMethod >\n////MARK:===============================================================\n//- (void)notificationTimer{\n//    NSLog(@\"AITime\u89e6\u53d1\u5668\u89e6\u53d1\");\n//}\n/**\n *  MARK:--------------------\u751f\u7269\u949f\u89e6\u53d1\u5668--------------------\n *  @callers\n *      1. demand.ActYes\u5904 (\u7b49\u5f85\u5916\u5faa\u73afmv\u62b5\u6d88);\n *      2. \u884c\u4e3a\u5316Hav().HNGL.ActYes\u5904 (\u7b49\u5f85\u5916\u5faa\u73af\u8f93\u5165\u7b26\u5408HNGL\u7684\u6982\u5ff5)\n *      3. \u884c\u4e3a\u8f93\u51faActYes\u5904 (\u7b49\u5f85\u5916\u5faa\u73af\u8f93\u5165\u63a8\u8fdb\u4e0b\u4e00\u5e27\u6982\u5ff5)\n *\n *  @version\n *      2020.08.14: \u652f\u6301\u751f\u7269\u949f\u89e6\u53d1\u5668;"
        },
        {
            "comment": "This code sets up a timer that triggers after deltaT x 1.3 time intervals and checks the ActYes status of the trigger. If not yet input by outer loop, it initiates the action and compares the imagined timeline (fo) to the actual timeline. If a model's sequence is complete, it destroys the associated trigger (now changed to change status instead). It also fixes a bug where it previously used seconds as milliseconds. The code supports non-trigger conditions and now uses a more precise timer method. Changes include adjusting the trigger time and executing triggers in main thread to avoid early memory release.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIClass/AITime/AITime.m\":44-64",
            "content": " *          1. timer\u8ba1\u65f6\u5668\u89e6\u53d1,\u53d6deltaT x 1.3\u65f6\u95f4;\n *          2. \"\u8ba1\u65f6\u89e6\u53d1\"\u65f6,\u5bf9\u89e6\u53d1\u8005\u7684ActYes\u72b6\u6001\u8fdb\u884c\u5224\u65ad,\u5982\u679c\u8fd8\u672a\u7531\u5916\u5faa\u73af\u5b9e\u9645\u8f93\u5165,\u5219\"\u5b9e\u9645\u89e6\u53d1\";\n *          3. \u5b9e\u9645\u89e6\u53d1\u540e,\u5bf9\u9884\u60f3\u65f6\u5e8ffo \u4e0e \u5b9e\u9645\u65f6\u5e8ffo \u8fdb\u884c\u53cd\u7701\u7c7b\u6bd4;\n *          x. \u5f53outModel\u4e2d\u67d0\u65f6\u5e8f\u5b8c\u6210\u65f6,\u5219\u8ffd\u56de(\u9500\u6bc1)\u4e0e\u5176\u5bf9\u5e94\u7684\u89e6\u53d1\u5668 (\u5e9f\u5f03,\u4e0d\u7528\u9500\u6bc1,\u6539\u53d8status\u72b6\u6001\u5373\u53ef);\n *          x. \u76f4\u5230\u89e6\u53d1\u65f6,\u8fd8\u672a\u9500\u6bc1,\u5219\u8bf4\u660e\u5b9e\u9645\u65f6\u5e8f\u5e76\u672a\u5b8c\u6210,\u6b64\u65f6\u8c03\u7528\u53cd\u7701\u7c7b\u6bd4 (\u5e9f\u5f03,\u7531tor_OPushM()\u6765\u505a\u72b6\u6001\u6539\u53d8\u5373\u53ef);\n *      2020.08.23: \u6539\u4e3a\u7531TOFoModel\u4e2dsetTimeTrigger\u65b9\u6cd5\u66ff\u4ee3;\n *      2020.09.03: \u652f\u6301\u4e0d\u8bbe\u89e6\u53d1\u6761\u4ef6\u65f6,\u9ed8\u8ba4\u5fc5\u89e6\u53d1\u7684\u91cd\u8f7d;\n *      2021.03.16: \u628atriggerTime\u8bbe\u4e3a\u6700\u592720s,\u4ee5\u65b9\u4fbf\u8bad\u7ec3\u6d4b\u8bd5\u9636\u6bb5\u7b49\u592a\u6162;\n *\n *  @bug\n *      2020.09.26: 21053BUG-\u6b64\u5904\u5c06\u5355\u4f4ds\u5f53\u505ams\u6765\u8ba1\u7b97,\u7ed3\u679c\u5bfc\u81f4\u53cd\u7701\u7c7b\u6bd4\u603b\u662f\u89e6\u53d1\u4e0d\u4e86P,\u53ea\u6709S;\n *\n *  @param deltaTime : \u539f\u672c\u95f4\u9694\u65f6\u957f,\u5355\u4f4ds\n *  _param canTrigger : \u89e6\u53d1\u6761\u4ef6;\n *  @todo\n *      2021.02.05: \u6362[NSTimer scheduledTimerWithTimeInterval:time repeats:false block:^(NSTimer *timer){}]\u66f4\u51c6\u65f6;\n *      2021.03.16: \u628atriggerTime\u6700\u592720s\u7684\u8bbe\u5b9a\u5220\u6389;\n *      2021.10.16: \u901a\u8fc7\u5ef6\u957f\u89e6\u53d1\u65f6\u95f4,\u8bd5\u56fe\u7ed5\u8fc7TC\u5361\u987f\u7684\u95ee\u9898 (\u53c2\u800324058-\u65b9\u68482) (\u5173\u95ed\u72b6\u6001,\u56e0\u4e3a\u4f18\u5148\u5c1d\u8bd5\u65b9\u68481);\n *      2023.03.04: \u5c06\u65f6\u95f4x2+1,\u6539\u6210x1.1+2 (\u53c2\u800328151-\u8c03\u8bd5&\u4fee\u590d);\n *      2023.07.20: \u6709\u65f6\u6267\u884ctrigger\u65f6\u4f1a\u63d0\u524drelease\u6389\u5185\u5b58,\u6240\u4ee5\u7531TC\u7ebf\u7a0b\u6539\u4e3amain\u7ebf\u7a0b\u6267\u884c;\n *      2023.07.21: \u601d\u7ef4\u90e8\u5206\u672c\u6765\u5c31\u8be5\u5728TC\u7ebf\u7a0b\u6267\u884c,trigger\u540e\u4e5f\u662f\u601d\u7ef4\u4ee3\u7801,\u6240\u4ee5\u6539\u56de\u5728TC\u7ebf\u7a0b (\u4e3a\u9632\u6b62\u63d0\u524drelease,\u52a0\u4e86_block\u4fdd\u7559);"
        },
        {
            "comment": "Sets a time trigger with a specified NSTimeInterval and function pointer, delaying the function by deltaTime*1.1+2.0f seconds (capped at 20.0f). The function is called when it's still in its original state. Uses GCD to execute the function after the delay.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIClass/AITime/AITime.m\":65-81",
            "content": " */\n+(void) setTimeTrigger:(NSTimeInterval)deltaTime trigger:(void(^)())trigger{\n    //1. \u6570\u636e\u68c0\u67e5\n    if (!trigger) return;\n    //2. \u7528after\u5ef6\u8fdf\u5b9a\u65f6deltaT x 1.3\u89e6\u53d1;\n    CGFloat triggerTime = deltaTime * 1.1f + 2.0f;//\u5f5324058-\u65b9\u68481\u4e0d\u6210\u65f6,\u6b64\u5904\u65b9\u68482\u518d\u505a\u4e3a\u5907\u542f\u7528,\u5373\u5c061.0\u8c03\u6574\u4e3a3\u751a\u81f35;\n    triggerTime = MIN(triggerTime, 20.0f);\n    NSLog(@\"---> \u8bbe\u5b9a\u751f\u7269\u949f\u89e6\u53d1\u5668: deltaTime:%.2f triggerTime:%.2f\",deltaTime,triggerTime);\n    __block Act0 weakTrigger = trigger;\n    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(triggerTime * NSEC_PER_SEC)), theTC.tiQueue, ^{\n        //3. \u89e6\u53d1\u65f6,\u5224\u65ad\u662f\u5426\u8fd8\u662factYes\u72b6\u6001 (\u5728OuterPushMiddleLoop()\u4e2d,\u4f1a\u5c06ActYes\u4e14\u7b26\u5408,\u4e14PM\u7b97\u6cd5\u6210\u529f\u7684,\u6539\u4e3aFinish);\n        weakTrigger();\n    });\n}\n@end"
        }
    ]
}