{
    "summary": "The file NVViewUtil.h contains utility functions for 2D line and point operations, including duplicate checking, distance calculation, angle measurement, and direction conversion. It also has two class methods \"convertAngle2Direction_4\" and \"convertAngle2Direction_8\" for different precision directions.",
    "details": [
        {
            "comment": "This file, NVViewUtil.h, contains several utility functions for working with lines and points in a two-dimensional space. The functions include checking if an array of line data already contains another set of line data to prevent duplicates, calculating the distance between two points, calculating the angle between two points measured from the starting point (0-1 range), and calculating the angle between two points measured from the ending point (-\u03c0 to \u03c0 range). There is also a function that converts an angle to a direction value given the number of directions (usually 4 or 8 directions).",
            "location": "\"/media/root/Prima/works/he4o/docs/src/ThirdParty/SMGNetVision/Core/NVViewUtil.h\":0-41",
            "content": "//\n//  NVViewUtil.h\n//  SMG_NothingIsAll\n//\n//  Created by jia on 2019/6/17.\n//  Copyright \u00a9 2019\u5e74 XiaoGang. All rights reserved.\n//\n#import <Foundation/Foundation.h>\n@interface NVViewUtil : NSObject\n/**\n *  MARK:--------------------lineDatas\u7684\u6536\u96c6\u9632\u91cd--------------------\n */\n+(BOOL) containsLineData:(NSArray*)checkLineData fromLineDatas:(NSArray*)lineDatas;\n/**\n *  MARK:--------------------\u4e24\u70b9\u8ddd\u79bb--------------------\n */\n+(CGFloat) distancePoint:(CGPoint)first second:(CGPoint)second;\n/**\n *  MARK:--------------------\u4e24\u70b9\u89d2\u5ea6--------------------\n *  0 -> 1 (\u4ece\u5de6\u5f00\u59cb0\u987a\u65f6\u9488,\u4e00\u5708\u4e3a0\u52301)\n */\n+(CGFloat) angleZero2OnePoint:(CGPoint)first second:(CGPoint)second;\n/**\n *  MARK:--------------------\u4e24\u70b9\u89d2\u5ea6--------------------\n *  -PI -> PI (\u4ece\u53f3\u81f3\u5de6,\u4e0a\u9762\u4e3a-0 -> -3.14 / \u4ece\u53f3\u81f3\u5de6,\u4e0b\u9762\u4e3a0 -> 3.14)\n */\n+(CGFloat) anglePIPoint:(CGPoint)first second:(CGPoint)second;\n/**\n *  MARK:--------------------\u5c06angle\u8f6c\u4e3a\u65b9\u5411\u503c--------------------\n *  @param angle : angle\u4e3a\u5de6\u5411\u987a\u65f6\u94880-1 (\u542b0,\u4e0d\u542b1);\n *  @param directionCount : \u65b9\u5411\u6570 (\u4e00\u822c\u4e3a4\u62168\u5411);\n */\n+(CGFloat) convertAngle2Direction:(CGFloat)angle directionCount:(int)directionCount;"
        },
        {
            "comment": "This code defines two class methods in the NVViewUtil class, named \"convertAngle2Direction_4\" and \"convertAngle2Direction_8\". These methods take an angle as input and return a direction in CGFloat format. The difference between the two methods lies in their precision, with \"_4\" being less precise (rounded to 0 decimal places) and \"_8\" being more precise (rounded to 2 decimal places).",
            "location": "\"/media/root/Prima/works/he4o/docs/src/ThirdParty/SMGNetVision/Core/NVViewUtil.h\":42-45",
            "content": "+(CGFloat) convertAngle2Direction_4:(CGFloat)angle;\n+(CGFloat) convertAngle2Direction_8:(CGFloat)angle;\n@end"
        }
    ]
}