{
    "summary": "This code creates FrontOrderNode and CMVNodeBase objects, manages MV nodes in AIMvFoManager, supports limiting repeat range with noRepeatArea_ps array, and strengthens front order nodes based on an array of orders.",
    "details": [
        {
            "comment": "This code appears to be part of a class called AIMvFoManager, which is creating FrontOrderNode and CMVNodeBase objects. The create method takes in an inputTime, order array, and mv object as parameters. It creates a FrontOrderNode, assigns the inputTime to mvDeltaTime if there is an order, relates the Fo and Mv nodes, and then returns the created Fo node. The createConMv method seems to be responsible for creating CMVNodeBase objects by parsing data and packing it into cmvNode.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AINet/AIMvFoManager/AIMvFoManager.m\":0-37",
            "content": "//\n//  AIMvFoManager.m\n//  SMG_NothingIsAll\n//\n//  Created by iMac on 2018/5/6.\n//  Copyright \u00a9 2018\u5e74 XiaoGang. All rights reserved.\n//\n#import \"AIMvFoManager.h\"\n#import \"AINetAbsFoUtils.h\"\n@implementation AIMvFoManager\n/**\n *  MARK:--------------------\u521b\u5efafo\u548cmv\u7684\u6307\u5411--------------------\n *  @param mv notnull\n */\n-(AIFrontOrderNode*) create:(NSTimeInterval)inputTime order:(NSArray*)order mv:(AICMVNodeBase*)mv{\n    //1. foNode;\n    NSInteger urgentTo = [NUMTOOK([AINetIndex getData:mv.urgentTo_p]) integerValue];\n    AIFrontOrderNode *foNode = [AIMvFoManager createConFo:order difStrong:urgentTo];\n    //2. \u5c06mv.inputTime\u4f20\u5165,\u5728relateFo\u4e4b\u524d,\u5c06inputTime\u8d4b\u503cfo.mvDeltaTime;\n    if (ARRISOK(order)) {\n        AIShortMatchModel_Simple *lastOrderTime = ARR_INDEX_REVERSE(order, 0);\n        foNode.mvDeltaTime = inputTime - lastOrderTime.inputTime;\n    }\n    //3. \u4e92\u6307\u5411\n    [AINetUtils relateFo:foNode mv:mv];\n    //4. \u8fd4\u56de\u7ed9thinking\n    return foNode;\n}\n-(AICMVNodeBase*) createConMv:(NSArray*)imvAlgsArr {\n    //1. \u6570\u636e\u89e3\u6790 & \u6253\u5305cmvNode;\n    __block AICMVNodeBase *cmvNode = nil;"
        },
        {
            "comment": "This code creates a CMV node by constructing an AICMVNodeBase object using given parameters for urgentTo, delta_p, and at. It first checks if the input parameters are valid and then sorts them before getting the absolute matching using global deduplication to prevent duplicates. Finally, it returns the constructed AICMVNodeBase object.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AINet/AIMvFoManager/AIMvFoManager.m\":38-59",
            "content": "    [ThinkingUtils parserAlgsMVArr:imvAlgsArr success:^(AIKVPointer *delta_p, AIKVPointer *urgentTo_p, NSInteger delta, NSInteger urgentTo, NSString *algsType) {\n        //2. \u6253\u5305cmvNode (imv\u7684\u4ef7\u503c\u8282\u70b9\u5148\u653e\u5185\u5b58\u4e2d);\n        cmvNode = [self createConMv:urgentTo_p delta_p:delta_p at:algsType];\n    }];\n    return cmvNode;\n}\n/**\n *  MARK:--------------------mvNode\u6784\u5efa\u5668--------------------\n *  @version\n *      2023.08.09: \u652f\u6301\u5168\u5c40\u9632\u91cd (\u53c2\u800330095-\u65b9\u68483);\n */\n-(AICMVNodeBase*) createConMv:(AIKVPointer*)urgentTo_p delta_p:(AIKVPointer*)delta_p at:(NSString*)at {\n    //1. \u6570\u636e\n    if (!urgentTo_p || !delta_p || !at) return nil;\n    NSInteger urgentTo = [NUMTOOK([AINetIndex getData:urgentTo_p]) integerValue];\n    NSArray *content_ps = @[urgentTo_p, delta_p];\n    NSArray *sort_ps = [SMGUtils sortPointers:content_ps];\n    //2. \u5168\u5c40\u9632\u91cd;\n    AICMVNodeBase *result = [AINetIndexUtils getAbsoluteMatching_General:content_ps sort_ps:sort_ps except_ps:nil getRefPortsBlock:^NSArray *(AIKVPointer *item_p) {\n        return [AINetUtils refPorts_All4Value:item_p];"
        },
        {
            "comment": "This code snippet is responsible for creating and managing MV nodes in the AIMvFoManager class. It initializes a new MV node if none exists, strengthens its reference ports, and stores it in SMGUtils. The createConFo function creates a new AIFoNodeBase by either calling createConFo or createConFo_NoRepeat with an array of order parameters.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AINet/AIMvFoManager/AIMvFoManager.m\":60-91",
            "content": "    } at:at ds:DefaultDataSource type:ATDefault];\n    //3. \u65e0\u5219\u65b0\u6784\u5efa;\n    if (!ISOK(result, AICMVNodeBase.class)) {\n        result = [[AICMVNode alloc] init];\n        result.pointer = [SMGUtils createPointer:kPN_CMV_NODE algsType:at dataSource:DefaultDataSource isOut:false type:ATDefault];\n        result.delta_p = delta_p;\n        result.urgentTo_p = urgentTo_p;\n    }\n    //4. \u589e\u5f3a\u5173\u8054;\n    [AINetUtils insertRefPorts_AllMvNode:result value_p:result.delta_p difStrong:1];//\u5f15\u7528\u63d2\u7ebf\n    [AINetUtils insertRefPorts_AllMvNode:result value_p:result.urgentTo_p difStrong:1];//\u5f15\u7528\u63d2\u7ebf\n    [theNet setMvNodeToDirectionReference:result difStrong:urgentTo];//difStrong\u6682\u65f6\u5148\u76f8\u7b49;\n    //5. \u5b58\u50a8cmvNode\n    [SMGUtils insertNode:result];\n    return result;\n}\n/**\n *  MARK:--------------------\u6784\u5efaconFo--------------------\n *  @result notnull\n *  @callers\n *      1. \u65b0\u5e27\u8f93\u5165\u65f6,\u6784\u5efamatchAFo;\n *      2. \u65b0\u5e27\u8f93\u5165\u65f6,\u6784\u5efaprotoFo;\n */\n+(AIFrontOrderNode*) createConFo:(NSArray*)order{\n    return [self createConFo:order difStrong:1];\n}\n+(AIFoNodeBase*) createConFo_NoRepeat:(NSArray*)order {"
        },
        {
            "comment": "This code creates a generic method to build specific fo objects, supporting limiting the repeat range. It takes an order array as input and optionally specifies a noRepeatArea_ps array for preventing duplicate objects within a specified range. The method converts the order array into an absolute matching format and returns an AIFoNodeBase object after applying the necessary logic to prevent duplicates.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AINet/AIMvFoManager/AIMvFoManager.m\":92-111",
            "content": "    return [self createConFo_General:order noRepeatArea_ps:nil];\n}\n/**\n *  MARK:--------------------\u521b\u5efa\u5177\u8c61cansetFo (\u652f\u6301\u573a\u666f\u5185\u9632\u91cd)--------------------\n *  @desc \u6784\u5efacanset\u65f6\u4e0d\u5e94\u5168\u5c40\u9632\u91cd,\u800c\u662f\u53ea\u4ee5\u573a\u666f\u5185\u9632\u91cd (\u4e0d\u7136\u8fd9\u4e9bcanset\u7684SPEFF\u503c\u5c31\u7a9c\u4e86,\u6bd4\u5982\u5728\u5317\u4eac\u5403\u9f99\u867e\u4e0d\u884c,\u5728\u5bb6\u662f\u53ef\u4ee5\u7684) (\u53c2\u80033101b-todo5);\n */\n+(AIFoNodeBase*) createConFoForCanset:(NSArray*)order sceneFo:(AIFoNodeBase*)sceneFo sceneTargetIndex:(NSInteger)sceneTargetIndex {\n    NSArray *oldCansets = [sceneFo getConCansets:sceneTargetIndex];\n    return [self createConFo_General:order noRepeatArea_ps:oldCansets];\n}\n/**\n *  MARK:--------------------\u901a\u7528\u521b\u5efa\u5177\u8c61fo\u65b9\u6cd5 (\u652f\u6301\u9650\u5b9a\u9632\u91cd\u8303\u56f4)--------------------\n *  @param noRepeatArea_ps : \u9632\u91cd\u8303\u56f4;\n */\n+(AIFoNodeBase*) createConFo_General:(NSArray*)order noRepeatArea_ps:(NSArray*)noRepeatArea_ps {\n    //1. \u9632\u91cd_\u53d6\u672c\u5730\u5168\u5c40\u7edd\u5bf9\u5339\u914d;\n    NSArray *content_ps = [AINetAbsFoUtils convertOrder2Alg_ps:order];\n    AIFoNodeBase *result = [AINetIndexUtils getAbsoluteMatching_ValidPs:content_ps sort_ps:content_ps except_ps:nil noRepeatArea_ps:noRepeatArea_ps getRefPortsBlock:^NSArray *(AIKVPointer *item_p) {"
        },
        {
            "comment": "This code creates or strengthens a front order node (AIFrontOrderNode) based on an array of orders (NSArray*). It first checks if there is an existing related AIFrontOrderNode and either reinforces the connection if it exists or creates a new one. The function also sets the pointer to be of type ATDefault, collects the content_ps from the order array, and inserts references to the corresponding algorithm nodes using AINetUtils.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AINet/AIMvFoManager/AIMvFoManager.m\":112-140",
            "content": "        AIAlgNodeBase *itemAlg = [SMGUtils searchNode:item_p];\n        return [AINetUtils refPorts_All4Alg:itemAlg];\n    } at:DefaultAlgsType ds:DefaultDataSource type:ATDefault];\n    //2. \u6709\u5219\u52a0\u5f3a\u5173\u8054;\n    if (ISOK(result, AINetAbsFoNode.class)) {\n        [AINetUtils insertRefPorts_AllFoNode:result.pointer order_ps:result.content_ps ps:result.content_ps];\n    }else{\n        //3. \u65e0\u5219\u65b0\u6784\u5efa;\n        result = [self createConFo:order];\n    }\n    return result;\n}\n+(AIFrontOrderNode*) createConFo:(NSArray*)order difStrong:(NSInteger)difStrong{\n    //1. foNode\n    AIFrontOrderNode *foNode = [[AIFrontOrderNode alloc] init];\n    //2. pointer (\u6700\u7ec8\u751f\u6210conFo\u65f6,\u5168\u662fATDefault\u7c7b\u578b);\n    foNode.pointer = [SMGUtils createPointer:kPN_FRONT_ORDER_NODE algsType:DefaultAlgsType dataSource:DefaultDataSource isOut:false type:ATDefault];\n    //3. content_ps\n    NSArray *content_ps = [AINetAbsFoUtils convertOrder2Alg_ps:order];\n    //4. foNode.orders\u6536\u96c6\n    [foNode setContent_ps:content_ps];\n    //5. foNode\u5f15\u7528conAlg;\n    [AINetUtils insertRefPorts_AllFoNode:foNode.pointer order_ps:foNode.content_ps ps:foNode.content_ps difStrong:difStrong];"
        },
        {
            "comment": "In this code block, the function finds the absolute node based on the order and returns it. It then extracts the deltaTimes from the found Absolute Node using AINetAbsFoUtils. The foNode is stored with SMGUtils, and AITest tests the content_ps of the foNode with ATDefault type. Finally, the function returns the foNode.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AINet/AIMvFoManager/AIMvFoManager.m\":142-151",
            "content": "    //6. \u63d0\u53d6findAbsNode\u7684deltaTimes;\n    foNode.deltaTimes = [AINetAbsFoUtils convertOrder2DeltaTimes:order];\n    //7. \u5b58\u50a8foNode\n    [SMGUtils insertNode:foNode];\n    [AITest test8:foNode.content_ps type:ATDefault];\n    return foNode;\n}\n@end"
        }
    ]
}