{
    "summary": "The code initializes `AISqlPointer` with class and ID, creates or retrieves existing value from database. It implements NSCoding protocol for archiving/unarchiving, encoding properties \"pClass\" and \"pId\".",
    "details": [
        {
            "comment": "The code initializes an instance of AISqlPointer with a specific class and ID. If the value already exists in the database, it returns that existing value; otherwise, it creates a new value, inserts it into the database, and returns the newly created value.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AINet/AIPointer/AISqlPointer.m\":0-38",
            "content": "////\n////  AISqlPointer.m\n////  SMG_NothingIsAll\n////\n////  Created by \u8d3e  on 2017/9/7.\n////  Copyright \u00a9 2017\u5e74 XiaoGang. All rights reserved.\n////\n//\n//#import \"AISqlPointer.h\"\n//\n//@implementation AISqlPointer\n//\n//-(id) initWithPId:(NSInteger)pId{\n//    self = [super init];\n//    if (self) {\n//        self.pId = pId;\n//    }\n//    return self;\n//}\n//\n//+(AISqlPointer*) initWithClass:(Class)pC withId:(NSInteger)pI {\n//\n//    /*\n//     NSDictionary *where = [[NSDictionary alloc] initWithObjectsAndKeys:NSStringFromClass(pC),@\"pClass\",@(pI),@\"pId\", nil];\n//     AIPointer *value = [AIPointer searchSingleWithWhere:where orderBy:nil];\n//     if (value) {\n//     return value;\n//     }else{\n//     value = [[AIPointer alloc] init];\n//     value.pClass = NSStringFromClass(pC);\n//     value.pId = pI;\n//     [AIPointer insertToDB:value];\n//     return value;\n//     }\n//     */\n//\n//    //\u539f\u5148\u53bb\u91cd\u5e76insert\u4e86,\u4f46\u5176\u5b9e\u8fd9\u4e2a\u53bb\u91cd\u4f1a\u81ea\u52a8\u4f5c;\u4e0d\u9700\u8981;\u5e76\u4e14\u8fd9\u91cc\u76f4\u63a5insert\u4f1a\u51fa\u95ee\u9898;\u56e0\u4e3a\u6b64\u65f6\u7684PId\u5f88\u591a\u662f0;\n//    AISqlPointer *pointer = [[AISqlPointer alloc] init];\n//    pointer.pClass = NSStringFromClass(pC);"
        },
        {
            "comment": "This code defines a class `AISqlPointer` that represents a pointer to an object. It contains methods for setting the object's ID and class, comparing pointers based on their address, and implementing the `NSCoding` protocol for encoding and decoding objects. The content method is currently commented out as it depends on LKDB.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AINet/AIPointer/AISqlPointer.m\":39-75",
            "content": "//    pointer.pId = pI;\n//    return pointer;\n//\n//}\n//\n///**\n// *  MARK:--------------------public--------------------\n// */\n//-(BOOL) isEqual:(AISqlPointer*)object{//\u91cd\u5199\u6307\u9488\u5bf9\u6bd4\u5730\u5740\u65b9\u6cd5;\n//    if (ISOK(object, AISqlPointer.class)) {\n//        BOOL classIsEqual = [STRTOOK(self.pClass) isEqual:((AISqlPointer*)object).pClass];\n//        BOOL idIsEqual = self.pId == ((AISqlPointer*)object).pId;\n//        return classIsEqual && idIsEqual;\n//    }\n//    return false;\n//}\n//\n///**\n// *  MARK:--------------------content--------------------\n// *  @version\n// *      2020.07.09: \u6682\u7528\u4e0d\u7740sql\u65b9\u5f0f,\u5c06LKDB\u4f9d\u8d56\u53bb\u6389,\u6b64\u65b9\u6cd5\u9700\u4f9d\u8d56LKDB,\u4e5f\u8ddf\u7740\u6ce8\u6389,\u54ea\u5929\u8981\u91cd\u65b0\u542f\u7528,\u518d\u6253\u5f00\u5373\u53ef;\n// */\n////-(id) content{\n////    Class class = NSClassFromString(STRTOOK(self.pClass));\n////    if (class) {\n////        return [class searchSingleWithWhere:[SMGUtils sqlWhere_RowId:self.pId] orderBy:nil];\n////    }\n////    return nil;\n////}\n//\n//\n//\n///**\n// *  MARK:--------------------NSCoding--------------------\n// */\n//- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder {\n//    self = [super initWithCoder:aDecoder];"
        },
        {
            "comment": "This code implements the NSCoding protocol for a class, allowing it to be archived and unarchived using NSKeyedArchiver and NSKeyedUnarchiver. It encodes the object's properties \"pClass\" and \"pId\" when archiving, and decodes them when unarchiving.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AINet/AIPointer/AISqlPointer.m\":76-89",
            "content": "//    if (self) {\n//        self.pClass = [aDecoder decodeObjectForKey:@\"pClass\"];\n//        self.pId = [aDecoder decodeIntegerForKey:@\"pId\"];\n//    }\n//    return self;\n//}\n//\n//- (void)encodeWithCoder:(NSCoder *)aCoder {\n//    [super encodeWithCoder:aCoder];\n//    [aCoder encodeObject:self.pClass forKey:@\"pClass\"];\n//    [aCoder encodeInteger:self.pId forKey:@\"pId\"];\n//}\n//\n//@end"
        }
    ]
}