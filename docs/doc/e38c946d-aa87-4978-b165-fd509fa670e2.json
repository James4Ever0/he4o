{
    "summary": "This code contains MathUtils methods for value transformation and CGRect manipulation, including getValueWithOriRange, getNegativeTen2TenWithOriRange, getZero2TenWithOriRange, collectRect, filterRect, radioRect, a function for calculating rectangle height based on radio value, and functions for temperature adjustment using exponential decay.",
    "details": [
        {
            "comment": "Method `MathUtils.m` contains 3 static methods for value transformation, where `getNegativeTen2TenWithOriRange` and `getZero2TenWithOriRange` are specific cases of `getValueWithOriRange`. The methods check if the input value is within the given range and then calculate a new value within another specified range based on the percentage of the original value in its original range.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/Demo/Extension/MathUtils.m\":0-27",
            "content": "//\n//  MathUtils.m\n//  SMG_NothingIsAll\n//\n//  Created by jia on 2023/5/21.\n//  Copyright \u00a9 2023\u5e74 XiaoGang. All rights reserved.\n//\n#import \"MathUtils.h\"\n@implementation MathUtils\n+(CGFloat) getNegativeTen2TenWithOriRange:(UIFloatRange)oriRange oriValue:(CGFloat)oriValue{\n    return [self getValueWithOriRange:oriRange targetRange:UIFloatRangeMake(-10, 10) oriValue:oriValue];\n}\n+(CGFloat) getZero2TenWithOriRange:(UIFloatRange)oriRange oriValue:(CGFloat)oriValue{\n    return [self getValueWithOriRange:oriRange targetRange:UIFloatRangeMake(0, 10) oriValue:oriValue];\n}\n+(CGFloat) getValueWithOriRange:(UIFloatRange)oriRange targetRange:(UIFloatRange)targetRange oriValue:(CGFloat)oriValue{\n    //1,\u6570\u636e\u8303\u56f4\u68c0\u67e5;\n    oriValue = MAX(oriValue, MIN(oriValue, oriRange.maximum));\n    //2,checkValue\u6240\u5728\u7684\u503c\n    CGFloat percent = 0;\n    if (oriRange.minimum != oriValue) {\n        percent = (oriValue - oriRange.minimum) / (oriRange.maximum - oriRange.minimum);\n    }\n    //3,\u8fd4\u56de\u53d8\u6362\u503c\n    return (targetRange.maximum - targetRange.minimum) * percent + targetRange.minimum;"
        },
        {
            "comment": "This code contains several methods for manipulating CGRect objects. The first method \"collectRect\" combines two rectangles by taking their union. The second method \"filterRect\" returns the intersection of two rectangles, useful for finding overlapping areas. Finally, the \"radioRect\" method finds a specific point within a rectangle based on a given percentage between two other rectangles.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/Demo/Extension/MathUtils.m\":28-55",
            "content": "}\n//MARK:===============================================================\n//MARK:                     < rect >\n//MARK:===============================================================\n/**\n *  MARK:--------------------\u53d6rect\u5e76\u96c6--------------------\n */\n+(CGRect) collectRectA:(CGRect)rectA rectB:(CGRect)rectB {\n    return CGRectUnion(rectA, rectB);\n}\n/**\n *  MARK:--------------------\u53d6rect\u4ea4\u96c6--------------------\n */\n+(CGRect) filterRectA:(CGRect)rectA rectB:(CGRect)rectB {\n    //\u6ce8\u610f: \u6709\u65f6\u5019CGRectIntersects()\u8fd4\u56de\u7684\u662f\u4e00\u4e2a+-inf\u7684xy\n    return CGRectIntersection(rectA, rectB);\n}\n/**\n *  MARK:--------------------\u53d6start\u5230end\u4e4b\u95f4\u767e\u5206\u6bd4\u5904\u7684\u503c--------------------\n */\n+(CGRect) radioRect:(CGRect)startRect endRect:(CGRect)endRect radio:(CGFloat)radio{\n    CGFloat x = [self radioFloat:CGRectGetMinX(startRect) endFloat:CGRectGetMinX(endRect) radio:radio];\n    CGFloat y = [self radioFloat:CGRectGetMinY(startRect) endFloat:CGRectGetMinY(endRect) radio:radio];\n    CGFloat w = [self radioFloat:CGRectGetWidth(startRect) endFloat:CGRectGetWidth(endRect) radio:radio];"
        },
        {
            "comment": "This code defines a function that takes in a start rectangle and an end rectangle, along with a radio value. It calculates the height of the new rectangle based on the radio value and returns a new rectangle with the same x, y coordinates and width as the original rectangle, but with the calculated height. The code also includes functions to calculate cooled values using Newton's cooling method for temperature adjustment.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/Demo/Extension/MathUtils.m\":56-83",
            "content": "    CGFloat h = [self radioFloat:CGRectGetHeight(startRect) endFloat:CGRectGetHeight(endRect) radio:radio];\n    return CGRectMake(x, y, w, h);\n}\n//\u7528radio\u53d6float\u4ecestart\u5230end\u4e4b\u95f4\u7684\u503c;\n+(CGFloat) radioFloat:(CGFloat)startFloat endFloat:(CGFloat)endFloat radio:(CGFloat)radio{\n    return startFloat + (endFloat - startFloat) * radio;\n}\n/**\n *  MARK:--------------------\u725b\u987f\u51b7\u5374--------------------\n *  @param totalCoolTime \u603b\u51b7\u5374\u65f6\u95f4 (\u9700>0)\n *  @param pastTime \u5df2\u51b7\u5374\u65f6\u95f4\n *  _param pastRate : \u5df2\u51b7\u5374\u767e\u5206\u6bd4\u65f6\u95f4;\n *  @param finishValue \u73af\u5883\u6e29\u5ea6 (\u8f93\u51fa\u767e\u5206\u6bd4\u5373\u53ef: 0%\u65f6\u51b7\u5374\u52300,100%\u65f6\u4e0d\u51b7\u5374) (\u5f5328\u539f\u5219\u65f6,\u4e3a0.000322f)\n *  @result \u8fd4\u56de\u5269\u4e0b\u6e29\u5ea6\u767e\u5206\u6bd4 (\u6b64\u503c <= 1 && > finishValue);\n */\n+(CGFloat) getCooledValue:(CGFloat)totalCoolTime pastTime:(CGFloat)pastTime finishValue:(CGFloat)finishValue {\n    return [self getCooledValue:pastTime / totalCoolTime finishValue:finishValue];\n}\n+(CGFloat) getCooledValue_28:(CGFloat)pastRate {\n    return [self getCooledValue:pastRate finishValue:0.000322f];\n}\n+(CGFloat) getCooledValue:(CGFloat)pastRate finishValue:(CGFloat)finishValue {\n    //2. \u51b7\u5374\u7cfb\u6570\n    CGFloat coefficient = -logf(finishValue);"
        },
        {
            "comment": "Calculates the exponential decay of a value, taking into account the coefficient and past rate. Returns the cooled value after applying the exponential decay formula.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/Demo/Extension/MathUtils.m\":85-90",
            "content": "    //3. \u8ba1\u7b97\u51fa\u51b7\u5374\u540e\u7684\u503c;\n    CGFloat cooledValue = expf(-coefficient * pastRate);\n    return cooledValue;\n}\n@end"
        }
    ]
}