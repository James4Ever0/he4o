{
    "summary": "This code improves thinking control forecasts, supports multi-trigger types and feedback adjustments, distinguishes emotional/rational predictions, forecasts single items, checks cut indexes, manages triggers for opinion frames, updates item status based on score, performs perceptual reflection if needed, marks item as expired, and pushes frame finish.",
    "details": [
        {
            "comment": "This code implements a thinking control forecast module in a project. It has multiple updates and improvements, including support for different types of triggers and feedbacks, adjustments based on feedback, and separation of emotional and rational IRT predictions with distinct trigger responses. The code also includes TODO items for future improvements to increase prediction accuracy.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCForecast/TCForecast.m\":0-31",
            "content": "//\n//  TCForecast.m\n//  SMG_NothingIsAll\n//\n//  Created by jia on 2021/11/28.\n//  Copyright \u00a9 2021\u5e74 XiaoGang. All rights reserved.\n//\n#import \"TCForecast.h\"\n@implementation TCForecast\n/**\n *  MARK:--------------------\u53cd\u7701\u89e6\u53d1\u5668--------------------\n *  @desc\n *      1. \u5bf9\u4efb\u52a1\u4e0b\u4e00\u5e27\u9884\u6d4b\u7684\u7b49\u5f85\u53cd\u9988 (\u89e6\u53d1\u5668\u7b49\u5f85\u53cd\u7701);\n *  @version\n *      2021.01.27: \u975e\u672b\u4f4d\u4e5f\u652f\u6301mv\u89e6\u53d1\u5668 (\u53c2\u800322074-BUG2);\n *      2021.02.01: \u652f\u6301\u53cd\u5411\u53cd\u9988\u5916\u7c7b\u6bd4 (\u53c2\u800322107);\n *      2021.02.04: \u865amv\u4e0d\u4f1a\u89e6\u53d1In\u53cd\u7701,\u5426\u5219\u51e0\u4e4e\u6c38\u8fdc\u4e3a\u9006 (\u56e0\u4e3a\u672c\u6765\u865amv\u5c31\u4e0d\u4f1a\u6709\u8f93\u5165\u7684);\n *      2021.02.04: \u865amv\u4e5f\u8981\u652f\u6301In\u53cd\u7701,\u5426\u5219\u65e0\u6cd5\u5f62\u6210\u5bf9R-\u6a21\u5f0f\u52a9\u76ca (\u53c2\u800322108);\n *      2021.10.12: SP\u7684\u5b9a\u4e49\u7531\u987a\u9006\u6539\u4e3a\u597d\u574f,\u6240\u4ee5\u6b64\u5904\u76f8\u5e94\u89e6\u53d1SP\u7684\u53cd\u7701\u6539\u6b63 (\u53c2\u800324054-\u5b9e\u8df5);\n *      2021.10.17: IRT\u89e6\u53d1\u5668\u7406\u6027\u5931\u6548\u65f6,\u4e0d\u8fdb\u884c\u53cd\u7701 (\u53c2\u800324061-\u65b9\u68482);\n *      2021.11.30: \u5c06IRT\u89e6\u53d1\u5668\u4ea4\u7531\u4efb\u52a1\u6811\u6765\u5b8c\u6210,\u5373\u6bcf\u6761\u8f93\u5165\u66f4\u65b0\u5230\u4efb\u52a1\u6811,\u4efb\u52a1\u6811\u91cc\u6bcf\u4e2a\u5206\u652f\u90fd\u81ea\u5e26IRT\u9884\u6d4b;\n *                  > \u5f03\u505a,\u4f55\u5fc5\u7ed5\u5708\u5b50,\u539f\u6709\u505a\u6cd5: \u65f6\u5e8f\u9884\u6d4b\u76f4\u63a5\u505a\u89e6\u53d1\u5668\u5c31\u884c;\n *      2021.12.25: \u652f\u6301\u7406\u6027IRT\u53cd\u7701;\n *      2022.03.05: \u5c06forecastIRT\u5206\u88c2\u6210\u611f\u6027\u548c\u7406\u6027\u4e24\u4e2a\u90e8\u5206,\u5206\u522b\u5904\u7406\u4e0d\u540c\u7684\u8bc6\u522bprFos\u7ed3\u679c,\u89e6\u53d1\u4e0d\u540c\u7684\u53cd\u7701 (\u53c2\u800325134-\u65b9\u68482-B\u9884\u6d4b);\n *      2023.03.15: \u652f\u6301matchRFos\u4e5f\u8fdb\u884c\u9884\u6d4b\u5e76\u7edf\u8ba1SP (\u53c2\u800328182-todo2);\n *  @todo\n *      2021.03.22: \u8fed\u4ee3\u63d0\u9ad8\u9884\u6d4b\u7684\u51c6\u786e\u6027(1.\u4ee5\u66f4\u5177\u8c61\u4e3a\u51c6(\u7334\u5b50\u6015\u864e,\u609f\u7a7a\u4e0d\u6015) 2.\u4ee5\u66f4\u5168\u9762\u4e3a\u51c6(\u7334\u5b50\u6709\u9ebb\u9189\u67aa\u4e0d\u6015\u864e)) (\u53c2\u800322182);\n *  @status\n *      1. \u540e\u534a\u90e8\u5206\"\u6709mv\u5224\u65ad\"\u751f\u6548\u4e2d;"
        },
        {
            "comment": "This code defines a method for forecasting multi-match PRFos and includes single match PRFo processing. It updates the SP count, predicts frames using triggers, and supports rFos predictions.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCForecast/TCForecast.m\":32-61",
            "content": " *      2. \u524d\u534a\u90e8\u5206\"HNGL\u672b\u4f4d\u5224\u65ad\"\u672a\u542f\u7528 (\u56e0\u4e3amatchFos\u4e2d\u672a\u6db5\u76d6HNGL\u7c7b\u578b);\n */\n+(void) forecast_Multi:(NSArray*)matchPRFos{\n    //1. \u6570\u636e\u68c0\u67e5 (\u53c2\u800325031-1);\n    [theTC updateOperCount:kFILENAME];\n    Debug();\n    ISTitleLog(@\"matchFos\u9884\u6d4b\");\n    matchPRFos = ARRTOOK(matchPRFos);\n    //2. \u6bcf\u4e2apFo\u7684\u9884\u6d4b\u5904\u7406;\n    for (AIMatchFoModel *prFo in matchPRFos) {\n        //3. \u5df2\u53d1\u751f: \u8865\u4e0a\u5f53\u524d\u8fdb\u5ea6\u524d\u9762\u7684SP\u8ba1\u6570P+1 (\u53c2\u800327213-4);\n        AIFoNodeBase *matchFo = [SMGUtils searchNode:prFo.matchFo];\n        [matchFo updateSPStrong:0 end:prFo.cutIndex type:ATPlus];\n        //4. \u9884\u6d4b\u5e27: \u4e0b\u5e27\u9884\u6d4b\u89e6\u53d1\u5668; (\u53c2\u800325031-2) ->feedbackTIR;\n        [self forecast_Single:prFo];\n    }\n    DebugE();\n}\n/**\n *  MARK:--------------------\u5355\u6761prFo\u5904\u7406--------------------\n *  @desc \u53ef\u81ea\u52a8\u6839\u636ecutIndex\u5224\u65ad\u89e6\u53d1\u7406\u6027\u6216\u611f\u6027: \u53cd\u7701\u89e6\u53d1\u5668;\n *  @callers : 1. \u7528\u4e8e\u65b0root\u8c03\u7528; 2. \u7528\u4e8e\u53cd\u7701\u987a\u5229\u65f6\u63a8\u8fdb\u5230\u4e0b\u4e00\u5e27\u7684\u89e6\u53d1\u5668;\n *  @version\n *      2022.09.18: \u6709\u53cd\u9988\u65f6\u79fb\u81f3feedback\u53ca\u65f6\u5904\u7406 (\u53c2\u800327098-todo2&3&4);\n *      2023.03.15: \u652f\u6301rFos\u7684\u9884\u6d4b (\u53c2\u800328182-todo2);\n *      2023.03.15: rFos\u9884\u6d4b\u63a8\u8fdb\u5931\u8d25\u4e0d\u8bbe\u4e3aCanset(\u56e0\u4e3a\u5b83\u5931\u8d25\u5e76\u4e0d\u610f\u5473\u7740\u89e3\u51b3\u4e86pFo) (\u53c2\u800328182-todo3);\n *      2023.03.21: \u4fee\u590d: pFo\u5148\u5931\u6548,\u5bfc\u81f4\u540e\u9762\u751f\u6210Canset\u65f6,\u672a\u6267\u884c\u5230\u6b64pFo\u7684\u95ee\u9898 (\u53c2\u800329011-\u95ee\u9898);"
        },
        {
            "comment": "This code is responsible for forecasting a single item. It prepares the data and checks if it's not the last cut position. If not, it sets the status to \"LastWait\" and constructs a rationality trigger, which waits for feedback. If the status remains as \"LastWait\", then the code performs rationality reflections on the item with the current cut index and type \"ATSub\".",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCForecast/TCForecast.m\":62-84",
            "content": " */\n+(void) forecast_Single:(AIMatchFoModel*)item{\n    //1. \u6570\u636e\u51c6\u5907;\n    AIFoNodeBase *matchFo = [SMGUtils searchNode:item.matchFo];\n    NSInteger maxCutIndex = matchFo.count - 1;\n    NSInteger curCutIndex = item.cutIndex;\n    //2. ========> \u975e\u672b\u4f4d\u65f6,\u7406\u6027\u53cd\u7701 (\u53c2\u800325031-2);\n    if (curCutIndex < maxCutIndex) {\n        //4. \u8bbe\u4e3a\u7b49\u5f85\u53cd\u9988\u72b6\u6001 & \u6784\u5efa\u53cd\u7701\u89e6\u53d1\u5668;\n        [item setStatus:TIModelStatus_LastWait forCutIndex:curCutIndex];\n        double deltaTime = [NUMTOOK(ARR_INDEX(matchFo.deltaTimes, curCutIndex + 1)) doubleValue];\n        NSLog(@\"---//\u7406\u6027IRT\u89e6\u53d1\u5668\u65b0\u589e\u7b49\u5f85\u53cd\u9988:%p (%@ | useTime:%.2f)\",matchFo,Fo2FStr(matchFo),deltaTime);\n        [AITime setTimeTrigger:deltaTime trigger:^{\n            //5. \u5982\u679c\u72b6\u6001\u8fd8\u662fWait,\u5219\u65e0\u53cd\u9988:\n            TIModelStatus status = [item getStatusForCutIndex:curCutIndex];\n            if (status == TIModelStatus_LastWait) {\n                NSLog(@\"---//IR\u53cd\u7701\u89e6\u53d1\u5668\u6267\u884c:%p F%ld \u72b6\u6001:%@\",matchFo,matchFo.pointer.pointerId,TIStatus2Str(status));\n                //6. \u5219\u8fdb\u884c\u7406\u6027IRT\u53cd\u7701;\n                [TCRethink reasonInRethink:item cutIndex:curCutIndex type:ATSub];"
        },
        {
            "comment": "This code snippet checks if the item has reached its final cut index. If it has, it proceeds to check if there is a matching frame of opinion (pFo). If a pFo exists, the code marks the task as expired and pushes the frame as finished. If the item's status is not the maximum cut index, it checks if there is a matching frame of opinion that isn't complete. If such an opinion exists, it sets the item to wait for feedback and constructs a feedback trigger with the delta time of the opinion. This trigger will later trigger if the item's status has changed to OutBack.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCForecast/TCForecast.m\":86-114",
            "content": "                //7. \u5931\u8d25\u72b6\u6001\u6807\u8bb0;\n                [item setStatus:TIModelStatus_OutBackNone forCutIndex:curCutIndex];\n                //8. \u53ea\u6709pFo\u65f6,\u624d\u8bbe\u5b9a\u5931\u6548,\u4ee5\u53ca\u5c06\u63a8\u8fdb\u5931\u8d25\u7684\u5b8c\u5168\u65f6\u5e8f\u8bbe\u4e3aprotoCanset (\u53c2\u800328182-todo3);\n                if (matchFo.cmvNode_p) {\n                    //10. \u4e2d\u95f4\u5e27\u63a8\u8fdb\u5931\u8d25\u65f6,\u5373\u63d0\u524d\u8fbe\u5230\u7ec8\u70b9,\u5373\u5904\u7406\u63a8\u8fdb\u4e3a\u5b8c\u5168\u65f6\u5e8f (\u53c2\u800327183);\n                    [item pushFrameFinish];\n                    //9. \u5931\u6548\u5224\u65ad: pFo\u4efb\u52a1\u5931\u6548 (\u53c2\u800327093-\u6761\u4ef62 & 27095-2);\n                    item.isExpired = true;\n                }\n            }\n        }];\n    }\n    //3. ========> \u672b\u4f4d\u611f\u6027\u53cd\u7701 (\u53c2\u800325031-2) ->feedbackTIP;\n    else if(item.cutIndex == maxCutIndex){\n        //4. \u6709mv\u65f6\u624d\u611f\u6027\u53cd\u7701;\n        if (!matchFo.cmvNode_p) return;\n        //9. \u8bbe\u4e3a\u7b49\u5f85\u53cd\u9988\u72b6\u6001 & \u6784\u5efa\u53cd\u7701\u89e6\u53d1\u5668;\n        [item setStatus:TIModelStatus_LastWait forCutIndex:curCutIndex];\n        double deltaTime = matchFo.mvDeltaTime;\n        NSLog(@\"---//\u611f\u6027IRT\u89e6\u53d1\u5668\u65b0\u589e\u7b49\u5f85\u53cd\u9988:%p (%@ | useTime:%.2f)\",matchFo,Fo2FStr(matchFo),deltaTime);\n        [AITime setTimeTrigger:deltaTime trigger:^{\n            //10. \u5982\u679c\u72b6\u6001\u5df2\u6539\u6210OutBack,\u8bf4\u660e\u6709\u53cd\u9988;\n            TIModelStatus status = [item getStatusForCutIndex:curCutIndex];"
        },
        {
            "comment": "This code updates the item status based on its score and performs a perceptual reflection if necessary. If the item's status is \"LastWait\" and the score is not zero, it determines whether the item is a positive or negative example and triggers a perceptual rethink accordingly. After that, it marks the item as expired and pushes the frame finish for further processing.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCForecast/TCForecast.m\":115-140",
            "content": "            CGFloat score = [AIScore score4MV:matchFo.cmvNode_p ratio:1.0f];\n            if (status == TIModelStatus_LastWait) {\n                if (score != 0) {\n                    //10. \u6b63mv\u672a\u53cd\u9988\u4e3aS(\u574f) \u6216\u8d1fmv\u672a\u53cd\u9988\u4e3aP(\u597d);\n                    AnalogyType type = score > 0 ? ATSub : ATPlus;\n                    //11. \u5219\u8fdb\u884c\u611f\u6027IRT\u53cd\u7701;\n                    [TCRethink perceptInRethink:item type:type];\n                    NSLog(@\"---//IP\u53cd\u7701\u89e6\u53d1\u5668\u6267\u884c:%p F%ld \u72b6\u6001:%@\",matchFo,matchFo.pointer.pointerId,TIStatus2Str(status));\n                }\n                //12. \u5931\u8d25\u72b6\u6001\u6807\u8bb0;\n                [item setStatus:TIModelStatus_OutBackNone forCutIndex:curCutIndex];\n            }\n            //14. \u6700\u672b\u5e27\u63a8\u8fdb\u5b8c\u5168\u65f6,\u65e0\u8bba\u6210\u8d25\u90fd\u7b97\u7ec8\u70b9,\u5219\u5904\u7406\u63a8\u8fdb\u4e3a\u5b8c\u5168\u65f6\u5e8f (\u53c2\u800327183);\n            [item pushFrameFinish];\n            //13. pFo\u4efb\u52a1\u5931\u6548 (\u53c2\u800327093-\u6761\u4ef61 & 27095-1);\n            item.isExpired = true;\n        }];\n    }\n}\n@end"
        }
    ]
}