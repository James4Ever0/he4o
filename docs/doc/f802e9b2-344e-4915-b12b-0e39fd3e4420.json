{
    "summary": "This UIColor extension provides methods for RGB manipulation, luminance mapping, and color representation, as well as undocumented APIs for creating colors from hex strings and names.",
    "details": [
        {
            "comment": "This code defines a UIColor category named UIColor_Expanded which adds several read-only properties and methods to the UIColor class. The properties include colorSpaceModel, canProvideRGBComponents, red, green, blue, white, and alpha, while the methods provide functionality such as converting RGB components into hex format, returning an array of RGB components, and mapping luminance.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/Demo/Extension/UIColor+expanded.h\":1-30",
            "content": "/****\n VOORBEELDEN\n [UIColor colorWithRGBHex:0xff00ff];\n [UIColor colorWithHexString:@\"0xff00ff\"]\n *******/\n#import <UIKit/UIKit.h>\n#define SUPPORTS_UNDOCUMENTED_API\t0\n@interface UIColor (UIColor_Expanded)\n@property (nonatomic, readonly) CGColorSpaceModel colorSpaceModel;\n@property (nonatomic, readonly) BOOL canProvideRGBComponents;\n@property (nonatomic, readonly) CGFloat red; // Only valid if canProvideRGBComponents is YES\n@property (nonatomic, readonly) CGFloat green; // Only valid if canProvideRGBComponents is YES\n@property (nonatomic, readonly) CGFloat blue; // Only valid if canProvideRGBComponents is YES\n@property (nonatomic, readonly) CGFloat white; // Only valid if colorSpaceModel == kCGColorSpaceModelMonochrome\n@property (nonatomic, readonly) CGFloat alpha;\n@property (nonatomic, readonly) UInt32 rgbHex;\n- (NSString *)colorSpaceString;\n- (NSArray *)arrayFromRGBAComponents;\n- (BOOL)red:(CGFloat *)r green:(CGFloat *)g blue:(CGFloat *)b alpha:(CGFloat *)a;\n- (UIColor *)colorByLuminanceMapping;\n- (UICo"
        },
        {
            "comment": "Extension of UIColor with methods to manipulate colors by RGB values, lighten or darken, multiply or add, and generate random or hex string representation.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/Demo/Extension/UIColor+expanded.h\":30-50",
            "content": "lor *)colorByMultiplyingByRed:(CGFloat)red green:(CGFloat)green blue:(CGFloat)blue alpha:(CGFloat)alpha;\n- (UIColor *)       colorByAddingRed:(CGFloat)red green:(CGFloat)green blue:(CGFloat)blue alpha:(CGFloat)alpha;\n- (UIColor *) colorByLighteningToRed:(CGFloat)red green:(CGFloat)green blue:(CGFloat)blue alpha:(CGFloat)alpha;\n- (UIColor *)  colorByDarkeningToRed:(CGFloat)red green:(CGFloat)green blue:(CGFloat)blue alpha:(CGFloat)alpha;\n- (UIColor *)colorByMultiplyingBy:(CGFloat)f;\n- (UIColor *)       colorByAdding:(CGFloat)f;\n- (UIColor *) colorByLighteningTo:(CGFloat)f;\n- (UIColor *)  colorByDarkeningTo:(CGFloat)f;\n- (UIColor *)colorByMultiplyingByColor:(UIColor *)color;\n- (UIColor *)       colorByAddingColor:(UIColor *)color;\n- (UIColor *) colorByLighteningToColor:(UIColor *)color;\n- (UIColor *)  colorByDarkeningToColor:(UIColor *)color;\n- (NSString *)stringFromColor;\n- (NSString *)hexStringFromColor;\n+ (UIColor *)randomColor;\n+ (UIColor *)colorWithRGBHex:(UInt32)hex;\n+ (UIColor *)colorWithTheHexString:(NSString *)stringToConvert;"
        },
        {
            "comment": "This code defines a class extension for UIColor, adding three methods to create colors from hex strings and a name. It also includes an optional section for undocumented methods related to color creation using undocumented APIs.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/Demo/Extension/UIColor+expanded.h\":51-64",
            "content": "+ (UIColor *)colorWithHexString:(NSString *)color alpha:(CGFloat)alpha;\n+ (UIColor *)colorWithHexString:(NSString *)color ;\n+ (UIColor *)colorWithName:(NSString *)cssColorName;\n@end\n#if SUPPORTS_UNDOCUMENTED_API\n// UIColor_Undocumented_Expanded\n// Methods which rely on undocumented methods of UIColor\n@interface UIColor (UIColor_Undocumented_Expanded)\n- (NSString *)fetchStyleString;\n- (UIColor *)rgbColor; // Via Poltras\n@end\n#endif // SUPPORTS_UNDOCUMENTED_API"
        }
    ]
}