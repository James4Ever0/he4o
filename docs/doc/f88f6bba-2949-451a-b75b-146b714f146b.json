{
    "summary": "The method retrieves scene tree data, filters and converts father scenes with specific cut points into `AISceneModel` objects. It handles duplicates, identifiers, and cutpoints before returning a structured array of resulting models for further scene manipulation or data organization.",
    "details": [
        {
            "comment": "This method retrieves the R scene tree for a given demand. It prepares data, collects I models, father models, and brother models. It then returns an array containing the collected I, Father, and Brother scene models.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCScene/TCScene.m\":0-31",
            "content": "//\n//  TCScene.m\n//  SMG_NothingIsAll\n//\n//  Created by jia on 2023/4/17.\n//  Copyright \u00a9 2023\u5e74 XiaoGang. All rights reserved.\n//\n#import \"TCScene.h\"\n@implementation TCScene\n/**\n *  MARK:--------------------R\u573a\u666f\u6811--------------------\n *  @desc \u6536\u96c6\u4e09\u5904\u5019\u9009\u96c6 (\u53c2\u800329069-todo3);\n *  @status \u76ee\u524d\u4ec5\u652f\u6301R\u4efb\u52a1,\u7b49\u5230\u505a\u53bb\u76ae\u8bad\u7ec3\u65f6\u6709\u9700\u8981\u518d\u652f\u6301H\u4efb\u52a1 (29069-todo2);\n *  @version\n *      2023.04.13: \u8fc7\u6ee4\u51fa\u6709\u540c\u533amv\u6307\u5411\u7684,\u624d\u6536\u96c6\u5230\u5404\u7ea7\u5019\u9009\u96c6\u4e2d (\u53c2\u800329069-todo4);\n *      2023.04.14: \u4e3asceneModel\u8bb0\u5f55cutIndex (\u53c2\u800329069-todo5.6);\n *      2023.05.07: TCScene\u652f\u6301\u8fc7\u6ee4\u5668(\u53c2\u80032908a-todo3);\n *  @result \u5c06\u4e09\u7ea7\u5168\u6536\u96c6\u8fd4\u56de (\u8fd4\u56de\u7684\u6570\u636e\u4e3a: I,Father,Brother\u4e09\u8005\u573a\u666f\u751f\u6210\u7684CansetModel);\n */\n+(NSArray*) rGetSceneTree:(ReasonDemandModel*)demand {\n    //1. \u6570\u636e\u51c6\u5907;\n    NSArray *iModels = nil;\n    NSMutableArray *fatherModels = [[NSMutableArray alloc] init];\n    NSMutableArray *brotherModels = [[NSMutableArray alloc] init];\n    //2. \u53d6\u81ea\u5df1\u7ea7;\n    iModels = [SMGUtils convertArr:demand.validPFos convertBlock:^id(AIMatchFoModel *pFo) {\n        NSInteger aleardayCount = [TCSolutionUtil getRAleardayCount:demand pFo:pFo];\n        return [AISceneModel newWithBase:nil type:SceneTypeI scene:pFo.matchFo cutIndex:aleardayCount - 1];"
        },
        {
            "comment": "This code is filtering father scenes that contain a specific cut point and converting them into `AISceneModel` objects. It first searches for nodes in the scene, applies filters to get relevant models, and finally adds the filtered models to an array of father models.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCScene/TCScene.m\":32-53",
            "content": "    }];\n    //3. \u53d6\u7236\u7c7b\u7ea7;\n    for (AISceneModel *iModel in iModels) {\n        AIFoNodeBase *iFo = [SMGUtils searchNode:iModel.scene];//84ms\n        NSArray *fatherScene_ps = [AIFilter rSolutionSceneFilter:iFo type:iModel.type];\n        //a. \u8fc7\u6ee4\u5668 & \u8f6c\u4e3aCansetModel;\n        NSArray *itemFatherModels = [SMGUtils convertArr:fatherScene_ps convertBlock:^id(AIKVPointer *item) {\n            //a1. \u8fc7\u6ee4father\u4e0d\u542b\u622a\u70b9\u7684 (\u53c2\u800329069-todo5.6);\n            NSDictionary *indexDic = [iFo getAbsIndexDic:item];\n            NSNumber *fatherCutIndex = ARR_INDEX([indexDic allKeysForObject:@(iModel.cutIndex)], 0);\n            if (!fatherCutIndex) return nil;\n            //a2. \u8fc7\u6ee4\u65e0\u540c\u533amv\u6307\u5411\u7684 (\u53c2\u800329069-todo4);\n            AIFoNodeBase *fo = [SMGUtils searchNode:item];\n            if (![iFo.cmvNode_p.identifier isEqualToString:fo.cmvNode_p.identifier]) return nil;\n            //a3. \u5c06father\u751f\u6210\u6a21\u578b;\n            return [AISceneModel newWithBase:iModel type:SceneTypeFather scene:item cutIndex:fatherCutIndex.integerValue];\n        }];\n        [fatherModels addObjectsFromArray:itemFatherModels];"
        },
        {
            "comment": "This code appears to be searching for a specific scene model within another scene, filtering out any scenes that do not contain cutpoints or have different same-region identifiers. It then creates an array of resulting models (brothers) and returns them. The comments in the code refer to potential future improvements and references.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCScene/TCScene.m\":54-73",
            "content": "    }\n    //4. \u53d6\u5144\u5f1f\u7ea7;\n    for (AISceneModel *fatherModel in fatherModels) {\n        AIFoNodeBase *fatherFo = [SMGUtils searchNode:fatherModel.scene];\n        NSArray *brotherScene_ps = [AIFilter rSolutionSceneFilter:fatherFo type:fatherModel.type];//1799ms\n        //a. \u8fc7\u6ee4\u5668 & \u8f6c\u4e3aCansetModel;\n        NSArray *itemBrotherModels = [SMGUtils convertArr:brotherScene_ps convertBlock:^id(AIKVPointer *item) {\n            //a1. \u8fc7\u6ee4brother\u4e0d\u542b\u622a\u70b9\u7684 (\u53c2\u800329069-todo5.6);\n            NSDictionary *indexDic = [fatherFo getConIndexDic:item];\n            NSNumber *brotherCutIndex = [indexDic objectForKey:@(fatherModel.cutIndex)];\n            if (!brotherCutIndex) return nil;\n            //a2. \u8fc7\u6ee4\u65e0\u540c\u533amv\u6307\u5411\u7684 (\u53c2\u800329069-todo4);\n            AIFoNodeBase *fo = [SMGUtils searchNode:item];//68ms\n            if (![fatherFo.cmvNode_p.identifier isEqualToString:fo.cmvNode_p.identifier]) return nil;\n            //a3. \u5c06brother\u751f\u6210\u6a21\u578b;\n            return [AISceneModel newWithBase:fatherModel type:SceneTypeBrother scene:item cutIndex:brotherCutIndex.integerValue];"
        },
        {
            "comment": "This code is preparing a scene array by filtering out duplicate scenes, ensuring that father scene models are not in iScene and brother models are neither in iScene nor fatherScene. Additionally, it removes any duplicates within the father and brother model arrays.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCScene/TCScene.m\":74-98",
            "content": "        }];\n        [brotherModels addObjectsFromArray:itemBrotherModels];\n    }\n    //5. \u53bb\u91cd1: \u6570\u636e\u51c6\u5907;\n    NSArray *iSceneArr = [SMGUtils convertArr:iModels convertBlock:^id(AISceneModel *obj) {\n        return obj.scene;\n    }];\n    NSArray *fatherSceneArr = [SMGUtils convertArr:fatherModels convertBlock:^id(AISceneModel *obj) {\n        return obj.scene;\n    }];\n    //6. \u53bb\u91cd2: \u4f18\u5148\u7ea7I>F>B: \u5373I\u6709\u7684F\u548cB\u4e0d\u80fd\u518d\u6709,F\u6709\u7684B\u4e0d\u80fd\u518d\u6709;\n    fatherModels = [SMGUtils filterArr:fatherModels checkValid:^BOOL(AISceneModel *item) {\n        return ![iSceneArr containsObject:item.scene];\n    }];\n    brotherModels = [SMGUtils filterArr:brotherModels checkValid:^BOOL(AISceneModel *item) {\n        return ![iSceneArr containsObject:item.scene] && ![fatherSceneArr containsObject:item.scene];\n    }];\n    //7. \u53bb\u91cd3: \u672c\u5c42\u9632\u91cd: \u5373F\u5185\u4e0d\u80fd\u91cd\u590d,B\u5185\u4e0d\u80fd\u91cd\u590d;\n    fatherModels = [SMGUtils removeRepeat:fatherModels convertBlock:^id(AISceneModel *obj) {\n        return obj.scene;\n    }];\n    brotherModels = [SMGUtils removeRepeat:brotherModels convertBlock:^id(AISceneModel *obj) {"
        },
        {
            "comment": "This code retrieves the H scene tree from a demand model by preparing necessary arrays, handling potential bugs related to incorrect target assignment, and iterating through the scene tree structure. The result is returned as an array containing all three levels of the scene tree: items (iModels), fathers (fatherModels), and brothers (brotherModels).",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCScene/TCScene.m\":99-126",
            "content": "        return obj.scene;\n    }];\n    //8. \u5c06\u4e09\u7ea7\u5168\u6536\u96c6\u8fd4\u56de;\n    NSMutableArray *result = [[NSMutableArray alloc] init];\n    [result addObjectsFromArray:iModels];\n    [result addObjectsFromArray:fatherModels];\n    [result addObjectsFromArray:brotherModels];\n    NSLog(@\"\u7b2c1\u6b65 R\u573a\u666f\u6811\u679d\u70b9\u6570 I:%ld + Father:%ld + Brother:%ld = \u603b:%ld\",iModels.count,fatherModels.count,brotherModels.count,result.count);\n    return result;\n}\n/**\n *  MARK:--------------------H\u573a\u666f\u6811--------------------\n *  @version\n *      2023.09.12: BUG_\u4fee\u590d\u628atargetFoModel\u9519\u5f53\u6210scene,\u5bfc\u81f4\u573a\u666f\u6811\u8fd4\u56de\u51e0\u4e4e\u4e3a\u7a7a\u7684\u95ee\u9898 (\u53c2\u800330128);\n *      2023.09.15: RCanset\u505a\u4e3aHScene (\u53c2\u800330131-todo2);\n */\n+(NSArray*) hGetSceneTree:(HDemandModel*)demand {\n    //1. \u6570\u636e\u51c6\u5907;\n    NSMutableArray *iModels = [[NSMutableArray alloc] init];\n    NSMutableArray *fatherModels = [[NSMutableArray alloc] init];\n    NSMutableArray *brotherModels = [[NSMutableArray alloc] init];\n    TOFoModel *targetFoM = (TOFoModel*)demand.baseOrGroup.baseOrGroup;\n    NSInteger targetIndex = targetFoM.actionIndex;\n    //2. \u53d6\u81ea\u5df1\u7ea7;\n    AISceneModel *iM"
        },
        {
            "comment": "This code is creating a new AISceneModel for each item in iModels, filtering and converting them into CansetModel, then adding the filtered items to fatherModels. This appears to be part of a larger process related to scene manipulation or data organization.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCScene/TCScene.m\":126-148",
            "content": "odel = [AISceneModel newWithBase:nil type:SceneTypeI scene:targetFoM.content_p cutIndex:targetIndex - 1];\n    [iModels addObject:iModel];\n    //3. \u53d6\u7236\u7c7b\u7ea7;\n    for (AISceneModel *iModel in iModels) {\n        AIFoNodeBase *iFo = [SMGUtils searchNode:iModel.scene];//84ms\n        NSArray *fatherScene_ps = [AIFilter hSolutionSceneFilter:iModel];\n        //a. \u8fc7\u6ee4\u5668 & \u8f6c\u4e3aCansetModel;\n        NSArray *itemFatherModels = [SMGUtils convertArr:fatherScene_ps convertBlock:^id(AIKVPointer *item) {\n            //a1. \u8fc7\u6ee4father\u4e0d\u542b\u622a\u70b9\u7684 (\u53c2\u800329069-todo5.6);\n            NSDictionary *indexDic = [iFo getAbsIndexDic:item];\n            NSNumber *fatherCutIndex = ARR_INDEX([indexDic allKeysForObject:@(iModel.cutIndex)], 0);\n            if (!fatherCutIndex) return nil;\n            //a3. \u5c06father\u751f\u6210\u6a21\u578b;\n            return [AISceneModel newWithBase:iModel type:SceneTypeFather scene:item cutIndex:fatherCutIndex.integerValue];\n        }];\n        [fatherModels addObjectsFromArray:itemFatherModels];\n    }\n    //4. \u53d6\u5144\u5f1f\u7ea7;\n    for (AISceneModel *fatherModel in fatherModels) {"
        },
        {
            "comment": "This code is filtering out nodes and converting them to CansetModel, then adding them to the fatherModels and brotherModels arrays. Finally, it combines all three models into a single result array.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCScene/TCScene.m\":149-169",
            "content": "        AIFoNodeBase *fatherFo = [SMGUtils searchNode:fatherModel.scene];\n        NSArray *brotherScene_ps = [AIFilter hSolutionSceneFilter:fatherModel];//1799ms\n        //a. \u8fc7\u6ee4\u5668 & \u8f6c\u4e3aCansetModel;\n        NSArray *itemBrotherModels = [SMGUtils convertArr:brotherScene_ps convertBlock:^id(AIKVPointer *item) {\n            //a1. \u8fc7\u6ee4brother\u4e0d\u542b\u622a\u70b9\u7684 (\u53c2\u800329069-todo5.6);\n            NSDictionary *indexDic = [fatherFo getConIndexDic:item];\n            NSNumber *brotherCutIndex = [indexDic objectForKey:@(fatherModel.cutIndex)];\n            if (!brotherCutIndex) return nil;\n            //a3. \u5c06brother\u751f\u6210\u6a21\u578b;\n            return [AISceneModel newWithBase:fatherModel type:SceneTypeBrother scene:item cutIndex:brotherCutIndex.integerValue];\n        }];\n        [brotherModels addObjectsFromArray:itemBrotherModels];\n    }\n    //5. \u5c06\u4e09\u7ea7\u5168\u6536\u96c6\u8fd4\u56de;\n    NSMutableArray *result = [[NSMutableArray alloc] init];\n    [result addObjectsFromArray:iModels];\n    [result addObjectsFromArray:fatherModels];\n    [result addObjectsFromArray:brotherModels];"
        },
        {
            "comment": "This code snippet logs the number of models in different categories and returns a result. It calculates the sum of iModels count, fatherModels count, and brotherModels count to get the total number of models (result). The log statement displays these counts for each category.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/SMG_NothingIsAll/AIFoundation/AIThinkingControl/TCScene/TCScene.m\":170-174",
            "content": "    NSLog(@\"\u7b2c1\u6b65 H\u573a\u666f\u6811\u679d\u70b9\u6570 I:%ld + Father:%ld + Brother:%ld = \u603b:%ld\",iModels.count,fatherModels.count,brotherModels.count,result.count);\n    return result;\n}\n@end"
        }
    ]
}