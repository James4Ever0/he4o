{
    "summary": "This code clears memory by removing records, prepares data, and clears specified memories. It also backs up UserDefaults, KVFiles, heLog to savePath using PINDiskCache for UserDefaults. The code reads UserDefaults, KV files, and HeLog data, backing up the latter while logging progress, adds heLogDatas to cache, and reloads heLogView upon completion.",
    "details": [
        {
            "comment": "This code is clearing all memory by removing UserDefaults, XGRedis, and XGWedis records. It first prepares data such as folders, cache paths, and counts the total memory to clear. It then removes UserDefaults entries, clears XGRedis and XGWedis memories.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/ThirdParty/MemManager/MemManager.m\":0-35",
            "content": "//\n//  MemManager.m\n//  SMG_NothingIsAll\n//\n//  Created by jia on 2021/6/6.\n//  Copyright \u00a9 2021\u5e74 XiaoGang. All rights reserved.\n//\n#import \"MemManager.h\"\n#import \"XGRedis.h\"\n#import \"XGWedis.h\"\n#import \"NSFile+Extension.h\"\n#import \"PINDiskCache.h\"\n@implementation MemManager\n+(void) removeAllMemory{\n    //1. \u6570\u636e\u51c6\u5907;\n    NSArray *kvFolders = kFN_ALL;\n    NSString *cachePath = kCachePath;\n    NSInteger sumCount = 0;\n    //1. \u6e05\u7a7aUserDefaults\u8bb0\u5fc6;\n    NSDictionary *dic = DICTOOK([[NSUserDefaults standardUserDefaults] dictionaryRepresentation]);\n    sumCount += dic.count;\n    NSLog(@\"===> \u6e05\u7a7aUserDefaults\u8bb0\u5fc6 \\t(%lu)\",(unsigned long)dic.count);\n    for (id key in dic) [[NSUserDefaults standardUserDefaults] removeObjectForKey:key];\n    [[NSUserDefaults standardUserDefaults] synchronize];\n    //2. \u6e05\u7a7aXGWedis\n    NSLog(@\"===> \u6e05\u7a7aXGRedis \\t(%lu)\",XGRedis.sharedInstance.count);\n    sumCount += XGRedis.sharedInstance.count;\n    [[XGRedis sharedInstance] clear];\n    //2. \u6e05\u7a7aXGWedis\n    NSLog(@\"===> \u6e05\u7a7aXGWedis\u8bb0\u5fc6 \\t(%lu)\",XGWedis.sharedInstance.count);"
        },
        {
            "comment": "Clears XGWedis memory, empties KVFile folders, and deletes associated files. Also clears heLog and saves all memory to specified saveName directory.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/ThirdParty/MemManager/MemManager.m\":36-61",
            "content": "    sumCount += XGWedis.sharedInstance.count;\n    [[XGWedis sharedInstance] clear];\n    //3. \u6e05\u7a7aKVFile\n    for (NSString *folderName in kvFolders) {\n        NSMutableString *fileRootPath = [[NSMutableString alloc] initWithFormat:@\"%@/%@\",cachePath,folderName];\n        NSArray *subFiles = [NSFile_Extension subFiles_AllDeep:fileRootPath];\n        NSLog(@\"===> \u6e05\u7a7aKVFile\u8bb0\u5fc6:%@ \\t(%lu)\",folderName,subFiles.count);\n        sumCount += subFiles.count;\n        [[NSFileManager defaultManager] removeItemAtPath:fileRootPath error:nil];\n    }\n    //4. \u6e05\u7a7aheLog\n    NSLog(@\"===> \u6e05\u7a7aHeLog\u8bb0\u5fc6 \\t(%lu)\",theApp.heLogView.count);\n    sumCount += theApp.heLogView.count;\n    [theApp.heLogView clear];\n    NSLog(@\"======> \u6e05\u7a7a\u8bb0\u5fc6Finish \\t(%lu)\",sumCount);\n}\n+(void) saveAllMemory:(NSString*)saveName{\n    //1. \u6570\u636e\u51c6\u5907;\n    NSLog(@\"\u5b58\u50a8\u8bb0\u5fc6\u81f3: %@\",saveName);\n    NSArray *kvFolders = kFN_ALL;\n    NSString *cachePath = kCachePath;\n    NSMutableString *savePath = [[NSMutableString alloc] initWithFormat:@\"%@/save/%@\",cachePath,saveName];\n    NSInteger sumCount = 0;"
        },
        {
            "comment": "Backing up user defaults, KVFiles, and heLog to savePath.\n\nSummary: Backup user defaults, KVFiles, and heLog to specified savePath.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/ThirdParty/MemManager/MemManager.m\":63-81",
            "content": "    //2. \u5907\u4efdUserDefaults\u8bb0\u5fc6;\n    NSDictionary *dic = DICTOOK([[NSUserDefaults standardUserDefaults] dictionaryRepresentation]);\n    sumCount += dic.count;\n    NSLog(@\"===> \u5b58\u50a8UserDefaults\u8bb0\u5fc6 \\t(%lu)\",(unsigned long)dic.count);\n    PINDiskCache *cache = [[PINDiskCache alloc] initWithName:@\"\" rootPath:savePath];\n    [cache setObject:dic forKey:@\"UserDefaults\"];\n    //3. \u5907\u4efdKVFile\n    for (NSString *folderName in kvFolders) {\n        NSMutableString *fromFolder = [[NSMutableString alloc] initWithFormat:@\"%@/%@\",cachePath,folderName];\n        NSMutableString *toFolder = [[NSMutableString alloc] initWithFormat:@\"%@/%@\",savePath,folderName];\n        NSArray *subFiles = [NSFile_Extension subFiles_AllDeep:fromFolder];\n        NSLog(@\"===> \u5b58\u50a8KVFile\u8bb0\u5fc6:%@ \\t(%lu)\",folderName,subFiles.count);\n        sumCount += subFiles.count;\n        [[NSFileManager defaultManager] copyItemAtPath:fromFolder toPath:toFolder error:nil];\n    }\n    //4. \u5907\u4efdheLog\n    PINDiskCache *readHeLogCache = [[PINDiskCache alloc] initWithName:kPath_HeLog];//\u8bfb"
        },
        {
            "comment": "This code reads all memory data from the cache and clears the current memory before storing it. It then logs the count of HeLog data being read. The readAllMemory method is called with a specific name as an argument, and it prepares by setting up folders, paths, and clearing existing memory. The code also reads UserDefaults memory using PINDiskCache.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/ThirdParty/MemManager/MemManager.m\":82-105",
            "content": "    NSMutableArray *heLogDatas = [[NSMutableArray alloc] initWithArray:[readHeLogCache objectForKey:kFile_HeLog]];\n    sumCount += heLogDatas.count;\n    NSLog(@\"===> \u5b58\u50a8HeLog\u6761\u6570:%lu\",heLogDatas.count);\n    PINDiskCache *toHeLogCache = [[PINDiskCache alloc] initWithName:kPath_HeLog rootPath:savePath];//\u5199\n    [toHeLogCache setObject:heLogDatas forKey:kFile_HeLog];\n    NSLog(@\"======> \u5b58\u50a8\u8bb0\u5fc6Finish \\t(%lu)\",sumCount);\n}\n+(void) readAllMemory:(NSString*)readName{\n    //1. \u6570\u636e\u51c6\u5907;\n    NSLog(@\"\u8bfb\u53d6\u50a8\u8bb0\u5fc6\u5f00\u59cb: %@\",readName);\n    NSArray *kvFolders = kFN_ALL;\n    NSString *cachePath = kCachePath;\n    NSMutableString *readPath = [[NSMutableString alloc] initWithFormat:@\"%@/save/%@\",cachePath,readName];\n    NSInteger sumCount = 0;\n    //2. \u8bfb\u53d6\u524d,\u5148\u6e05\u7a7a\u5f53\u524d\u8bb0\u5fc6;\n    [self removeAllMemory];\n    //3. \u8bfb\u53d6UserDefaults\u8bb0\u5fc6;\n    PINDiskCache *cache = [[PINDiskCache alloc] initWithName:@\"\" rootPath:readPath];\n    NSDictionary *dic = DICTOOK([cache objectForKey:@\"UserDefaults\"]);\n    [[NSUserDefaults standardUserDefaults] setValuesForKeysWithDictionary:dic];"
        },
        {
            "comment": "This code performs the following tasks:\n1. Increments `sumCount` with the count of items in dictionary `dic`.\n2. Logs the message \"===> \u8bfb\u53d6UserDefaults\u8bb0\u5fc6 \\t(%lu)\" where the log is accompanied by the count of items in the `dic` dictionary.\n3. Reads KV files from folders within `readPath` and copies them to corresponding folders within `cachePath`. The number of subfiles in each folder is logged as \"===> \u8bfb\u53d6KVFile\u8bb0\u5fc6:%@ \\t(%lu)\" along with the folder name, and the count is added to `sumCount`.\n4. Backs up the `heLog` file by initializing a `PINDiskCache` object for reading and writing with specific names and paths. The number of `heLogDatas` is logged as \"===> \u8bfb\u53d6HeLog\u6761\u6570:%lu\" where `%lu` is replaced with the count of `heLogDatas`.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/ThirdParty/MemManager/MemManager.m\":106-124",
            "content": "    sumCount += dic.count;\n    NSLog(@\"===> \u8bfb\u53d6UserDefaults\u8bb0\u5fc6 \\t(%lu)\",(unsigned long)dic.count);\n    //4. \u8bfb\u53d6KVFile\n    for (NSString *folderName in kvFolders) {\n        NSMutableString *fromFolder = [[NSMutableString alloc] initWithFormat:@\"%@/%@\",readPath,folderName];\n        NSMutableString *toFolder = [[NSMutableString alloc] initWithFormat:@\"%@/%@\",cachePath,folderName];\n        NSArray *subFiles = [NSFile_Extension subFiles_AllDeep:fromFolder];\n        NSLog(@\"===> \u8bfb\u53d6KVFile\u8bb0\u5fc6:%@ \\t(%lu)\",folderName,subFiles.count);\n        sumCount += subFiles.count;\n        [[NSFileManager defaultManager] copyItemAtPath:fromFolder toPath:toFolder error:nil];\n    }\n    //4. \u5907\u4efdheLog\n    PINDiskCache *readHeLogCache = [[PINDiskCache alloc] initWithName:kPath_HeLog rootPath:readPath];//\u8bfb\n    NSMutableArray *heLogDatas = [[NSMutableArray alloc] initWithArray:[readHeLogCache objectForKey:kFile_HeLog]];\n    sumCount += heLogDatas.count;\n    NSLog(@\"===> \u8bfb\u53d6HeLog\u6761\u6570:%lu\",heLogDatas.count);\n    PINDiskCache *toHeLogCache = [[PINDiskCache alloc] initWithName:kPath_HeLog];//\u5199"
        },
        {
            "comment": "This code adds heLogDatas to the cache and then reloads the heLogView data, logging a message indicating the reading process has finished.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/ThirdParty/MemManager/MemManager.m\":125-131",
            "content": "    [toHeLogCache setObject:heLogDatas forKey:kFile_HeLog];\n    [theApp.heLogView reloadData:true];//\u91cd\u65b0\u52a0\u8f7d\u663e\u793a;\n    NSLog(@\"======> \u8bfb\u53d6\u8bb0\u5fc6Finish \\t(%lu)\",sumCount);\n}\n@end"
        }
    ]
}