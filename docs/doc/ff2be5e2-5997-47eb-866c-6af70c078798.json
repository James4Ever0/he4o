{
    "summary": "HeLogModel initializes internal properties, sets up a timer for notifications and includes methods like reloadData, addLog, getDatas, clear, count, and the private method \"notificationTimer\". This method performs MD5 hashing to prevent duplicate writing, saves new data to disk using PINDiskCache, and updates the MD5 hash.",
    "details": [
        {
            "comment": "HeLogModel is initializing its internal properties and functions. It sets up a mutable array 'datas', initializes a timer to trigger 'notificationTimer' every cHeLog2DBInterval, and reloads data from disk.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/ThirdParty/XGLog/HeLogModel.m\":0-44",
            "content": "//\n//  HeLog.m\n//  SMG_NothingIsAll\n//\n//  Created by jia on 2020/3/12.\n//  Copyright \u00a9 2020\u5e74 XiaoGang. All rights reserved.\n//\n#import \"HeLogModel.h\"\n#import \"PINCache.h\"\n#import \"SMGUtils+General.h\"\n#import \"HeLogUtil.h\"\n@interface HeLogModel ()\n@property (strong, nonatomic) NSMutableArray *datas;\n@property (strong,nonatomic) NSTimer *timer;            //\u8ba1\u65f6\u5668\n@property (strong, nonatomic) NSString *diskDataIden;   //\u73b0\u6301\u4e45\u5316\u6570\u636e\u7684\u6807\u8bc6\n@end\n@implementation HeLogModel\n-(id) init{\n    self = [super init];\n    if (self) {\n        [self initData];\n    }\n    return self;\n}\n-(void) initData{\n    //1. \u521d\u59cb\u5316\u5185\u5b58datas\u7b49;\n    self.datas = [[NSMutableArray alloc] init];\n    dispatch_async(dispatch_get_main_queue(), ^{\n        self.timer = [NSTimer scheduledTimerWithTimeInterval:cHeLog2DBInterval target:self selector:@selector(notificationTimer) userInfo:nil repeats:YES];\n    });\n    //2. \u91cd\u65b0\u52a0\u8f7d\u786c\u76d8;\n    [self reloadData];\n    NSLog(@\"===========HeLog Init Data %ld============\",self.datas.count);\n}\n//MARK:==============================================================="
        },
        {
            "comment": "The code contains methods for managing data in a HeLogModel instance. It includes a reloadData method to retrieve and update the model's data from disk, addLog method to append new log entries, getDatas method to retrieve all log entries, clear method to remove all log entries, and count method to retrieve the number of log entries.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/ThirdParty/XGLog/HeLogModel.m\":45-78",
            "content": "//MARK:                     < publicMethod >\n//MARK:===============================================================\n/**\n *  MARK:--------------------\u91cd\u52a0\u8f7d--------------------\n */\n-(void) reloadData{\n    PINDiskCache *cache = [[PINDiskCache alloc] initWithName:kPath_HeLog];\n    id file = [cache objectForKey:kFile_HeLog];\n    [self.datas removeAllObjects];\n    [self.datas addObjectsFromArray:file];\n    self.diskDataIden = [HeLogUtil idenByData:self.datas];\n}\n/**\n *  MARK:--------------------addLog--------------------\n */\n-(NSDictionary*) addLog:(NSString*)log{\n    log = STRTOOK(log);\n    long long nowTime = [[NSDate new] timeIntervalSince1970] * 1000L;\n    NSDictionary *addDic = @{kTime:@(nowTime),kLog:log};\n    [self.datas addObject:addDic];\n    return addDic;\n}\n-(NSArray*) getDatas{\n    return self.datas;\n}\n-(void) clear{\n    [self.datas removeAllObjects];\n    PINDiskCache *cache = [[PINDiskCache alloc] initWithName:kPath_HeLog];\n    [cache removeObjectForKey:kFile_HeLog];\n}\n-(NSInteger) count{\n    return self.datas.count;"
        },
        {
            "comment": "This code defines a private method called \"notificationTimer\" in the class. It first performs MD5 hashing on the data to ensure no duplicate writing to disk and checks if the MD5 hash is equal to a previously stored value. If they are equal, it returns without performing any further actions. If not, it saves the new data to disk using PINDiskCache and updates the MD5 hash for future reference.",
            "location": "\"/media/root/Prima/works/he4o/docs/src/ThirdParty/XGLog/HeLogModel.m\":79-103",
            "content": "}\n//MARK:===============================================================\n//MARK:                     < privateMethod >\n//MARK:===============================================================\n/**\n *  MARK:--------------------\u6301\u4e45\u5316--------------------\n */\n- (void)notificationTimer{\n    //1. md5\u53bb\u91cd,\u540c\u6837\u5185\u5bb9\u907f\u514d\u91cd\u590d\u5199\u786c\u76d8;\n    NSString *memDatasIden = [HeLogUtil idenByData:self.datas];\n    if ([memDatasIden isEqualToString:self.diskDataIden]) {\n        return;\n    }\n    //2. \u5b58\u50a8 (\u968f\u540e\u9700\u652f\u6301\u6587\u4ef6\u6d41\u5e7f\u544a\u5199\u5165);\n    PINDiskCache *cache = [[PINDiskCache alloc] initWithName:kPath_HeLog];\n    [cache setObject:self.datas forKey:kFile_HeLog];\n    //3. \u8bb0\u5f55\u786c\u76d8\u65e5\u5fd7\u6587\u4ef6\u7684md5;\n    self.diskDataIden = memDatasIden;\n}\n@end"
        }
    ]
}